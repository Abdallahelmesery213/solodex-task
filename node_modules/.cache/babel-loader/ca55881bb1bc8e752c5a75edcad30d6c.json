{"ast":null,"code":"import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return is.fun(value) ? value(...args) : value;\n}\n\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\n\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\n\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = function (props) {\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noopTransform;\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\n\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\n\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\n\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\n\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\n\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\n\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps) {\n  let timeFrame = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  useLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = 2 * Math.PI / 3;\nconst c5 = 2 * Math.PI / 4.5;\n\nconst bounceOut = x => {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n    return n1 * x * x;\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n};\n\nconst easings = {\n  linear: x => x,\n  easeInQuad: x => x * x,\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\n  easeInOutQuad: x => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n  easeInCubic: x => x * x * x,\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\n  easeInOutCubic: x => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n  easeInQuart: x => x * x * x * x,\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\n  easeInOutQuart: x => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n  easeInQuint: x => x * x * x * x * x,\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\n  easeInOutQuint: x => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n  easeInSine: x => 1 - Math.cos(x * Math.PI / 2),\n  easeOutSine: x => Math.sin(x * Math.PI / 2),\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\n  easeInExpo: x => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n  easeOutExpo: x => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n  easeInOutExpo: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2,\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\n  easeInOutCirc: x => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n  easeInOutBack: x => x < 0.5 ? Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\n  easeInElastic: x => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\n  easeOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\n  easeInOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2 : Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5) / 2 + 1,\n  easeInBounce: x => 1 - bounceOut(1 - x),\n  easeOutBounce: bounceOut,\n  easeInOutBounce: x => x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\n\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\n\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, _ref2) {\n  let {\n    key,\n    props,\n    defaultProps,\n    state,\n    actions\n  } = _ref2;\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\n\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\n\nconst getFinishedResult = function (value, finished) {\n  let cancelled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    finished,\n    cancelled\n  };\n};\n\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAniamtionSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAniamtionSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\n\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\n\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\n\nclass SkipAniamtionSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\n\nlet nextId$1 = 1;\n\nclass FrameValue extends FluidValue {\n  constructor() {\n    super(...arguments);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return Globals.to(this, args);\n  }\n\n  interpolate() {\n    deprecateInterpolate();\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\n\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\n\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\n\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\n\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\n\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) < 0.1;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n\n              if (finished) {\n                break;\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props) {\n  let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.loop;\n  let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.to;\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\n\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\n\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    args[_key4 - 2] = arguments[_key4];\n  }\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\n\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, _ref3 => {\n        let [onStart, result] = _ref3;\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, _ref4 => {\n        let [onChange, result] = _ref4;\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, _ref5 => {\n        let [onRest, result] = _ref5;\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\n\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\n\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n\n        props[key] = _ref6 => {\n          let {\n            finished,\n            cancelled\n          } = _ref6;\n          const result = queue.get(handler);\n\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\n\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\n\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$3 = [\"children\"];\n\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\n\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nfunction useTrail(length, propsArg, deps) {\n  var _passedRef;\n\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n  useLayoutEffect(() => {\n    each(ref.current, (ctrl, i) => {\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  ref['start'] = propsArg => {\n    const results = [];\n    each(ref.current, (ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n\n      if (parent) {\n        results.push(ctrl.start(_extends({}, props, {\n          to: parent.springs\n        })));\n      } else {\n        results.push(ctrl.start(_extends({}, props)));\n      }\n    });\n    return results;\n  };\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => () => {\n    each(usedTransitions.current, t => {\n      if (t.expired) {\n        clearTimeout(t.expirationId);\n      }\n\n      detachRefs(t.ctrl, ref);\n      t.ctrl.stop(true);\n    });\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useLayoutEffect(() => each(expired, _ref7 => {\n    let {\n      ctrl,\n      item,\n      key\n    } = _ref7;\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, (_ref8, t) => {\n      let {\n        phase,\n        payload\n      } = _ref8;\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if (ctrl.ref && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\n\nlet nextKey = 1;\n\nfunction getKeys(items, _ref9, prevTransitions) {\n  let {\n    key,\n    keys = key\n  } = _ref9;\n\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$2 = [\"children\"];\n\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\n\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\n\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = function (source) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return new Interpolation(source, args);\n};\n\nconst interpolate = function (source) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    args[_key6 - 1] = arguments[_key6];\n  }\n\n  return deprecateInterpolate(), new Interpolation(source, args);\n};\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, easings, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };","map":{"version":3,"sources":["F:/projects and tasks/solodex-task-react/my-app/node_modules/@react-spring/core/dist/react-spring-core.esm.js"],"names":["eachProp","is","toArray","isAnimatedString","Globals","getFluidValue","useLayoutEffect","each","raf","flush","FluidValue","deprecateInterpolate","callFluidObservers","frameLoop","hasFluidValue","flushCalls","isEqual","getFluidObservers","addFluidObserver","removeFluidObserver","noop","useMemoOne","deprecateDirectCall","useForceUpdate","usePrev","useOnce","createInterpolator","createStringInterpolator","React","useContext","useMemo","useRef","useState","getAnimated","AnimatedValue","getPayload","AnimatedString","getAnimatedType","setAnimated","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","callProp","value","args","fun","matchProp","includes","resolveProp","prop","obj","getDefaultProp","props","default","undefined","noopTransform","getDefaultProps","transform","keys","DEFAULT_PROPS","defaults","und","RESERVED_PROPS","config","from","to","ref","loop","reset","pause","cancel","reverse","immediate","delay","onProps","onStart","onChange","onPause","onResume","onRest","onResolve","items","trail","sort","expires","initial","enter","update","leave","children","onDestroyed","callId","parentId","getForwardProps","forward","count","inferTo","out","val","computeGoal","arr","map","range","output","hasProps","_","isAsyncTo","detachRefs","ctrl","_ctrl$ref","delete","replaceRef","_ctrl$ref2","add","useChain","refs","timeSteps","timeFrame","prevDelay","controllers","current","isNaN","queue","memoizedDelayProp","start","p","Promise","resolve","queues","q","then","push","all","tension","friction","gentle","wobbly","stiff","slow","molasses","c1","c2","c3","c4","Math","PI","c5","bounceOut","x","n1","d1","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","pow","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","easeInElastic","easeOutElastic","easeInOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","mass","damping","easing","clamp","AnimationConfig","constructor","frequency","velocity","restVelocity","precision","progress","duration","bounce","decay","round","mergeConfig","newConfig","defaultConfig","sanitizeConfig","isTensionConfig","emptyArray","Animation","changed","values","toValues","fromValues","scheduleProps","defaultProps","state","actions","reject","_props$cancel","timeout","paused","resumeQueue","resume","timeouts","time","now","skipAnimation","delayed","setTimeout","pauseQueue","cancelId","err","getCombinedResult","results","some","result","cancelled","getCancelledResult","get","every","getNoopResult","getFinishedResult","finished","runAsync","asyncTo","prevTo","promise","prevPromise","asyncId","preventBail","bail","bailPromise","bailIfEnded","bailSignal","bailResult","animate","arg1","arg2","BailSignal","skipAnimationSignal","SkipAniamtionSignal","stopAsync","animating","stop","bind","batchedUpdates","item","t","clear","Error","isFrameValue","FrameValue","nextId$1","id","_priority","priority","_onPriorityChange","node","getValue","interpolate","toJSON","observerAdded","_attach","observerRemoved","_detach","_onChange","idle","type","parent","$P","Symbol","for","HAS_ANIMATED","IS_ANIMATING","IS_PAUSED","hasAnimated","isAnimating","isPaused","setActiveBit","active","setPausedBit","SpringValue","animation","_state","Set","_pendingCalls","_lastCallId","_lastToId","_memoizedDuration","goal","lastVelocity","isDelayed","advance","dt","anim","payload","forEach","done","lastPosition","position","elapsed","elapsedTime","v0","durationProgress","e","exp","abs","min","bounceFactor","canBounce","isGrowing","isMoving","isBouncing","step","numSteps","ceil","n","springForce","dampingForce","acceleration","Number","console","warn","setValue","currVal","finalVal","_stop","set","_focus","_set","_update","finish","_onStart","up","eventObserved","event","_start","_prepareNode","_ref","isLoop","test","mergeActiveFn","sendEvent","isFrozen","checkFinished","_resume","_merge","nextProps","createLoopUpdate","hasToProp","hasFromProp","prevFrom","hasFromChanged","hasToChanged","hasAsyncTo","isAnimatable","num","nodeType","name","goalType","started","hasValueChanged","ACTIVE_EVENTS","arg","oldNode","create","loopRet","overrides","createUpdate","findDefined","size","Array","declareUpdate","_target$animation$typ","_target$animation","_target$defaultProps$","_target$defaultProps","BATCHED_EVENTS","nextId","Controller","springs","_flush","_initialProps","_lastAsyncId","_active","_changed","_started","_item","_events","Map","_onFrame","spring","prepareKeys","flushUpdateQueue","iterator","onFrame","flushUpdate","handler","promises","getSprings","prepareSprings","createSpring","setSprings","observer","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_excluded$3","SpringContext","inherited","ctx","Provider","createElement","makeContext","Consumer","init","createContext","_context","SpringRef","_getProps","splice","index","useSprings","deps","propsFn","layoutId","forceUpdate","ctrls","updates","canFlushSync","prevLength","slice","declareUpdates","startIndex","endIndex","context","prevContext","hasContext","cb","useSpring","isFn","initSpringRef","useSpringRef","useTrail","propsArg","_passedRef","passedRef","TransitionPhase","useTransition","data","exitBeforeEnter","propsRef","propsConfig","transitions","usedTransitions","prevTransitions","expired","clearTimeout","expirationId","getKeys","reused","phase","MOUNT","keyIndex","prevIndex","a","b","changes","exitingTransitions","forceChange","prevPhase","propsDelay","ENTER","isLeave","LEAVE","UPDATE","_p","find","expiry","expiryMs","ind","findIndex","renderTransitions","render","Fragment","elem","str","nextKey","has","_excluded$2","Spring","_excluded$1","Trail","trails","_excluded","Transition","Interpolation","calc","_get","_dt","oldValue","checkIdle","becomeIdle","inputs","max","reduce","highest","isIdle","self"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,EAAnB,EAAuBC,OAAvB,EAAgCC,gBAAhC,EAAkDC,OAAlD,EAA2DC,aAA3D,EAA0EC,eAA1E,EAA2FC,IAA3F,EAAiGC,GAAjG,EAAsGC,KAAtG,EAA6GC,UAA7G,EAAyHC,oBAAzH,EAA+IC,kBAA/I,EAAmKC,SAAnK,EAA8KC,aAA9K,EAA6LC,UAA7L,EAAyMC,OAAzM,EAAkNC,iBAAlN,EAAqOC,gBAArO,EAAuPC,mBAAvP,EAA4QC,IAA5Q,EAAkRC,UAAlR,EAA8RC,mBAA9R,EAAmTC,cAAnT,EAAmUC,OAAnU,EAA4UC,OAA5U,EAAqVC,kBAArV,EAAyWC,wBAAzW,QAAyY,sBAAzY;AACA,SAASvB,OAAT,EAAkBsB,kBAAlB,QAA4C,sBAA5C;AACA,OAAO,KAAKE,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiDC,cAAjD,EAAiEC,eAAjE,EAAkFC,WAAlF,QAAqG,wBAArG;AACA,cAAc,8BAAd;AACA,cAAc,mCAAd;;AAEA,SAASC,QAAT,GAAoB;AAClBA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAC5C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAEA,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AACrDL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AACD;AACF;AACF;;AAED,WAAOL,MAAP;AACD,GAZD;;AAcA,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AACD;;AAED,SAASQ,QAAT,CAAkBC,KAAlB,EAAkC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAChC,SAAOrD,EAAE,CAACsD,GAAH,CAAOF,KAAP,IAAgBA,KAAK,CAAC,GAAGC,IAAJ,CAArB,GAAiCD,KAAxC;AACD;;AACD,MAAMG,SAAS,GAAG,CAACH,KAAD,EAAQN,GAAR,KAAgBM,KAAK,KAAK,IAAV,IAAkB,CAAC,EAAEN,GAAG,IAAIM,KAAP,KAAiBpD,EAAE,CAACsD,GAAH,CAAOF,KAAP,IAAgBA,KAAK,CAACN,GAAD,CAArB,GAA6B7C,OAAO,CAACmD,KAAD,CAAP,CAAeI,QAAf,CAAwBV,GAAxB,CAA9C,CAAF,CAArD;;AACA,MAAMW,WAAW,GAAG,CAACC,IAAD,EAAOZ,GAAP,KAAe9C,EAAE,CAAC2D,GAAH,CAAOD,IAAP,IAAeZ,GAAG,IAAIY,IAAI,CAACZ,GAAD,CAA1B,GAAkCY,IAArE;;AACA,MAAME,cAAc,GAAG,CAACC,KAAD,EAAQf,GAAR,KAAgBe,KAAK,CAACC,OAAN,KAAkB,IAAlB,GAAyBD,KAAK,CAACf,GAAD,CAA9B,GAAsCe,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,CAAchB,GAAd,CAAhB,GAAqCiB,SAAlH;;AAEA,MAAMC,aAAa,GAAGZ,KAAK,IAAIA,KAA/B;;AAEA,MAAMa,eAAe,GAAG,UAACJ,KAAD,EAAsC;AAAA,MAA9BK,SAA8B,uEAAlBF,aAAkB;AAC5D,MAAIG,IAAI,GAAGC,aAAX;;AAEA,MAAIP,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACC,OAAN,KAAkB,IAAvC,EAA6C;AAC3CD,IAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACAK,IAAAA,IAAI,GAAG5B,MAAM,CAAC4B,IAAP,CAAYN,KAAZ,CAAP;AACD;;AAED,QAAMQ,QAAQ,GAAG,EAAjB;;AAEA,OAAK,MAAMvB,GAAX,IAAkBqB,IAAlB,EAAwB;AACtB,UAAMf,KAAK,GAAGc,SAAS,CAACL,KAAK,CAACf,GAAD,CAAN,EAAaA,GAAb,CAAvB;;AAEA,QAAI,CAAC9C,EAAE,CAACsE,GAAH,CAAOlB,KAAP,CAAL,EAAoB;AAClBiB,MAAAA,QAAQ,CAACvB,GAAD,CAAR,GAAgBM,KAAhB;AACD;AACF;;AAED,SAAOiB,QAAP;AACD,CAnBD;;AAoBA,MAAMD,aAAa,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,UAAjC,EAA6C,SAA7C,EAAwD,UAAxD,EAAoE,QAApE,CAAtB;AACA,MAAMG,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,CADa;AAErBC,EAAAA,IAAI,EAAE,CAFe;AAGrBC,EAAAA,EAAE,EAAE,CAHiB;AAIrBC,EAAAA,GAAG,EAAE,CAJgB;AAKrBC,EAAAA,IAAI,EAAE,CALe;AAMrBC,EAAAA,KAAK,EAAE,CANc;AAOrBC,EAAAA,KAAK,EAAE,CAPc;AAQrBC,EAAAA,MAAM,EAAE,CARa;AASrBC,EAAAA,OAAO,EAAE,CATY;AAUrBC,EAAAA,SAAS,EAAE,CAVU;AAWrBnB,EAAAA,OAAO,EAAE,CAXY;AAYrBoB,EAAAA,KAAK,EAAE,CAZc;AAarBC,EAAAA,OAAO,EAAE,CAbY;AAcrBC,EAAAA,OAAO,EAAE,CAdY;AAerBC,EAAAA,QAAQ,EAAE,CAfW;AAgBrBC,EAAAA,OAAO,EAAE,CAhBY;AAiBrBC,EAAAA,QAAQ,EAAE,CAjBW;AAkBrBC,EAAAA,MAAM,EAAE,CAlBa;AAmBrBC,EAAAA,SAAS,EAAE,CAnBU;AAoBrBC,EAAAA,KAAK,EAAE,CApBc;AAqBrBC,EAAAA,KAAK,EAAE,CArBc;AAsBrBC,EAAAA,IAAI,EAAE,CAtBe;AAuBrBC,EAAAA,OAAO,EAAE,CAvBY;AAwBrBC,EAAAA,OAAO,EAAE,CAxBY;AAyBrBC,EAAAA,KAAK,EAAE,CAzBc;AA0BrBC,EAAAA,MAAM,EAAE,CA1Ba;AA2BrBC,EAAAA,KAAK,EAAE,CA3Bc;AA4BrBC,EAAAA,QAAQ,EAAE,CA5BW;AA6BrBC,EAAAA,WAAW,EAAE,CA7BQ;AA8BrBhC,EAAAA,IAAI,EAAE,CA9Be;AA+BrBiC,EAAAA,MAAM,EAAE,CA/Ba;AAgCrBC,EAAAA,QAAQ,EAAE;AAhCW,CAAvB;;AAmCA,SAASC,eAAT,CAAyBzC,KAAzB,EAAgC;AAC9B,QAAM0C,OAAO,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACAzG,EAAAA,QAAQ,CAAC8D,KAAD,EAAQ,CAACT,KAAD,EAAQM,IAAR,KAAiB;AAC/B,QAAI,CAACa,cAAc,CAACb,IAAD,CAAnB,EAA2B;AACzB6C,MAAAA,OAAO,CAAC7C,IAAD,CAAP,GAAgBN,KAAhB;AACAoD,MAAAA,KAAK;AACN;AACF,GALO,CAAR;;AAOA,MAAIA,KAAJ,EAAW;AACT,WAAOD,OAAP;AACD;AACF;;AAED,SAASE,OAAT,CAAiB5C,KAAjB,EAAwB;AACtB,QAAMa,EAAE,GAAG4B,eAAe,CAACzC,KAAD,CAA1B;;AAEA,MAAIa,EAAJ,EAAQ;AACN,UAAMgC,GAAG,GAAG;AACVhC,MAAAA;AADU,KAAZ;AAGA3E,IAAAA,QAAQ,CAAC8D,KAAD,EAAQ,CAAC8C,GAAD,EAAM7D,GAAN,KAAcA,GAAG,IAAI4B,EAAP,KAAcgC,GAAG,CAAC5D,GAAD,CAAH,GAAW6D,GAAzB,CAAtB,CAAR;AACA,WAAOD,GAAP;AACD;;AAED,SAAOpE,QAAQ,CAAC,EAAD,EAAKuB,KAAL,CAAf;AACD;;AACD,SAAS+C,WAAT,CAAqBxD,KAArB,EAA4B;AAC1BA,EAAAA,KAAK,GAAGhD,aAAa,CAACgD,KAAD,CAArB;AACA,SAAOpD,EAAE,CAAC6G,GAAH,CAAOzD,KAAP,IAAgBA,KAAK,CAAC0D,GAAN,CAAUF,WAAV,CAAhB,GAAyC1G,gBAAgB,CAACkD,KAAD,CAAhB,GAA0BjD,OAAO,CAACuB,wBAAR,CAAiC;AACzGqF,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkG;AAEzGC,IAAAA,MAAM,EAAE,CAAC5D,KAAD,EAAQA,KAAR;AAFiG,GAAjC,EAGvE,CAHuE,CAA1B,GAGxCA,KAHR;AAID;;AACD,SAAS6D,QAAT,CAAkBpD,KAAlB,EAAyB;AACvB,OAAK,MAAMqD,CAAX,IAAgBrD,KAAhB,EAAuB,OAAO,IAAP;;AAEvB,SAAO,KAAP;AACD;;AACD,SAASsD,SAAT,CAAmBzC,EAAnB,EAAuB;AACrB,SAAO1E,EAAE,CAACsD,GAAH,CAAOoB,EAAP,KAAc1E,EAAE,CAAC6G,GAAH,CAAOnC,EAAP,KAAc1E,EAAE,CAAC2D,GAAH,CAAOe,EAAE,CAAC,CAAD,CAAT,CAAnC;AACD;;AACD,SAAS0C,UAAT,CAAoBC,IAApB,EAA0B1C,GAA1B,EAA+B;AAC7B,MAAI2C,SAAJ;;AAEA,GAACA,SAAS,GAAGD,IAAI,CAAC1C,GAAlB,KAA0B,IAA1B,GAAiC,KAAK,CAAtC,GAA0C2C,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAA1C;AACA1C,EAAAA,GAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAAC4C,MAAJ,CAAWF,IAAX,CAAvB;AACD;;AACD,SAASG,UAAT,CAAoBH,IAApB,EAA0B1C,GAA1B,EAA+B;AAC7B,MAAIA,GAAG,IAAI0C,IAAI,CAAC1C,GAAL,KAAaA,GAAxB,EAA6B;AAC3B,QAAI8C,UAAJ;;AAEA,KAACA,UAAU,GAAGJ,IAAI,CAAC1C,GAAnB,KAA2B,IAA3B,GAAkC,KAAK,CAAvC,GAA2C8C,UAAU,CAACF,MAAX,CAAkBF,IAAlB,CAA3C;AACA1C,IAAAA,GAAG,CAAC+C,GAAJ,CAAQL,IAAR;AACAA,IAAAA,IAAI,CAAC1C,GAAL,GAAWA,GAAX;AACD;AACF;;AAED,SAASgD,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAqD;AAAA,MAAlBC,SAAkB,uEAAN,IAAM;AACnDzH,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIwH,SAAJ,EAAe;AACb,UAAIE,SAAS,GAAG,CAAhB;AACAzH,MAAAA,IAAI,CAACsH,IAAD,EAAO,CAACjD,GAAD,EAAMjC,CAAN,KAAY;AACrB,cAAMsF,WAAW,GAAGrD,GAAG,CAACsD,OAAxB;;AAEA,YAAID,WAAW,CAACpF,MAAhB,EAAwB;AACtB,cAAIsC,KAAK,GAAG4C,SAAS,GAAGD,SAAS,CAACnF,CAAD,CAAjC;AACA,cAAIwF,KAAK,CAAChD,KAAD,CAAT,EAAkBA,KAAK,GAAG6C,SAAR,CAAlB,KAAyCA,SAAS,GAAG7C,KAAZ;AACzC5E,UAAAA,IAAI,CAAC0H,WAAD,EAAcX,IAAI,IAAI;AACxB/G,YAAAA,IAAI,CAAC+G,IAAI,CAACc,KAAN,EAAatE,KAAK,IAAI;AACxB,oBAAMuE,iBAAiB,GAAGvE,KAAK,CAACqB,KAAhC;;AAEArB,cAAAA,KAAK,CAACqB,KAAN,GAAcpC,GAAG,IAAIoC,KAAK,GAAG/B,QAAQ,CAACiF,iBAAiB,IAAI,CAAtB,EAAyBtF,GAAzB,CAArC;AACD,aAJG,CAAJ;AAKD,WANG,CAAJ;AAOA6B,UAAAA,GAAG,CAAC0D,KAAJ;AACD;AACF,OAfG,CAAJ;AAgBD,KAlBD,MAkBO;AACL,UAAIC,CAAC,GAAGC,OAAO,CAACC,OAAR,EAAR;AACAlI,MAAAA,IAAI,CAACsH,IAAD,EAAOjD,GAAG,IAAI;AAChB,cAAMqD,WAAW,GAAGrD,GAAG,CAACsD,OAAxB;;AAEA,YAAID,WAAW,CAACpF,MAAhB,EAAwB;AACtB,gBAAM6F,MAAM,GAAGT,WAAW,CAAClB,GAAZ,CAAgBO,IAAI,IAAI;AACrC,kBAAMqB,CAAC,GAAGrB,IAAI,CAACc,KAAf;AACAd,YAAAA,IAAI,CAACc,KAAL,GAAa,EAAb;AACA,mBAAOO,CAAP;AACD,WAJc,CAAf;AAKAJ,UAAAA,CAAC,GAAGA,CAAC,CAACK,IAAF,CAAO,MAAM;AACfrI,YAAAA,IAAI,CAAC0H,WAAD,EAAc,CAACX,IAAD,EAAO3E,CAAP,KAAapC,IAAI,CAACmI,MAAM,CAAC/F,CAAD,CAAN,IAAa,EAAd,EAAkBsD,MAAM,IAAIqB,IAAI,CAACc,KAAL,CAAWS,IAAX,CAAgB5C,MAAhB,CAA5B,CAA/B,CAAJ;AACA,mBAAOuC,OAAO,CAACM,GAAR,CAAYlE,GAAG,CAAC0D,KAAJ,EAAZ,CAAP;AACD,WAHG,CAAJ;AAID;AACF,OAdG,CAAJ;AAeD;AACF,GArCc,CAAf;AAsCD;;AAED,MAAM7D,MAAM,GAAG;AACbV,EAAAA,OAAO,EAAE;AACPgF,IAAAA,OAAO,EAAE,GADF;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GADI;AAKbC,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE,GADH;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALK;AASbE,EAAAA,MAAM,EAAE;AACNH,IAAAA,OAAO,EAAE,GADH;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GATK;AAabG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,OAAO,EAAE,GADJ;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAbM;AAiBbI,EAAAA,IAAI,EAAE;AACJL,IAAAA,OAAO,EAAE,GADL;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAjBO;AAqBbK,EAAAA,QAAQ,EAAE;AACRN,IAAAA,OAAO,EAAE,GADD;AAERC,IAAAA,QAAQ,EAAE;AAFF;AArBG,CAAf;AA0BA,MAAMM,EAAE,GAAG,OAAX;AACA,MAAMC,EAAE,GAAGD,EAAE,GAAG,KAAhB;AACA,MAAME,EAAE,GAAGF,EAAE,GAAG,CAAhB;AACA,MAAMG,EAAE,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAc,CAAzB;AACA,MAAMC,EAAE,GAAG,IAAIF,IAAI,CAACC,EAAT,GAAc,GAAzB;;AAEA,MAAME,SAAS,GAAGC,CAAC,IAAI;AACrB,QAAMC,EAAE,GAAG,MAAX;AACA,QAAMC,EAAE,GAAG,IAAX;;AAEA,MAAIF,CAAC,GAAG,IAAIE,EAAZ,EAAgB;AACd,WAAOD,EAAE,GAAGD,CAAL,GAASA,CAAhB;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,IAAIE,EAAZ,EAAgB;AACrB,WAAOD,EAAE,IAAID,CAAC,IAAI,MAAME,EAAf,CAAF,GAAuBF,CAAvB,GAA2B,IAAlC;AACD,GAFM,MAEA,IAAIA,CAAC,GAAG,MAAME,EAAd,EAAkB;AACvB,WAAOD,EAAE,IAAID,CAAC,IAAI,OAAOE,EAAhB,CAAF,GAAwBF,CAAxB,GAA4B,MAAnC;AACD,GAFM,MAEA;AACL,WAAOC,EAAE,IAAID,CAAC,IAAI,QAAQE,EAAjB,CAAF,GAAyBF,CAAzB,GAA6B,QAApC;AACD;AACF,CAbD;;AAeA,MAAMG,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEJ,CAAC,IAAIA,CADC;AAEdK,EAAAA,UAAU,EAAEL,CAAC,IAAIA,CAAC,GAAGA,CAFP;AAGdM,EAAAA,WAAW,EAAEN,CAAC,IAAI,IAAI,CAAC,IAAIA,CAAL,KAAW,IAAIA,CAAf,CAHR;AAIdO,EAAAA,aAAa,EAAEP,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,IAAIA,CAAJ,GAAQA,CAAlB,GAAsB,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAC,CAAD,GAAKR,CAAL,GAAS,CAAlB,EAAqB,CAArB,IAA0B,CAJ1D;AAKdS,EAAAA,WAAW,EAAET,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CALZ;AAMdU,EAAAA,YAAY,EAAEV,CAAC,IAAI,IAAIJ,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAb,EAAgB,CAAhB,CANT;AAOdW,EAAAA,cAAc,EAAEX,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAtB,GAA0B,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAC,CAAD,GAAKR,CAAL,GAAS,CAAlB,EAAqB,CAArB,IAA0B,CAP/D;AAQdY,EAAAA,WAAW,EAAEZ,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CARhB;AASda,EAAAA,YAAY,EAAEb,CAAC,IAAI,IAAIJ,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAb,EAAgB,CAAhB,CATT;AAUdc,EAAAA,cAAc,EAAEd,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAA1B,GAA8B,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAC,CAAD,GAAKR,CAAL,GAAS,CAAlB,EAAqB,CAArB,IAA0B,CAVnE;AAWde,EAAAA,WAAW,EAAEf,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAXpB;AAYdgB,EAAAA,YAAY,EAAEhB,CAAC,IAAI,IAAIJ,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAb,EAAgB,CAAhB,CAZT;AAadiB,EAAAA,cAAc,EAAEjB,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,KAAKA,CAAL,GAASA,CAAT,GAAaA,CAAb,GAAiBA,CAAjB,GAAqBA,CAA/B,GAAmC,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAC,CAAD,GAAKR,CAAL,GAAS,CAAlB,EAAqB,CAArB,IAA0B,CAbxE;AAcdkB,EAAAA,UAAU,EAAElB,CAAC,IAAI,IAAIJ,IAAI,CAACuB,GAAL,CAASnB,CAAC,GAAGJ,IAAI,CAACC,EAAT,GAAc,CAAvB,CAdP;AAeduB,EAAAA,WAAW,EAAEpB,CAAC,IAAIJ,IAAI,CAACyB,GAAL,CAASrB,CAAC,GAAGJ,IAAI,CAACC,EAAT,GAAc,CAAvB,CAfJ;AAgBdyB,EAAAA,aAAa,EAAEtB,CAAC,IAAI,EAAEJ,IAAI,CAACuB,GAAL,CAASvB,IAAI,CAACC,EAAL,GAAUG,CAAnB,IAAwB,CAA1B,IAA+B,CAhBrC;AAiBduB,EAAAA,UAAU,EAAEvB,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,KAAKR,CAAL,GAAS,EAArB,CAjBjB;AAkBdwB,EAAAA,WAAW,EAAExB,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMR,CAAlB,CAlBtB;AAmBdyB,EAAAA,aAAa,EAAEzB,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,GAAG,GAAJ,GAAUJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,KAAKR,CAAL,GAAS,EAArB,IAA2B,CAArC,GAAyC,CAAC,IAAIJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMR,CAAN,GAAU,EAAtB,CAAL,IAAkC,CAnB7G;AAoBd0B,EAAAA,UAAU,EAAE1B,CAAC,IAAI,IAAIJ,IAAI,CAAC+B,IAAL,CAAU,IAAI/B,IAAI,CAACY,GAAL,CAASR,CAAT,EAAY,CAAZ,CAAd,CApBP;AAqBd4B,EAAAA,WAAW,EAAE5B,CAAC,IAAIJ,IAAI,CAAC+B,IAAL,CAAU,IAAI/B,IAAI,CAACY,GAAL,CAASR,CAAC,GAAG,CAAb,EAAgB,CAAhB,CAAd,CArBJ;AAsBd6B,EAAAA,aAAa,EAAE7B,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,CAAC,IAAIJ,IAAI,CAAC+B,IAAL,CAAU,IAAI/B,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAb,EAAgB,CAAhB,CAAd,CAAL,IAA0C,CAApD,GAAwD,CAACJ,IAAI,CAAC+B,IAAL,CAAU,IAAI/B,IAAI,CAACY,GAAL,CAAS,CAAC,CAAD,GAAKR,CAAL,GAAS,CAAlB,EAAqB,CAArB,CAAd,IAAyC,CAA1C,IAA+C,CAtB7G;AAuBd8B,EAAAA,UAAU,EAAE9B,CAAC,IAAIN,EAAE,GAAGM,CAAL,GAASA,CAAT,GAAaA,CAAb,GAAiBR,EAAE,GAAGQ,CAAL,GAASA,CAvB7B;AAwBd+B,EAAAA,WAAW,EAAE/B,CAAC,IAAI,IAAIN,EAAE,GAAGE,IAAI,CAACY,GAAL,CAASR,CAAC,GAAG,CAAb,EAAgB,CAAhB,CAAT,GAA8BR,EAAE,GAAGI,IAAI,CAACY,GAAL,CAASR,CAAC,GAAG,CAAb,EAAgB,CAAhB,CAxBvC;AAyBdgC,EAAAA,aAAa,EAAEhC,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAUJ,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAb,EAAgB,CAAhB,KAAsB,CAACP,EAAE,GAAG,CAAN,IAAW,CAAX,GAAeO,CAAf,GAAmBP,EAAzC,IAA+C,CAAzD,GAA6D,CAACG,IAAI,CAACY,GAAL,CAAS,IAAIR,CAAJ,GAAQ,CAAjB,EAAoB,CAApB,KAA0B,CAACP,EAAE,GAAG,CAAN,KAAYO,CAAC,GAAG,CAAJ,GAAQ,CAApB,IAAyBP,EAAnD,IAAyD,CAA1D,IAA+D,CAzBlI;AA0BdwC,EAAAA,aAAa,EAAEjC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,CAACJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,KAAKR,CAAL,GAAS,EAArB,CAAD,GAA4BJ,IAAI,CAACyB,GAAL,CAAS,CAACrB,CAAC,GAAG,EAAJ,GAAS,KAAV,IAAmBL,EAA5B,CA1B9D;AA2BduC,EAAAA,cAAc,EAAElC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMR,CAAlB,IAAuBJ,IAAI,CAACyB,GAAL,CAAS,CAACrB,CAAC,GAAG,EAAJ,GAAS,IAAV,IAAkBL,EAA3B,CAAvB,GAAwD,CA3B3F;AA4BdwC,EAAAA,gBAAgB,EAAEnC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,GAAG,GAAJ,GAAU,EAAEJ,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,KAAKR,CAAL,GAAS,EAArB,IAA2BJ,IAAI,CAACyB,GAAL,CAAS,CAAC,KAAKrB,CAAL,GAAS,MAAV,IAAoBF,EAA7B,CAA7B,IAAiE,CAA3E,GAA+EF,IAAI,CAACY,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMR,CAAN,GAAU,EAAtB,IAA4BJ,IAAI,CAACyB,GAAL,CAAS,CAAC,KAAKrB,CAAL,GAAS,MAAV,IAAoBF,EAA7B,CAA5B,GAA+D,CAA/D,GAAmE,CA5BvL;AA6BdsC,EAAAA,YAAY,EAAEpC,CAAC,IAAI,IAAID,SAAS,CAAC,IAAIC,CAAL,CA7BlB;AA8BdqC,EAAAA,aAAa,EAAEtC,SA9BD;AA+BduC,EAAAA,eAAe,EAAEtC,CAAC,IAAIA,CAAC,GAAG,GAAJ,GAAU,CAAC,IAAID,SAAS,CAAC,IAAI,IAAIC,CAAT,CAAd,IAA6B,CAAvC,GAA2C,CAAC,IAAID,SAAS,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAd,IAA6B;AA/BhF,CAAhB;;AAkCA,MAAMxF,QAAQ,GAAG/B,QAAQ,CAAC,EAAD,EAAKkC,MAAM,CAACV,OAAZ,EAAqB;AAC5CsI,EAAAA,IAAI,EAAE,CADsC;AAE5CC,EAAAA,OAAO,EAAE,CAFmC;AAG5CC,EAAAA,MAAM,EAAEtC,OAAO,CAACC,MAH4B;AAI5CsC,EAAAA,KAAK,EAAE;AAJqC,CAArB,CAAzB;;AAOA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,WAAW,GAAG;AACZ,SAAK3D,OAAL,GAAe,KAAK,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAK2D,SAAL,GAAiB,KAAK,CAAtB;AACA,SAAKL,OAAL,GAAe,KAAK,CAApB;AACA,SAAKD,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKO,QAAL,GAAgB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAK,CAAzB;AACA,SAAKC,SAAL,GAAiB,KAAK,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKT,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKS,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA3K,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB6B,QAApB;AACD;;AAlBmB;;AAqBtB,SAAS8I,WAAT,CAAqB3I,MAArB,EAA6B4I,SAA7B,EAAwCC,aAAxC,EAAuD;AACrD,MAAIA,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,GAAG/K,QAAQ,CAAC,EAAD,EAAK+K,aAAL,CAAxB;AACAC,IAAAA,cAAc,CAACD,aAAD,EAAgBD,SAAhB,CAAd;AACAA,IAAAA,SAAS,GAAG9K,QAAQ,CAAC,EAAD,EAAK+K,aAAL,EAAoBD,SAApB,CAApB;AACD;;AAEDE,EAAAA,cAAc,CAAC9I,MAAD,EAAS4I,SAAT,CAAd;AACA7K,EAAAA,MAAM,CAACC,MAAP,CAAcgC,MAAd,EAAsB4I,SAAtB;;AAEA,OAAK,MAAMtK,GAAX,IAAkBuB,QAAlB,EAA4B;AAC1B,QAAIG,MAAM,CAAC1B,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACvB0B,MAAAA,MAAM,CAAC1B,GAAD,CAAN,GAAcuB,QAAQ,CAACvB,GAAD,CAAtB;AACD;AACF;;AAED,MAAI;AACFsJ,IAAAA,IADE;AAEFM,IAAAA,SAFE;AAGFL,IAAAA;AAHE,MAIA7H,MAJJ;;AAMA,MAAI,CAACxE,EAAE,CAACsE,GAAH,CAAOoI,SAAP,CAAL,EAAwB;AACtB,QAAIA,SAAS,GAAG,IAAhB,EAAsBA,SAAS,GAAG,IAAZ;AACtB,QAAIL,OAAO,GAAG,CAAd,EAAiBA,OAAO,GAAG,CAAV;AACjB7H,IAAAA,MAAM,CAACsE,OAAP,GAAiBW,IAAI,CAACY,GAAL,CAAS,IAAIZ,IAAI,CAACC,EAAT,GAAcgD,SAAvB,EAAkC,CAAlC,IAAuCN,IAAxD;AACA5H,IAAAA,MAAM,CAACuE,QAAP,GAAkB,IAAIU,IAAI,CAACC,EAAT,GAAc2C,OAAd,GAAwBD,IAAxB,GAA+BM,SAAjD;AACD;;AAED,SAAOlI,MAAP;AACD;;AAED,SAAS8I,cAAT,CAAwB9I,MAAxB,EAAgCX,KAAhC,EAAuC;AACrC,MAAI,CAAC7D,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACoJ,KAAb,CAAL,EAA0B;AACxBzI,IAAAA,MAAM,CAACuI,QAAP,GAAkBhJ,SAAlB;AACD,GAFD,MAEO;AACL,UAAMwJ,eAAe,GAAG,CAACvN,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACiF,OAAb,CAAD,IAA0B,CAAC9I,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACkF,QAAb,CAAnD;;AAEA,QAAIwE,eAAe,IAAI,CAACvN,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAAC6I,SAAb,CAApB,IAA+C,CAAC1M,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACwI,OAAb,CAAhD,IAAyE,CAACrM,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACuI,IAAb,CAA9E,EAAkG;AAChG5H,MAAAA,MAAM,CAACuI,QAAP,GAAkBhJ,SAAlB;AACAS,MAAAA,MAAM,CAACyI,KAAP,GAAelJ,SAAf;AACD;;AAED,QAAIwJ,eAAJ,EAAqB;AACnB/I,MAAAA,MAAM,CAACkI,SAAP,GAAmB3I,SAAnB;AACD;AACF;AACF;;AAED,MAAMyJ,UAAU,GAAG,EAAnB;;AACA,MAAMC,SAAN,CAAgB;AACdhB,EAAAA,WAAW,GAAG;AACZ,SAAKiB,OAAL,GAAe,KAAf;AACA,SAAKC,MAAL,GAAcH,UAAd;AACA,SAAKI,QAAL,GAAgB,IAAhB;AACA,SAAKC,UAAL,GAAkBL,UAAlB;AACA,SAAK9I,EAAL,GAAU,KAAK,CAAf;AACA,SAAKD,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKD,MAAL,GAAc,IAAIgI,eAAJ,EAAd;AACA,SAAKvH,SAAL,GAAiB,KAAjB;AACD;;AAVa;;AAchB,SAAS6I,aAAT,CAAuB1H,MAAvB,SAMG;AAAA,MAN4B;AAC7BtD,IAAAA,GAD6B;AAE7Be,IAAAA,KAF6B;AAG7BkK,IAAAA,YAH6B;AAI7BC,IAAAA,KAJ6B;AAK7BC,IAAAA;AAL6B,GAM5B;AACD,SAAO,IAAI1F,OAAJ,CAAY,CAACC,OAAD,EAAU0F,MAAV,KAAqB;AACtC,QAAIC,aAAJ;;AAEA,QAAIjJ,KAAJ;AACA,QAAIkJ,OAAJ;AACA,QAAIrJ,MAAM,GAAGxB,SAAS,CAAC,CAAC4K,aAAa,GAAGtK,KAAK,CAACkB,MAAvB,KAAkC,IAAlC,GAAyCoJ,aAAzC,GAAyDJ,YAAY,IAAI,IAAhB,GAAuB,KAAK,CAA5B,GAAgCA,YAAY,CAAChJ,MAAvG,EAA+GjC,GAA/G,CAAtB;;AAEA,QAAIiC,MAAJ,EAAY;AACVK,MAAAA,OAAO;AACR,KAFD,MAEO;AACL,UAAI,CAACpF,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACiB,KAAb,CAAL,EAA0B;AACxBkJ,QAAAA,KAAK,CAACK,MAAN,GAAe9K,SAAS,CAACM,KAAK,CAACiB,KAAP,EAAchC,GAAd,CAAxB;AACD;;AAED,UAAIgC,KAAK,GAAGiJ,YAAY,IAAI,IAAhB,GAAuB,KAAK,CAA5B,GAAgCA,YAAY,CAACjJ,KAAzD;;AAEA,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBA,QAAAA,KAAK,GAAGkJ,KAAK,CAACK,MAAN,IAAgB9K,SAAS,CAACuB,KAAD,EAAQhC,GAAR,CAAjC;AACD;;AAEDoC,MAAAA,KAAK,GAAG/B,QAAQ,CAACU,KAAK,CAACqB,KAAN,IAAe,CAAhB,EAAmBpC,GAAnB,CAAhB;;AAEA,UAAIgC,KAAJ,EAAW;AACTkJ,QAAAA,KAAK,CAACM,WAAN,CAAkB5G,GAAlB,CAAsBnC,QAAtB;AACA0I,QAAAA,OAAO,CAACnJ,KAAR;AACD,OAHD,MAGO;AACLmJ,QAAAA,OAAO,CAACM,MAAR;AACAhJ,QAAAA,QAAQ;AACT;AACF;;AAED,aAASD,OAAT,GAAmB;AACjB0I,MAAAA,KAAK,CAACM,WAAN,CAAkB5G,GAAlB,CAAsBnC,QAAtB;AACAyI,MAAAA,KAAK,CAACQ,QAAN,CAAejH,MAAf,CAAsB6G,OAAtB;AACAA,MAAAA,OAAO,CAACrJ,MAAR;AACAG,MAAAA,KAAK,GAAGkJ,OAAO,CAACK,IAAR,GAAelO,GAAG,CAACmO,GAAJ,EAAvB;AACD;;AAED,aAASnJ,QAAT,GAAoB;AAClB,UAAIL,KAAK,GAAG,CAAR,IAAa,CAAC/E,OAAO,CAACwO,aAA1B,EAAyC;AACvCX,QAAAA,KAAK,CAACY,OAAN,GAAgB,IAAhB;AACAR,QAAAA,OAAO,GAAG7N,GAAG,CAACsO,UAAJ,CAAezJ,OAAf,EAAwBF,KAAxB,CAAV;AACA8I,QAAAA,KAAK,CAACc,UAAN,CAAiBpH,GAAjB,CAAqBpC,OAArB;AACA0I,QAAAA,KAAK,CAACQ,QAAN,CAAe9G,GAAf,CAAmB0G,OAAnB;AACD,OALD,MAKO;AACLhJ,QAAAA,OAAO;AACR;AACF;;AAED,aAASA,OAAT,GAAmB;AACjB,UAAI4I,KAAK,CAACY,OAAV,EAAmB;AACjBZ,QAAAA,KAAK,CAACY,OAAN,GAAgB,KAAhB;AACD;;AAEDZ,MAAAA,KAAK,CAACc,UAAN,CAAiBvH,MAAjB,CAAwBjC,OAAxB;AACA0I,MAAAA,KAAK,CAACQ,QAAN,CAAejH,MAAf,CAAsB6G,OAAtB;;AAEA,UAAIhI,MAAM,KAAK4H,KAAK,CAACe,QAAN,IAAkB,CAAvB,CAAV,EAAqC;AACnChK,QAAAA,MAAM,GAAG,IAAT;AACD;;AAED,UAAI;AACFkJ,QAAAA,OAAO,CAAC5F,KAAR,CAAc/F,QAAQ,CAAC,EAAD,EAAKuB,KAAL,EAAY;AAChCuC,UAAAA,MADgC;AAEhCrB,UAAAA;AAFgC,SAAZ,CAAtB,EAGIyD,OAHJ;AAID,OALD,CAKE,OAAOwG,GAAP,EAAY;AACZd,QAAAA,MAAM,CAACc,GAAD,CAAN;AACD;AACF;AACF,GAtEM,CAAP;AAuED;;AAED,MAAMC,iBAAiB,GAAG,CAACxM,MAAD,EAASyM,OAAT,KAAqBA,OAAO,CAACtM,MAAR,IAAkB,CAAlB,GAAsBsM,OAAO,CAAC,CAAD,CAA7B,GAAmCA,OAAO,CAACC,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,SAA9B,IAA2CC,kBAAkB,CAAC7M,MAAM,CAAC8M,GAAP,EAAD,CAA7D,GAA8EL,OAAO,CAACM,KAAR,CAAcJ,MAAM,IAAIA,MAAM,CAACjO,IAA/B,IAAuCsO,aAAa,CAAChN,MAAM,CAAC8M,GAAP,EAAD,CAApD,GAAqEG,iBAAiB,CAACjN,MAAM,CAAC8M,GAAP,EAAD,EAAeL,OAAO,CAACM,KAAR,CAAcJ,MAAM,IAAIA,MAAM,CAACO,QAA/B,CAAf,CAAtP;;AACA,MAAMF,aAAa,GAAGrM,KAAK,KAAK;AAC9BA,EAAAA,KAD8B;AAE9BjC,EAAAA,IAAI,EAAE,IAFwB;AAG9BwO,EAAAA,QAAQ,EAAE,IAHoB;AAI9BN,EAAAA,SAAS,EAAE;AAJmB,CAAL,CAA3B;;AAMA,MAAMK,iBAAiB,GAAG,UAACtM,KAAD,EAAQuM,QAAR;AAAA,MAAkBN,SAAlB,uEAA8B,KAA9B;AAAA,SAAyC;AACjEjM,IAAAA,KADiE;AAEjEuM,IAAAA,QAFiE;AAGjEN,IAAAA;AAHiE,GAAzC;AAAA,CAA1B;;AAKA,MAAMC,kBAAkB,GAAGlM,KAAK,KAAK;AACnCA,EAAAA,KADmC;AAEnCiM,EAAAA,SAAS,EAAE,IAFwB;AAGnCM,EAAAA,QAAQ,EAAE;AAHyB,CAAL,CAAhC;;AAMA,SAASC,QAAT,CAAkBlL,EAAlB,EAAsBb,KAAtB,EAA6BmK,KAA7B,EAAoCvL,MAApC,EAA4C;AAC1C,QAAM;AACJ2D,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJb,IAAAA;AAHI,MAIF3B,KAJJ;AAKA,QAAM;AACJgM,IAAAA,OAAO,EAAEC,MADL;AAEJC,IAAAA,OAAO,EAAEC;AAFL,MAGFhC,KAHJ;;AAKA,MAAI,CAAC3H,QAAD,IAAa3B,EAAE,KAAKoL,MAApB,IAA8B,CAACjM,KAAK,CAACgB,KAAzC,EAAgD;AAC9C,WAAOmL,WAAP;AACD;;AAED,SAAOhC,KAAK,CAAC+B,OAAN,GAAgB,CAAC,YAAY;AAClC/B,IAAAA,KAAK,CAACiC,OAAN,GAAgB7J,MAAhB;AACA4H,IAAAA,KAAK,CAAC6B,OAAN,GAAgBnL,EAAhB;AACA,UAAMqJ,YAAY,GAAG9J,eAAe,CAACJ,KAAD,EAAQ,CAACT,KAAD,EAAQN,GAAR,KAAgBA,GAAG,KAAK,QAAR,GAAmBiB,SAAnB,GAA+BX,KAAvD,CAApC;AACA,QAAI8M,WAAJ;AACA,QAAIC,IAAJ;AACA,UAAMC,WAAW,GAAG,IAAI7H,OAAJ,CAAY,CAACC,OAAD,EAAU0F,MAAV,MAAsBgC,WAAW,GAAG1H,OAAd,EAAuB2H,IAAI,GAAGjC,MAApD,CAAZ,CAApB;;AAEA,UAAMmC,WAAW,GAAGC,UAAU,IAAI;AAChC,YAAMC,UAAU,GAAGnK,MAAM,KAAK4H,KAAK,CAACe,QAAN,IAAkB,CAAvB,CAAN,IAAmCO,kBAAkB,CAAC7M,MAAD,CAArD,IAAiE2D,MAAM,KAAK4H,KAAK,CAACiC,OAAjB,IAA4BP,iBAAiB,CAACjN,MAAD,EAAS,KAAT,CAAjI;;AAEA,UAAI8N,UAAJ,EAAgB;AACdD,QAAAA,UAAU,CAAClB,MAAX,GAAoBmB,UAApB;AACAJ,QAAAA,IAAI,CAACG,UAAD,CAAJ;AACA,cAAMA,UAAN;AACD;AACF,KARD;;AAUA,UAAME,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC9B,YAAMJ,UAAU,GAAG,IAAIK,UAAJ,EAAnB;AACA,YAAMC,mBAAmB,GAAG,IAAIC,mBAAJ,EAA5B;AACA,aAAO,CAAC,YAAY;AAClB,YAAI1Q,OAAO,CAACwO,aAAZ,EAA2B;AACzBmC,UAAAA,SAAS,CAAC9C,KAAD,CAAT;AACA4C,UAAAA,mBAAmB,CAACxB,MAApB,GAA6BM,iBAAiB,CAACjN,MAAD,EAAS,KAAT,CAA9C;AACA0N,UAAAA,IAAI,CAACS,mBAAD,CAAJ;AACA,gBAAMA,mBAAN;AACD;;AAEDP,QAAAA,WAAW,CAACC,UAAD,CAAX;AACA,cAAMzM,KAAK,GAAG7D,EAAE,CAAC2D,GAAH,CAAO8M,IAAP,IAAenO,QAAQ,CAAC,EAAD,EAAKmO,IAAL,CAAvB,GAAoCnO,QAAQ,CAAC,EAAD,EAAKoO,IAAL,EAAW;AACnEhM,UAAAA,EAAE,EAAE+L;AAD+D,SAAX,CAA1D;AAGA5M,QAAAA,KAAK,CAACwC,QAAN,GAAiBD,MAAjB;AACArG,QAAAA,QAAQ,CAACgO,YAAD,EAAe,CAAC3K,KAAD,EAAQN,GAAR,KAAgB;AACrC,cAAI9C,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACf,GAAD,CAAZ,CAAJ,EAAwB;AACtBe,YAAAA,KAAK,CAACf,GAAD,CAAL,GAAaM,KAAb;AACD;AACF,SAJO,CAAR;AAKA,cAAMgM,MAAM,GAAG,MAAM3M,MAAM,CAAC4F,KAAP,CAAaxE,KAAb,CAArB;AACAwM,QAAAA,WAAW,CAACC,UAAD,CAAX;;AAEA,YAAItC,KAAK,CAACK,MAAV,EAAkB;AAChB,gBAAM,IAAI9F,OAAJ,CAAYgG,MAAM,IAAI;AAC1BP,YAAAA,KAAK,CAACM,WAAN,CAAkB5G,GAAlB,CAAsB6G,MAAtB;AACD,WAFK,CAAN;AAGD;;AAED,eAAOa,MAAP;AACD,OA5BM,GAAP;AA6BD,KAhCD;;AAkCA,QAAIA,MAAJ;;AAEA,QAAIjP,OAAO,CAACwO,aAAZ,EAA2B;AACzBmC,MAAAA,SAAS,CAAC9C,KAAD,CAAT;AACA,aAAO0B,iBAAiB,CAACjN,MAAD,EAAS,KAAT,CAAxB;AACD;;AAED,QAAI;AACF,UAAIsO,SAAJ;;AAEA,UAAI/Q,EAAE,CAAC6G,GAAH,CAAOnC,EAAP,CAAJ,EAAgB;AACdqM,QAAAA,SAAS,GAAG,CAAC,MAAM5I,KAAN,IAAe;AAC1B,eAAK,MAAMtE,KAAX,IAAoBsE,KAApB,EAA2B;AACzB,kBAAMqI,OAAO,CAAC3M,KAAD,CAAb;AACD;AACF,SAJW,EAITa,EAJS,CAAZ;AAKD,OAND,MAMO;AACHqM,QAAAA,SAAS,GAAGxI,OAAO,CAACC,OAAR,CAAgB9D,EAAE,CAAC8L,OAAD,EAAU/N,MAAM,CAACuO,IAAP,CAAYC,IAAZ,CAAiBxO,MAAjB,CAAV,CAAlB,CAAZ;AACD;;AAEH,YAAM8F,OAAO,CAACM,GAAR,CAAY,CAACkI,SAAS,CAACpI,IAAV,CAAeuH,WAAf,CAAD,EAA8BE,WAA9B,CAAZ,CAAN;AACAhB,MAAAA,MAAM,GAAGM,iBAAiB,CAACjN,MAAM,CAAC8M,GAAP,EAAD,EAAe,IAAf,EAAqB,KAArB,CAA1B;AACD,KAfD,CAeE,OAAOP,GAAP,EAAY;AACZ,UAAIA,GAAG,YAAY2B,UAAnB,EAA+B;AAC7BvB,QAAAA,MAAM,GAAGJ,GAAG,CAACI,MAAb;AACD,OAFD,MAEO,IAAIJ,GAAG,YAAY6B,mBAAnB,EAAwC;AAC7CzB,QAAAA,MAAM,GAAGJ,GAAG,CAACI,MAAb;AACD,OAFM,MAEA;AACL,cAAMJ,GAAN;AACD;AACF,KAvBD,SAuBU;AACR,UAAI5I,MAAM,IAAI4H,KAAK,CAACiC,OAApB,EAA6B;AAC3BjC,QAAAA,KAAK,CAACiC,OAAN,GAAgB5J,QAAhB;AACA2H,QAAAA,KAAK,CAAC6B,OAAN,GAAgBxJ,QAAQ,GAAGyJ,MAAH,GAAY/L,SAApC;AACAiK,QAAAA,KAAK,CAAC+B,OAAN,GAAgB1J,QAAQ,GAAG2J,WAAH,GAAiBjM,SAAzC;AACD;AACF;;AAED,QAAI/D,EAAE,CAACsD,GAAH,CAAOkC,MAAP,CAAJ,EAAoB;AAClBjF,MAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM;AACvB1L,QAAAA,MAAM,CAAC4J,MAAD,EAAS3M,MAAT,EAAiBA,MAAM,CAAC0O,IAAxB,CAAN;AACD,OAFD;AAGD;;AAED,WAAO/B,MAAP;AACD,GAjGsB,GAAvB;AAkGD;;AACD,SAAS0B,SAAT,CAAmB9C,KAAnB,EAA0Be,QAA1B,EAAoC;AAClCvO,EAAAA,KAAK,CAACwN,KAAK,CAACQ,QAAP,EAAiB4C,CAAC,IAAIA,CAAC,CAACrM,MAAF,EAAtB,CAAL;AACAiJ,EAAAA,KAAK,CAACc,UAAN,CAAiBuC,KAAjB;AACArD,EAAAA,KAAK,CAACM,WAAN,CAAkB+C,KAAlB;AACArD,EAAAA,KAAK,CAACiC,OAAN,GAAgBjC,KAAK,CAAC6B,OAAN,GAAgB7B,KAAK,CAAC+B,OAAN,GAAgBhM,SAAhD;AACA,MAAIgL,QAAJ,EAAcf,KAAK,CAACe,QAAN,GAAiBA,QAAjB;AACf;;AACD,MAAM4B,UAAN,SAAyBW,KAAzB,CAA+B;AAC7B7E,EAAAA,WAAW,GAAG;AACZ,UAAM,6EAA6E,iEAAnF;AACA,SAAK2C,MAAL,GAAc,KAAK,CAAnB;AACD;;AAJ4B;;AAO/B,MAAMyB,mBAAN,SAAkCS,KAAlC,CAAwC;AACtC7E,EAAAA,WAAW,GAAG;AACZ,UAAM,qBAAN;AACA,SAAK2C,MAAL,GAAc,KAAK,CAAnB;AACD;;AAJqC;;AAQxC,MAAMmC,YAAY,GAAGnO,KAAK,IAAIA,KAAK,YAAYoO,UAA/C;;AACA,IAAIC,QAAQ,GAAG,CAAf;;AACA,MAAMD,UAAN,SAAyB/Q,UAAzB,CAAoC;AAClCgM,EAAAA,WAAW,GAAU;AACnB,UAAM,YAAN;AACA,SAAKiF,EAAL,GAAUD,QAAQ,EAAlB;AACA,SAAK3O,GAAL,GAAW,KAAK,CAAhB;AACA,SAAK6O,SAAL,GAAiB,CAAjB;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAO,KAAKD,SAAZ;AACD;;AAEW,MAARC,QAAQ,CAACA,QAAD,EAAW;AACrB,QAAI,KAAKD,SAAL,IAAkBC,QAAtB,EAAgC;AAC9B,WAAKD,SAAL,GAAiBC,QAAjB;;AAEA,WAAKC,iBAAL,CAAuBD,QAAvB;AACD;AACF;;AAEDrC,EAAAA,GAAG,GAAG;AACJ,UAAMuC,IAAI,GAAG9P,WAAW,CAAC,IAAD,CAAxB;AACA,WAAO8P,IAAI,IAAIA,IAAI,CAACC,QAAL,EAAf;AACD;;AAEDrN,EAAAA,EAAE,GAAU;AAAA,uCAANrB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACV,WAAOlD,OAAO,CAACuE,EAAR,CAAW,IAAX,EAAiBrB,IAAjB,CAAP;AACD;;AAED2O,EAAAA,WAAW,GAAU;AACnBtR,IAAAA,oBAAoB;;AADD,uCAAN2C,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAEnB,WAAOlD,OAAO,CAACuE,EAAR,CAAW,IAAX,EAAiBrB,IAAjB,CAAP;AACD;;AAED4O,EAAAA,MAAM,GAAG;AACP,WAAO,KAAK1C,GAAL,EAAP;AACD;;AAED2C,EAAAA,aAAa,CAAC1L,KAAD,EAAQ;AACnB,QAAIA,KAAK,IAAI,CAAb,EAAgB,KAAK2L,OAAL;AACjB;;AAEDC,EAAAA,eAAe,CAAC5L,KAAD,EAAQ;AACrB,QAAIA,KAAK,IAAI,CAAb,EAAgB,KAAK6L,OAAL;AACjB;;AAEDF,EAAAA,OAAO,GAAG,CAAE;;AAEZE,EAAAA,OAAO,GAAG,CAAE;;AAEZC,EAAAA,SAAS,CAAClP,KAAD,EAAsB;AAAA,QAAdmP,IAAc,uEAAP,KAAO;AAC7B5R,IAAAA,kBAAkB,CAAC,IAAD,EAAO;AACvB6R,MAAAA,IAAI,EAAE,QADiB;AAEvBC,MAAAA,MAAM,EAAE,IAFe;AAGvBrP,MAAAA,KAHuB;AAIvBmP,MAAAA;AAJuB,KAAP,CAAlB;AAMD;;AAEDV,EAAAA,iBAAiB,CAACD,QAAD,EAAW;AAC1B,QAAI,CAAC,KAAKW,IAAV,EAAgB;AACd3R,MAAAA,SAAS,CAACgF,IAAV,CAAe,IAAf;AACD;;AAEDjF,IAAAA,kBAAkB,CAAC,IAAD,EAAO;AACvB6R,MAAAA,IAAI,EAAE,UADiB;AAEvBC,MAAAA,MAAM,EAAE,IAFe;AAGvBb,MAAAA;AAHuB,KAAP,CAAlB;AAKD;;AArEiC;;AAyEpC,MAAMc,EAAE,GAAGC,MAAM,CAACC,GAAP,CAAW,aAAX,CAAX;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,SAAS,GAAG,CAAlB;;AACA,MAAMC,WAAW,GAAGvQ,MAAM,IAAI,CAACA,MAAM,CAACiQ,EAAD,CAAN,GAAaG,YAAd,IAA8B,CAA5D;;AACA,MAAMI,WAAW,GAAGxQ,MAAM,IAAI,CAACA,MAAM,CAACiQ,EAAD,CAAN,GAAaI,YAAd,IAA8B,CAA5D;;AACA,MAAMI,QAAQ,GAAGzQ,MAAM,IAAI,CAACA,MAAM,CAACiQ,EAAD,CAAN,GAAaK,SAAd,IAA2B,CAAtD;;AACA,MAAMI,YAAY,GAAG,CAAC1Q,MAAD,EAAS2Q,MAAT,KAAoBA,MAAM,GAAG3Q,MAAM,CAACiQ,EAAD,CAAN,IAAcI,YAAY,GAAGD,YAAhC,GAA+CpQ,MAAM,CAACiQ,EAAD,CAAN,IAAc,CAACI,YAA7G;;AACA,MAAMO,YAAY,GAAG,CAAC5Q,MAAD,EAAS4L,MAAT,KAAoBA,MAAM,GAAG5L,MAAM,CAACiQ,EAAD,CAAN,IAAcK,SAAjB,GAA6BtQ,MAAM,CAACiQ,EAAD,CAAN,IAAc,CAACK,SAA3F;;AAEA,MAAMO,WAAN,SAA0B9B,UAA1B,CAAqC;AACnC/E,EAAAA,WAAW,CAACgE,IAAD,EAAOC,IAAP,EAAa;AACtB;AACA,SAAK5N,GAAL,GAAW,KAAK,CAAhB;AACA,SAAKyQ,SAAL,GAAiB,IAAI9F,SAAJ,EAAjB;AACA,SAAKtF,KAAL,GAAa,KAAK,CAAlB;AACA,SAAK4F,YAAL,GAAoB,EAApB;AACA,SAAKyF,MAAL,GAAc;AACZnF,MAAAA,MAAM,EAAE,KADI;AAEZO,MAAAA,OAAO,EAAE,KAFG;AAGZE,MAAAA,UAAU,EAAE,IAAI2E,GAAJ,EAHA;AAIZnF,MAAAA,WAAW,EAAE,IAAImF,GAAJ,EAJD;AAKZjF,MAAAA,QAAQ,EAAE,IAAIiF,GAAJ;AALE,KAAd;AAOA,SAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB;AACA,SAAKE,WAAL,GAAmB,CAAnB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,iBAAL,GAAyB,CAAzB;;AAEA,QAAI,CAAC7T,EAAE,CAACsE,GAAH,CAAOmM,IAAP,CAAD,IAAiB,CAACzQ,EAAE,CAACsE,GAAH,CAAOoM,IAAP,CAAtB,EAAoC;AAClC,YAAM7M,KAAK,GAAG7D,EAAE,CAAC2D,GAAH,CAAO8M,IAAP,IAAenO,QAAQ,CAAC,EAAD,EAAKmO,IAAL,CAAvB,GAAoCnO,QAAQ,CAAC,EAAD,EAAKoO,IAAL,EAAW;AACnEjM,QAAAA,IAAI,EAAEgM;AAD6D,OAAX,CAA1D;;AAIA,UAAIzQ,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACC,OAAb,CAAJ,EAA2B;AACzBD,QAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD;;AAED,WAAKuE,KAAL,CAAWxE,KAAX;AACD;AACF;;AAEO,MAAJ0O,IAAI,GAAG;AACT,WAAO,EAAEU,WAAW,CAAC,IAAD,CAAX,IAAqB,KAAKO,MAAL,CAAY3D,OAAnC,KAA+CqD,QAAQ,CAAC,IAAD,CAA9D;AACD;;AAEO,MAAJY,IAAI,GAAG;AACT,WAAO1T,aAAa,CAAC,KAAKmT,SAAL,CAAe7O,EAAhB,CAApB;AACD;;AAEW,MAARiI,QAAQ,GAAG;AACb,UAAMmF,IAAI,GAAG9P,WAAW,CAAC,IAAD,CAAxB;AACA,WAAO8P,IAAI,YAAY7P,aAAhB,GAAgC6P,IAAI,CAACiC,YAAL,IAAqB,CAArD,GAAyDjC,IAAI,CAAC5P,UAAL,GAAkB4E,GAAlB,CAAsBgL,IAAI,IAAIA,IAAI,CAACiC,YAAL,IAAqB,CAAnD,CAAhE;AACD;;AAEc,MAAXf,WAAW,GAAG;AAChB,WAAOA,WAAW,CAAC,IAAD,CAAlB;AACD;;AAEc,MAAXC,WAAW,GAAG;AAChB,WAAOA,WAAW,CAAC,IAAD,CAAlB;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAOA,QAAQ,CAAC,IAAD,CAAf;AACD;;AAEY,MAATc,SAAS,GAAG;AACd,WAAO,KAAKR,MAAL,CAAY5E,OAAnB;AACD;;AAEDqF,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,QAAI3B,IAAI,GAAG,IAAX;AACA,QAAI7E,OAAO,GAAG,KAAd;AACA,UAAMyG,IAAI,GAAG,KAAKZ,SAAlB;AACA,QAAI;AACF/O,MAAAA,MADE;AAEFoJ,MAAAA;AAFE,QAGAuG,IAHJ;AAIA,UAAMC,OAAO,GAAGlS,UAAU,CAACiS,IAAI,CAACzP,EAAN,CAA1B;;AAEA,QAAI,CAAC0P,OAAD,IAAYvT,aAAa,CAACsT,IAAI,CAACzP,EAAN,CAA7B,EAAwC;AACtCkJ,MAAAA,QAAQ,GAAG3N,OAAO,CAACG,aAAa,CAAC+T,IAAI,CAACzP,EAAN,CAAd,CAAlB;AACD;;AAEDyP,IAAAA,IAAI,CAACxG,MAAL,CAAY0G,OAAZ,CAAoB,CAACvC,IAAD,EAAOpP,CAAP,KAAa;AAC/B,UAAIoP,IAAI,CAACwC,IAAT,EAAe;AACf,YAAM5P,EAAE,GAAGoN,IAAI,CAACrF,WAAL,IAAoBtK,cAApB,GAAqC,CAArC,GAAyCiS,OAAO,GAAGA,OAAO,CAAC1R,CAAD,CAAP,CAAW6R,YAAd,GAA6B3G,QAAQ,CAAClL,CAAD,CAAhG;AACA,UAAIiN,QAAQ,GAAGwE,IAAI,CAAClP,SAApB;AACA,UAAIuP,QAAQ,GAAG9P,EAAf;;AAEA,UAAI,CAACiL,QAAL,EAAe;AACb6E,QAAAA,QAAQ,GAAG1C,IAAI,CAACyC,YAAhB;;AAEA,YAAI/P,MAAM,CAACsE,OAAP,IAAkB,CAAtB,EAAyB;AACvBgJ,UAAAA,IAAI,CAACwC,IAAL,GAAY,IAAZ;AACA;AACD;;AAED,YAAIG,OAAO,GAAG3C,IAAI,CAAC4C,WAAL,IAAoBR,EAAlC;AACA,cAAMzP,IAAI,GAAG0P,IAAI,CAACtG,UAAL,CAAgBnL,CAAhB,CAAb;AACA,cAAMiS,EAAE,GAAG7C,IAAI,CAAC6C,EAAL,IAAW,IAAX,GAAkB7C,IAAI,CAAC6C,EAAvB,GAA4B7C,IAAI,CAAC6C,EAAL,GAAU3U,EAAE,CAAC6G,GAAH,CAAOrC,MAAM,CAACmI,QAAd,IAA0BnI,MAAM,CAACmI,QAAP,CAAgBjK,CAAhB,CAA1B,GAA+C8B,MAAM,CAACmI,QAAvG;AACA,YAAIA,QAAJ;;AAEA,YAAI,CAAC3M,EAAE,CAACsE,GAAH,CAAOE,MAAM,CAACuI,QAAd,CAAL,EAA8B;AAC5B,cAAIzE,CAAC,GAAG,CAAR;;AAEA,cAAI9D,MAAM,CAACuI,QAAP,GAAkB,CAAtB,EAAyB;AACvB,gBAAI,KAAK8G,iBAAL,KAA2BrP,MAAM,CAACuI,QAAtC,EAAgD;AAC9C,mBAAK8G,iBAAL,GAAyBrP,MAAM,CAACuI,QAAhC;;AAEA,kBAAI+E,IAAI,CAAC8C,gBAAL,GAAwB,CAA5B,EAA+B;AAC7B9C,gBAAAA,IAAI,CAAC4C,WAAL,GAAmBlQ,MAAM,CAACuI,QAAP,GAAkB+E,IAAI,CAAC8C,gBAA1C;AACAH,gBAAAA,OAAO,GAAG3C,IAAI,CAAC4C,WAAL,IAAoBR,EAA9B;AACD;AACF;;AAED5L,YAAAA,CAAC,GAAG,CAAC9D,MAAM,CAACsI,QAAP,IAAmB,CAApB,IAAyB2H,OAAO,GAAG,KAAKZ,iBAA5C;AACAvL,YAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAA5B;AACAwJ,YAAAA,IAAI,CAAC8C,gBAAL,GAAwBtM,CAAxB;AACD;;AAEDkM,UAAAA,QAAQ,GAAG/P,IAAI,GAAGD,MAAM,CAAC8H,MAAP,CAAchE,CAAd,KAAoB5D,EAAE,GAAGD,IAAzB,CAAlB;AACAkI,UAAAA,QAAQ,GAAG,CAAC6H,QAAQ,GAAG1C,IAAI,CAACyC,YAAjB,IAAiCL,EAA5C;AACAvE,UAAAA,QAAQ,GAAGrH,CAAC,IAAI,CAAhB;AACD,SArBD,MAqBO,IAAI9D,MAAM,CAACyI,KAAX,EAAkB;AACrB,gBAAMA,KAAK,GAAGzI,MAAM,CAACyI,KAAP,KAAiB,IAAjB,GAAwB,KAAxB,GAAgCzI,MAAM,CAACyI,KAArD;AACA,gBAAM4H,CAAC,GAAGpL,IAAI,CAACqL,GAAL,CAAS,EAAE,IAAI7H,KAAN,IAAewH,OAAxB,CAAV;AACAD,UAAAA,QAAQ,GAAG/P,IAAI,GAAGkQ,EAAE,IAAI,IAAI1H,KAAR,CAAF,IAAoB,IAAI4H,CAAxB,CAAlB;AACAlF,UAAAA,QAAQ,GAAGlG,IAAI,CAACsL,GAAL,CAASjD,IAAI,CAACyC,YAAL,GAAoBC,QAA7B,IAAyC,GAApD;AACA7H,UAAAA,QAAQ,GAAGgI,EAAE,GAAGE,CAAhB;AACD,SANI,MAME;AACHlI,UAAAA,QAAQ,GAAGmF,IAAI,CAACiC,YAAL,IAAqB,IAArB,GAA4BY,EAA5B,GAAiC7C,IAAI,CAACiC,YAAjD;AACA,gBAAMlH,SAAS,GAAGrI,MAAM,CAACqI,SAAP,KAAqBpI,IAAI,IAAIC,EAAR,GAAa,KAAb,GAAqB+E,IAAI,CAACuL,GAAL,CAAS,CAAT,EAAYvL,IAAI,CAACsL,GAAL,CAASrQ,EAAE,GAAGD,IAAd,IAAsB,KAAlC,CAA1C,CAAlB;AACA,gBAAMmI,YAAY,GAAGpI,MAAM,CAACoI,YAAP,IAAuBC,SAAS,GAAG,EAAxD;AACA,gBAAMoI,YAAY,GAAGzQ,MAAM,CAAC+H,KAAP,GAAe,CAAf,GAAmB/H,MAAM,CAACwI,MAA/C;AACA,gBAAMkI,SAAS,GAAG,CAAClV,EAAE,CAACsE,GAAH,CAAO2Q,YAAP,CAAnB;AACA,gBAAME,SAAS,GAAG1Q,IAAI,IAAIC,EAAR,GAAaoN,IAAI,CAAC6C,EAAL,GAAU,CAAvB,GAA2BlQ,IAAI,GAAGC,EAApD;AACA,cAAI0Q,QAAJ;AACA,cAAIC,UAAU,GAAG,KAAjB;AACA,gBAAMC,IAAI,GAAG,CAAb;AACA,gBAAMC,QAAQ,GAAG9L,IAAI,CAAC+L,IAAL,CAAUtB,EAAE,GAAGoB,IAAf,CAAjB;;AAEA,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8B,EAAEE,CAAhC,EAAmC;AACjCL,YAAAA,QAAQ,GAAG3L,IAAI,CAACsL,GAAL,CAASpI,QAAT,IAAqBC,YAAhC;;AAEA,gBAAI,CAACwI,QAAL,EAAe;AACbzF,cAAAA,QAAQ,GAAGlG,IAAI,CAACsL,GAAL,CAASrQ,EAAE,GAAG8P,QAAd,KAA2B3H,SAAtC;;AAEA,kBAAI8C,QAAJ,EAAc;AACZ;AACD;AACF;;AAED,gBAAIuF,SAAJ,EAAe;AACbG,cAAAA,UAAU,GAAGb,QAAQ,IAAI9P,EAAZ,IAAkB8P,QAAQ,GAAG9P,EAAX,IAAiByQ,SAAhD;;AAEA,kBAAIE,UAAJ,EAAgB;AACd1I,gBAAAA,QAAQ,GAAG,CAACA,QAAD,GAAYsI,YAAvB;AACAT,gBAAAA,QAAQ,GAAG9P,EAAX;AACD;AACF;;AAED,kBAAMgR,WAAW,GAAG,CAAClR,MAAM,CAACsE,OAAR,GAAkB,QAAlB,IAA8B0L,QAAQ,GAAG9P,EAAzC,CAApB;AACA,kBAAMiR,YAAY,GAAG,CAACnR,MAAM,CAACuE,QAAR,GAAmB,KAAnB,GAA2B4D,QAAhD;AACA,kBAAMiJ,YAAY,GAAG,CAACF,WAAW,GAAGC,YAAf,IAA+BnR,MAAM,CAAC4H,IAA3D;AACAO,YAAAA,QAAQ,GAAGA,QAAQ,GAAGiJ,YAAY,GAAGN,IAArC;AACAd,YAAAA,QAAQ,GAAGA,QAAQ,GAAG7H,QAAQ,GAAG2I,IAAjC;AACD;AACF;;AAELxD,QAAAA,IAAI,CAACiC,YAAL,GAAoBpH,QAApB;;AAEA,YAAIkJ,MAAM,CAAC3N,KAAP,CAAasM,QAAb,CAAJ,EAA4B;AAC1BsB,UAAAA,OAAO,CAACC,IAAR,CAAc,0BAAd,EAAyC,IAAzC;AACApG,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AAED,UAAIyE,OAAO,IAAI,CAACA,OAAO,CAAC1R,CAAD,CAAP,CAAW4R,IAA3B,EAAiC;AAC/B3E,QAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,UAAIA,QAAJ,EAAc;AACZmC,QAAAA,IAAI,CAACwC,IAAL,GAAY,IAAZ;AACD,OAFD,MAEO;AACL/B,QAAAA,IAAI,GAAG,KAAP;AACD;;AAED,UAAIT,IAAI,CAACkE,QAAL,CAAcxB,QAAd,EAAwBhQ,MAAM,CAAC0I,KAA/B,CAAJ,EAA2C;AACzCQ,QAAAA,OAAO,GAAG,IAAV;AACD;AACF,KA3GD;AA4GA,UAAMoE,IAAI,GAAG9P,WAAW,CAAC,IAAD,CAAxB;AACA,UAAMiU,OAAO,GAAGnE,IAAI,CAACC,QAAL,EAAhB;;AAEA,QAAIQ,IAAJ,EAAU;AACR,YAAM2D,QAAQ,GAAG9V,aAAa,CAAC+T,IAAI,CAACzP,EAAN,CAA9B;;AAEA,UAAI,CAACuR,OAAO,KAAKC,QAAZ,IAAwBxI,OAAzB,KAAqC,CAAClJ,MAAM,CAACyI,KAAjD,EAAwD;AACtD6E,QAAAA,IAAI,CAACkE,QAAL,CAAcE,QAAd;;AAEA,aAAK5D,SAAL,CAAe4D,QAAf;AACD,OAJD,MAIO,IAAIxI,OAAO,IAAIlJ,MAAM,CAACyI,KAAtB,EAA6B;AAClC,aAAKqF,SAAL,CAAe2D,OAAf;AACD;;AAED,WAAKE,KAAL;AACD,KAZD,MAYO,IAAIzI,OAAJ,EAAa;AAClB,WAAK4E,SAAL,CAAe2D,OAAf;AACD;AACF;;AAEDG,EAAAA,GAAG,CAAChT,KAAD,EAAQ;AACT7C,IAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM;AACvB,WAAKiF,KAAL;;AAEA,WAAKE,MAAL,CAAYjT,KAAZ;;AAEA,WAAKkT,IAAL,CAAUlT,KAAV;AACD,KAND;AAOA,WAAO,IAAP;AACD;;AAED0B,EAAAA,KAAK,GAAG;AACN,SAAKyR,OAAL,CAAa;AACXzR,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDyJ,EAAAA,MAAM,GAAG;AACP,SAAKgI,OAAL,CAAa;AACXzR,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED0R,EAAAA,MAAM,GAAG;AACP,QAAIvD,WAAW,CAAC,IAAD,CAAf,EAAuB;AACrB,YAAM;AACJvO,QAAAA,EADI;AAEJF,QAAAA;AAFI,UAGF,KAAK+O,SAHT;AAIAhT,MAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM;AACvB,aAAKuF,QAAL;;AAEA,YAAI,CAACjS,MAAM,CAACyI,KAAZ,EAAmB;AACjB,eAAKqJ,IAAL,CAAU5R,EAAV,EAAc,KAAd;AACD;;AAED,aAAKyR,KAAL;AACD,OARD;AASD;;AAED,WAAO,IAAP;AACD;;AAEDnQ,EAAAA,MAAM,CAACnC,KAAD,EAAQ;AACZ,UAAMsE,KAAK,GAAG,KAAKA,KAAL,KAAe,KAAKA,KAAL,GAAa,EAA5B,CAAd;AACAA,IAAAA,KAAK,CAACS,IAAN,CAAW/E,KAAX;AACA,WAAO,IAAP;AACD;;AAEDwE,EAAAA,KAAK,CAAC3D,EAAD,EAAKgM,IAAL,EAAW;AACd,QAAIvI,KAAJ;;AAEA,QAAI,CAACnI,EAAE,CAACsE,GAAH,CAAOI,EAAP,CAAL,EAAiB;AACfyD,MAAAA,KAAK,GAAG,CAACnI,EAAE,CAAC2D,GAAH,CAAOe,EAAP,IAAaA,EAAb,GAAkBpC,QAAQ,CAAC,EAAD,EAAKoO,IAAL,EAAW;AAC5ChM,QAAAA;AAD4C,OAAX,CAA3B,CAAR;AAGD,KAJD,MAIO;AACLyD,MAAAA,KAAK,GAAG,KAAKA,KAAL,IAAc,EAAtB;AACA,WAAKA,KAAL,GAAa,EAAb;AACD;;AAED,WAAOI,OAAO,CAACM,GAAR,CAAYV,KAAK,CAACrB,GAAN,CAAUjD,KAAK,IAAI;AACpC,YAAM6S,EAAE,GAAG,KAAKH,OAAL,CAAa1S,KAAb,CAAX;;AAEA,aAAO6S,EAAP;AACD,KAJkB,CAAZ,EAIH/N,IAJG,CAIEuG,OAAO,IAAID,iBAAiB,CAAC,IAAD,EAAOC,OAAP,CAJ9B,CAAP;AAKD;;AAED8B,EAAAA,IAAI,CAACjM,MAAD,EAAS;AACX,UAAM;AACJL,MAAAA;AADI,QAEF,KAAK6O,SAFT;;AAIA,SAAK8C,MAAL,CAAY,KAAK9G,GAAL,EAAZ;;AAEAuB,IAAAA,SAAS,CAAC,KAAK0C,MAAN,EAAczO,MAAM,IAAI,KAAK4O,WAA7B,CAAT;AACApT,IAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM,KAAKiF,KAAL,CAAWzR,EAAX,EAAeK,MAAf,CAAzB;AACA,WAAO,IAAP;AACD;;AAEDF,EAAAA,KAAK,GAAG;AACN,SAAK0R,OAAL,CAAa;AACX1R,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED8R,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,QAAIA,KAAK,CAACpE,IAAN,IAAc,QAAlB,EAA4B;AAC1B,WAAKqE,MAAL;AACD,KAFD,MAEO,IAAID,KAAK,CAACpE,IAAN,IAAc,UAAlB,EAA8B;AACnC,WAAKZ,QAAL,GAAgBgF,KAAK,CAAChF,QAAN,GAAiB,CAAjC;AACD;AACF;;AAEDkF,EAAAA,YAAY,CAACjT,KAAD,EAAQ;AAClB,UAAMf,GAAG,GAAG,KAAKA,GAAL,IAAY,EAAxB;AACA,QAAI;AACF4B,MAAAA,EADE;AAEFD,MAAAA;AAFE,QAGAZ,KAHJ;AAIAa,IAAAA,EAAE,GAAG1E,EAAE,CAAC2D,GAAH,CAAOe,EAAP,IAAaA,EAAE,CAAC5B,GAAD,CAAf,GAAuB4B,EAA5B;;AAEA,QAAIA,EAAE,IAAI,IAAN,IAAcyC,SAAS,CAACzC,EAAD,CAA3B,EAAiC;AAC/BA,MAAAA,EAAE,GAAGX,SAAL;AACD;;AAEDU,IAAAA,IAAI,GAAGzE,EAAE,CAAC2D,GAAH,CAAOc,IAAP,IAAeA,IAAI,CAAC3B,GAAD,CAAnB,GAA2B2B,IAAlC;;AAEA,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBA,MAAAA,IAAI,GAAGV,SAAP;AACD;;AAED,UAAMgD,KAAK,GAAG;AACZrC,MAAAA,EADY;AAEZD,MAAAA;AAFY,KAAd;;AAKA,QAAI,CAACuO,WAAW,CAAC,IAAD,CAAhB,EAAwB;AACtB,UAAInP,KAAK,CAACmB,OAAV,EAAmB,CAACN,EAAD,EAAKD,IAAL,IAAa,CAACA,IAAD,EAAOC,EAAP,CAAb;AACnBD,MAAAA,IAAI,GAAGrE,aAAa,CAACqE,IAAD,CAApB;;AAEA,UAAI,CAACzE,EAAE,CAACsE,GAAH,CAAOG,IAAP,CAAL,EAAmB;AACjB,aAAK6R,IAAL,CAAU7R,IAAV;AACD,OAFD,MAEO,IAAI,CAACzC,WAAW,CAAC,IAAD,CAAhB,EAAwB;AAC3B,aAAKsU,IAAL,CAAU5R,EAAV;AACD;AACJ;;AAED,WAAOqC,KAAP;AACD;;AAEDwP,EAAAA,OAAO,CAACQ,IAAD,EAAOC,MAAP,EAAe;AACpB,QAAInT,KAAK,GAAGvB,QAAQ,CAAC,EAAD,EAAKyU,IAAL,CAApB;;AAEA,UAAM;AACJjU,MAAAA,GADI;AAEJiL,MAAAA;AAFI,QAGF,IAHJ;AAIA,QAAIlK,KAAK,CAACC,OAAV,EAAmBvB,MAAM,CAACC,MAAP,CAAcuL,YAAd,EAA4B9J,eAAe,CAACJ,KAAD,EAAQ,CAACT,KAAD,EAAQM,IAAR,KAAiB,MAAMuT,IAAN,CAAWvT,IAAX,IAAmBD,WAAW,CAACL,KAAD,EAAQN,GAAR,CAA9B,GAA6CM,KAAtE,CAA3C;AACnB8T,IAAAA,aAAa,CAAC,IAAD,EAAOrT,KAAP,EAAc,SAAd,CAAb;AACAsT,IAAAA,SAAS,CAAC,IAAD,EAAO,SAAP,EAAkBtT,KAAlB,EAAyB,IAAzB,CAAT;;AAEA,UAAMkD,KAAK,GAAG,KAAK+P,YAAL,CAAkBjT,KAAlB,CAAd;;AAEA,QAAItB,MAAM,CAAC6U,QAAP,CAAgB,IAAhB,CAAJ,EAA2B;AACzB,YAAM9F,KAAK,CAAC,2DAA2D,sFAA5D,CAAX;AACD;;AAED,UAAMtD,KAAK,GAAG,KAAKwF,MAAnB;AACA,WAAO1F,aAAa,CAAC,EAAE,KAAK6F,WAAR,EAAqB;AACvC7Q,MAAAA,GADuC;AAEvCe,MAAAA,KAFuC;AAGvCkK,MAAAA,YAHuC;AAIvCC,MAAAA,KAJuC;AAKvCC,MAAAA,OAAO,EAAE;AACPnJ,QAAAA,KAAK,EAAE,MAAM;AACX,cAAI,CAACoO,QAAQ,CAAC,IAAD,CAAb,EAAqB;AACnBG,YAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,CAAZ;AACAvS,YAAAA,UAAU,CAACkN,KAAK,CAACc,UAAP,CAAV;AACAqI,YAAAA,SAAS,CAAC,IAAD,EAAO,SAAP,EAAkBzH,iBAAiB,CAAC,IAAD,EAAO2H,aAAa,CAAC,IAAD,EAAO,KAAK9D,SAAL,CAAe7O,EAAtB,CAApB,CAAnC,EAAmF,IAAnF,CAAT;AACD;AACF,SAPM;AAQP6J,QAAAA,MAAM,EAAE,MAAM;AACZ,cAAI2E,QAAQ,CAAC,IAAD,CAAZ,EAAoB;AAClBG,YAAAA,YAAY,CAAC,IAAD,EAAO,KAAP,CAAZ;;AAEA,gBAAIJ,WAAW,CAAC,IAAD,CAAf,EAAuB;AACrB,mBAAKqE,OAAL;AACD;;AAEDxW,YAAAA,UAAU,CAACkN,KAAK,CAACM,WAAP,CAAV;AACA6I,YAAAA,SAAS,CAAC,IAAD,EAAO,UAAP,EAAmBzH,iBAAiB,CAAC,IAAD,EAAO2H,aAAa,CAAC,IAAD,EAAO,KAAK9D,SAAL,CAAe7O,EAAtB,CAApB,CAApC,EAAoF,IAApF,CAAT;AACD;AACF,SAnBM;AAoBP2D,QAAAA,KAAK,EAAE,KAAKkP,MAAL,CAAYtG,IAAZ,CAAiB,IAAjB,EAAuBlK,KAAvB;AApBA;AAL8B,KAArB,CAAb,CA2BJ4B,IA3BI,CA2BCyG,MAAM,IAAI;AAChB,UAAIvL,KAAK,CAACe,IAAN,IAAcwK,MAAM,CAACO,QAArB,IAAiC,EAAEqH,MAAM,IAAI5H,MAAM,CAACjO,IAAnB,CAArC,EAA+D;AAC7D,cAAMqW,SAAS,GAAGC,gBAAgB,CAAC5T,KAAD,CAAlC;;AAEA,YAAI2T,SAAJ,EAAe;AACb,iBAAO,KAAKjB,OAAL,CAAaiB,SAAb,EAAwB,IAAxB,CAAP;AACD;AACF;;AAED,aAAOpI,MAAP;AACD,KArCM,CAAP;AAsCD;;AAEDmI,EAAAA,MAAM,CAACxQ,KAAD,EAAQlD,KAAR,EAAe2E,OAAf,EAAwB;AAC5B,QAAI3E,KAAK,CAACkB,MAAV,EAAkB;AAChB,WAAKiM,IAAL,CAAU,IAAV;AACA,aAAOxI,OAAO,CAAC8G,kBAAkB,CAAC,IAAD,CAAnB,CAAd;AACD;;AAED,UAAMoI,SAAS,GAAG,CAAC1X,EAAE,CAACsE,GAAH,CAAOyC,KAAK,CAACrC,EAAb,CAAnB;AACA,UAAMiT,WAAW,GAAG,CAAC3X,EAAE,CAACsE,GAAH,CAAOyC,KAAK,CAACtC,IAAb,CAArB;;AAEA,QAAIiT,SAAS,IAAIC,WAAjB,EAA8B;AAC5B,UAAI9T,KAAK,CAACuC,MAAN,GAAe,KAAKwN,SAAxB,EAAmC;AACjC,aAAKA,SAAL,GAAiB/P,KAAK,CAACuC,MAAvB;AACD,OAFD,MAEO;AACL,eAAOoC,OAAO,CAAC8G,kBAAkB,CAAC,IAAD,CAAnB,CAAd;AACD;AACF;;AAED,UAAM;AACJxM,MAAAA,GADI;AAEJiL,MAAAA,YAFI;AAGJwF,MAAAA,SAAS,EAAEY;AAHP,QAIF,IAJJ;AAKA,UAAM;AACJzP,MAAAA,EAAE,EAAEoL,MADA;AAEJrL,MAAAA,IAAI,EAAEmT;AAFF,QAGFzD,IAHJ;AAIA,QAAI;AACFzP,MAAAA,EAAE,GAAGoL,MADH;AAEFrL,MAAAA,IAAI,GAAGmT;AAFL,QAGA7Q,KAHJ;;AAKA,QAAI4Q,WAAW,IAAI,CAACD,SAAhB,KAA8B,CAAC7T,KAAK,CAACC,OAAP,IAAkB9D,EAAE,CAACsE,GAAH,CAAOI,EAAP,CAAhD,CAAJ,EAAiE;AAC/DA,MAAAA,EAAE,GAAGD,IAAL;AACD;;AAED,QAAIZ,KAAK,CAACmB,OAAV,EAAmB,CAACN,EAAD,EAAKD,IAAL,IAAa,CAACA,IAAD,EAAOC,EAAP,CAAb;AACnB,UAAMmT,cAAc,GAAG,CAAC9W,OAAO,CAAC0D,IAAD,EAAOmT,QAAP,CAA/B;;AAEA,QAAIC,cAAJ,EAAoB;AAClB1D,MAAAA,IAAI,CAAC1P,IAAL,GAAYA,IAAZ;AACD;;AAEDA,IAAAA,IAAI,GAAGrE,aAAa,CAACqE,IAAD,CAApB;AACA,UAAMqT,YAAY,GAAG,CAAC/W,OAAO,CAAC2D,EAAD,EAAKoL,MAAL,CAA7B;;AAEA,QAAIgI,YAAJ,EAAkB;AAChB,WAAKzB,MAAL,CAAY3R,EAAZ;AACD;;AAED,UAAMqT,UAAU,GAAG5Q,SAAS,CAACtD,KAAK,CAACa,EAAP,CAA5B;AACA,UAAM;AACJF,MAAAA;AADI,QAEF2P,IAFJ;AAGA,UAAM;AACJlH,MAAAA,KADI;AAEJN,MAAAA;AAFI,QAGFnI,MAHJ;;AAKA,QAAIkT,SAAS,IAAIC,WAAjB,EAA8B;AAC5BnT,MAAAA,MAAM,CAACmI,QAAP,GAAkB,CAAlB;AACD;;AAED,QAAI9I,KAAK,CAACW,MAAN,IAAgB,CAACuT,UAArB,EAAiC;AAC/B5K,MAAAA,WAAW,CAAC3I,MAAD,EAASrB,QAAQ,CAACU,KAAK,CAACW,MAAP,EAAe1B,GAAf,CAAjB,EAAsCe,KAAK,CAACW,MAAN,KAAiBuJ,YAAY,CAACvJ,MAA9B,GAAuCrB,QAAQ,CAAC4K,YAAY,CAACvJ,MAAd,EAAsB1B,GAAtB,CAA/C,GAA4E,KAAK,CAAvH,CAAX;AACD;;AAED,QAAIgP,IAAI,GAAG9P,WAAW,CAAC,IAAD,CAAtB;;AAEA,QAAI,CAAC8P,IAAD,IAAS9R,EAAE,CAACsE,GAAH,CAAOI,EAAP,CAAb,EAAyB;AACvB,aAAO8D,OAAO,CAACkH,iBAAiB,CAAC,IAAD,EAAO,IAAP,CAAlB,CAAd;AACD;;AAED,UAAM7K,KAAK,GAAG7E,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACgB,KAAb,IAAsB8S,WAAW,IAAI,CAAC9T,KAAK,CAACC,OAA5C,GAAsD,CAAC9D,EAAE,CAACsE,GAAH,CAAOG,IAAP,CAAD,IAAiBlB,SAAS,CAACM,KAAK,CAACgB,KAAP,EAAc/B,GAAd,CAA9F;AACA,UAAMM,KAAK,GAAGyB,KAAK,GAAGJ,IAAH,GAAU,KAAK8K,GAAL,EAA7B;AACA,UAAMuE,IAAI,GAAGlN,WAAW,CAAClC,EAAD,CAAxB;AACA,UAAMsT,YAAY,GAAGhY,EAAE,CAACiY,GAAH,CAAOnE,IAAP,KAAgB9T,EAAE,CAAC6G,GAAH,CAAOiN,IAAP,CAAhB,IAAgC5T,gBAAgB,CAAC4T,IAAD,CAArE;AACA,UAAM7O,SAAS,GAAG,CAAC8S,UAAD,KAAgB,CAACC,YAAD,IAAiBzU,SAAS,CAACwK,YAAY,CAAC9I,SAAb,IAA0BpB,KAAK,CAACoB,SAAjC,EAA4CnC,GAA5C,CAA1C,CAAlB;;AAEA,QAAIgV,YAAJ,EAAkB;AAChB,YAAMI,QAAQ,GAAG9V,eAAe,CAACsC,EAAD,CAAhC;;AAEA,UAAIwT,QAAQ,KAAKpG,IAAI,CAACrF,WAAtB,EAAmC;AACjC,YAAIxH,SAAJ,EAAe;AACb6M,UAAAA,IAAI,GAAG,KAAKwE,IAAL,CAAUxC,IAAV,CAAP;AACD,SAFD,MAEO,MAAMxC,KAAK,CAAE,0BAAyBQ,IAAI,CAACrF,WAAL,CAAiB0L,IAAK,QAAOD,QAAQ,CAACC,IAAK,6BAAtE,CAAX;AACR;AACF;;AAED,UAAMC,QAAQ,GAAGtG,IAAI,CAACrF,WAAtB;AACA,QAAI4L,OAAO,GAAGxX,aAAa,CAAC6D,EAAD,CAA3B;AACA,QAAIiL,QAAQ,GAAG,KAAf;;AAEA,QAAI,CAAC0I,OAAL,EAAc;AACZ,YAAMC,eAAe,GAAGzT,KAAK,IAAI,CAACmO,WAAW,CAAC,IAAD,CAAZ,IAAsB6E,cAAvD;;AAEA,UAAIC,YAAY,IAAIQ,eAApB,EAAqC;AACnC3I,QAAAA,QAAQ,GAAG5O,OAAO,CAAC6F,WAAW,CAACxD,KAAD,CAAZ,EAAqB0Q,IAArB,CAAlB;AACAuE,QAAAA,OAAO,GAAG,CAAC1I,QAAX;AACD;;AAED,UAAI,CAAC5O,OAAO,CAACoT,IAAI,CAAClP,SAAN,EAAiBA,SAAjB,CAAR,IAAuC,CAACA,SAAxC,IAAqD,CAAClE,OAAO,CAACyD,MAAM,CAACyI,KAAR,EAAeA,KAAf,CAA7D,IAAsF,CAAClM,OAAO,CAACyD,MAAM,CAACmI,QAAR,EAAkBA,QAAlB,CAAlG,EAA+H;AAC7H0L,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,QAAI1I,QAAQ,IAAIsD,WAAW,CAAC,IAAD,CAA3B,EAAmC;AACjC,UAAIkB,IAAI,CAACzG,OAAL,IAAgB,CAAC7I,KAArB,EAA4B;AAC1BwT,QAAAA,OAAO,GAAG,IAAV;AACD,OAFD,MAEO,IAAI,CAACA,OAAL,EAAc;AACjB,aAAKlC,KAAL,CAAWrG,MAAX;AACD;AACJ;;AAED,QAAI,CAACiI,UAAL,EAAiB;AACf,UAAIM,OAAO,IAAIxX,aAAa,CAACiP,MAAD,CAA5B,EAAsC;AACpCqE,QAAAA,IAAI,CAACxG,MAAL,GAAcmE,IAAI,CAAC5P,UAAL,EAAd;AACAiS,QAAAA,IAAI,CAACvG,QAAL,GAAgB/M,aAAa,CAAC6D,EAAD,CAAb,GAAoB,IAApB,GAA2B0T,QAAQ,IAAIjW,cAAZ,GAA6B,CAAC,CAAD,CAA7B,GAAmClC,OAAO,CAAC6T,IAAD,CAArF;AACD;;AAED,UAAIK,IAAI,CAAClP,SAAL,IAAkBA,SAAtB,EAAiC;AAC/BkP,QAAAA,IAAI,CAAClP,SAAL,GAAiBA,SAAjB;;AAEA,YAAI,CAACA,SAAD,IAAc,CAACJ,KAAnB,EAA0B;AACxB,eAAKyR,IAAL,CAAUxG,MAAV;AACD;AACF;;AAED,UAAIuI,OAAJ,EAAa;AACX,cAAM;AACJ7S,UAAAA;AADI,YAEF2O,IAFJ;AAGA7T,QAAAA,IAAI,CAACiY,aAAD,EAAgB/F,IAAI,IAAI0E,aAAa,CAAC,IAAD,EAAOrT,KAAP,EAAc2O,IAAd,CAArC,CAAJ;AACA,cAAMpD,MAAM,GAAGM,iBAAiB,CAAC,IAAD,EAAO2H,aAAa,CAAC,IAAD,EAAOvH,MAAP,CAApB,CAAhC;AACAhP,QAAAA,UAAU,CAAC,KAAK4S,aAAN,EAAqBtE,MAArB,CAAV;;AAEA,aAAKsE,aAAL,CAAmBhM,GAAnB,CAAuBc,OAAvB;;AAEA,YAAI2L,IAAI,CAACzG,OAAT,EAAkBnN,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM;AACzCiD,UAAAA,IAAI,CAACzG,OAAL,GAAe,CAAC7I,KAAhB;AACAW,UAAAA,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAAC4J,MAAD,EAAS,IAAT,CAAhC;;AAEA,cAAIvK,KAAJ,EAAW;AACT1B,YAAAA,QAAQ,CAAC4K,YAAY,CAACvI,MAAd,EAAsB4J,MAAtB,CAAR;AACD,WAFD,MAEO;AACH+E,YAAAA,IAAI,CAAC/O,OAAL,IAAgB,IAAhB,GAAuB,KAAK,CAA5B,GAAgC+O,IAAI,CAAC/O,OAAL,CAAagK,MAAb,EAAqB,IAArB,CAAhC;AACD;AACJ,SATiB;AAUnB;AACF;;AAED,QAAIvK,KAAJ,EAAW;AACT,WAAKyR,IAAL,CAAUlT,KAAV;AACD;;AAED,QAAI2U,UAAJ,EAAgB;AACdvP,MAAAA,OAAO,CAACoH,QAAQ,CAAC/L,KAAK,CAACa,EAAP,EAAWb,KAAX,EAAkB,KAAK2P,MAAvB,EAA+B,IAA/B,CAAT,CAAP;AACD,KAFD,MAEO,IAAI6E,OAAJ,EAAa;AAChB,WAAKxB,MAAL;AACD,KAFI,MAEE,IAAI5D,WAAW,CAAC,IAAD,CAAX,IAAqB,CAAC6E,YAA1B,EAAwC;AAC3C,WAAKpE,aAAL,CAAmBhM,GAAnB,CAAuBc,OAAvB;AACD,KAFI,MAEE;AACHA,MAAAA,OAAO,CAACiH,aAAa,CAACrM,KAAD,CAAd,CAAP;AACD;AACR;;AAEDiT,EAAAA,MAAM,CAACjT,KAAD,EAAQ;AACZ,UAAM+Q,IAAI,GAAG,KAAKZ,SAAlB;;AAEA,QAAInQ,KAAK,KAAK+Q,IAAI,CAACzP,EAAnB,EAAuB;AACrB,UAAI1D,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AAC3B,aAAKqR,OAAL;AACD;;AAED8B,MAAAA,IAAI,CAACzP,EAAL,GAAUtB,KAAV;;AAEA,UAAIpC,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AAC3B,aAAKmR,OAAL;AACD;AACF;AACF;;AAEDA,EAAAA,OAAO,GAAG;AACR,QAAIP,QAAQ,GAAG,CAAf;AACA,UAAM;AACJlN,MAAAA;AADI,QAEF,KAAK6O,SAFT;;AAIA,QAAI1S,aAAa,CAAC6D,EAAD,CAAjB,EAAuB;AACrBzD,MAAAA,gBAAgB,CAACyD,EAAD,EAAK,IAAL,CAAhB;;AAEA,UAAI6M,YAAY,CAAC7M,EAAD,CAAhB,EAAsB;AACpBkN,QAAAA,QAAQ,GAAGlN,EAAE,CAACkN,QAAH,GAAc,CAAzB;AACD;AACF;;AAED,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;AAEDS,EAAAA,OAAO,GAAG;AACR,UAAM;AACJ3N,MAAAA;AADI,QAEF,KAAK6O,SAFT;;AAIA,QAAI1S,aAAa,CAAC6D,EAAD,CAAjB,EAAuB;AACrBxD,MAAAA,mBAAmB,CAACwD,EAAD,EAAK,IAAL,CAAnB;AACD;AACF;;AAED4R,EAAAA,IAAI,CAACkC,GAAD,EAAmB;AAAA,QAAbjG,IAAa,uEAAN,IAAM;AACrB,UAAMnP,KAAK,GAAGhD,aAAa,CAACoY,GAAD,CAA3B;;AAEA,QAAI,CAACxY,EAAE,CAACsE,GAAH,CAAOlB,KAAP,CAAL,EAAoB;AAClB,YAAMqV,OAAO,GAAGzW,WAAW,CAAC,IAAD,CAA3B;;AAEA,UAAI,CAACyW,OAAD,IAAY,CAAC1X,OAAO,CAACqC,KAAD,EAAQqV,OAAO,CAAC1G,QAAR,EAAR,CAAxB,EAAqD;AACnD,cAAMmG,QAAQ,GAAG9V,eAAe,CAACgB,KAAD,CAAhC;;AAEA,YAAI,CAACqV,OAAD,IAAYA,OAAO,CAAChM,WAAR,IAAuByL,QAAvC,EAAiD;AAC/C7V,UAAAA,WAAW,CAAC,IAAD,EAAO6V,QAAQ,CAACQ,MAAT,CAAgBtV,KAAhB,CAAP,CAAX;AACD,SAFD,MAEO;AACLqV,UAAAA,OAAO,CAACzC,QAAR,CAAiB5S,KAAjB;AACD;;AAED,YAAIqV,OAAJ,EAAa;AACXlY,UAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM;AACvB,iBAAKoB,SAAL,CAAelP,KAAf,EAAsBmP,IAAtB;AACD,WAFD;AAGD;AACF;AACF;;AAED,WAAOvQ,WAAW,CAAC,IAAD,CAAlB;AACD;;AAEDyU,EAAAA,QAAQ,GAAG;AACT,UAAMtC,IAAI,GAAG,KAAKZ,SAAlB;;AAEA,QAAI,CAACY,IAAI,CAACzG,OAAV,EAAmB;AACjByG,MAAAA,IAAI,CAACzG,OAAL,GAAe,IAAf;AACAyJ,MAAAA,SAAS,CAAC,IAAD,EAAO,SAAP,EAAkBzH,iBAAiB,CAAC,IAAD,EAAO2H,aAAa,CAAC,IAAD,EAAOlD,IAAI,CAACzP,EAAZ,CAApB,CAAnC,EAAyE,IAAzE,CAAT;AACD;AACF;;AAED4N,EAAAA,SAAS,CAAClP,KAAD,EAAQmP,IAAR,EAAc;AACrB,QAAI,CAACA,IAAL,EAAW;AACT,WAAKkE,QAAL;;AAEAtT,MAAAA,QAAQ,CAAC,KAAKoQ,SAAL,CAAelO,QAAhB,EAA0BjC,KAA1B,EAAiC,IAAjC,CAAR;AACD;;AAEDD,IAAAA,QAAQ,CAAC,KAAK4K,YAAL,CAAkB1I,QAAnB,EAA6BjC,KAA7B,EAAoC,IAApC,CAAR;;AAEA,UAAMkP,SAAN,CAAgBlP,KAAhB,EAAuBmP,IAAvB;AACD;;AAEDsE,EAAAA,MAAM,GAAG;AACP,UAAM1C,IAAI,GAAG,KAAKZ,SAAlB;AACAvR,IAAAA,WAAW,CAAC,IAAD,CAAX,CAAkB6C,KAAlB,CAAwBzE,aAAa,CAAC+T,IAAI,CAACzP,EAAN,CAArC;;AAEA,QAAI,CAACyP,IAAI,CAAClP,SAAV,EAAqB;AACnBkP,MAAAA,IAAI,CAACtG,UAAL,GAAkBsG,IAAI,CAACxG,MAAL,CAAY7G,GAAZ,CAAgBgL,IAAI,IAAIA,IAAI,CAACyC,YAA7B,CAAlB;AACD;;AAED,QAAI,CAACtB,WAAW,CAAC,IAAD,CAAhB,EAAwB;AACtBE,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,CAAZ;;AAEA,UAAI,CAACD,QAAQ,CAAC,IAAD,CAAb,EAAqB;AACnB,aAAKoE,OAAL;AACD;AACF;AACF;;AAEDA,EAAAA,OAAO,GAAG;AACR,QAAInX,OAAO,CAACwO,aAAZ,EAA2B;AACzB,WAAK6H,MAAL;AACD,KAFD,MAEO;AACL5V,MAAAA,SAAS,CAACyH,KAAV,CAAgB,IAAhB;AACD;AACF;;AAED8N,EAAAA,KAAK,CAACrC,IAAD,EAAO/O,MAAP,EAAe;AAClB,QAAIkO,WAAW,CAAC,IAAD,CAAf,EAAuB;AACrBE,MAAAA,YAAY,CAAC,IAAD,EAAO,KAAP,CAAZ;AACA,YAAMgB,IAAI,GAAG,KAAKZ,SAAlB;AACAjT,MAAAA,IAAI,CAAC6T,IAAI,CAACxG,MAAN,EAAcmE,IAAI,IAAI;AACxBA,QAAAA,IAAI,CAACwC,IAAL,GAAY,IAAZ;AACD,OAFG,CAAJ;;AAIA,UAAIH,IAAI,CAACvG,QAAT,EAAmB;AACjBuG,QAAAA,IAAI,CAAC9O,QAAL,GAAgB8O,IAAI,CAAC7O,OAAL,GAAe6O,IAAI,CAAC5O,QAAL,GAAgBxB,SAA/C;AACD;;AAEDpD,MAAAA,kBAAkB,CAAC,IAAD,EAAO;AACvB6R,QAAAA,IAAI,EAAE,MADiB;AAEvBC,QAAAA,MAAM,EAAE;AAFe,OAAP,CAAlB;AAIA,YAAMrD,MAAM,GAAGrK,MAAM,GAAGuK,kBAAkB,CAAC,KAAKC,GAAL,EAAD,CAArB,GAAoCG,iBAAiB,CAAC,KAAKH,GAAL,EAAD,EAAa8H,aAAa,CAAC,IAAD,EAAOvD,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsBK,IAAI,CAACzP,EAAlC,CAA1B,CAA1E;AACA5D,MAAAA,UAAU,CAAC,KAAK4S,aAAN,EAAqBtE,MAArB,CAAV;;AAEA,UAAI+E,IAAI,CAACzG,OAAT,EAAkB;AAChByG,QAAAA,IAAI,CAACzG,OAAL,GAAe,KAAf;AACAyJ,QAAAA,SAAS,CAAC,IAAD,EAAO,QAAP,EAAiB/H,MAAjB,EAAyB,IAAzB,CAAT;AACD;AACF;AACF;;AAxrBkC;;AA4rBrC,SAASiI,aAAT,CAAuB5U,MAAvB,EAA+BiC,EAA/B,EAAmC;AACjC,QAAMoP,IAAI,GAAGlN,WAAW,CAAClC,EAAD,CAAxB;AACA,QAAMtB,KAAK,GAAGwD,WAAW,CAACnE,MAAM,CAAC8M,GAAP,EAAD,CAAzB;AACA,SAAOxO,OAAO,CAACqC,KAAD,EAAQ0Q,IAAR,CAAd;AACD;;AAED,SAAS2D,gBAAT,CAA0B5T,KAA1B,EAAmE;AAAA,MAAlCe,IAAkC,uEAA3Bf,KAAK,CAACe,IAAqB;AAAA,MAAfF,EAAe,uEAAVb,KAAK,CAACa,EAAI;AACjE,MAAIiU,OAAO,GAAGxV,QAAQ,CAACyB,IAAD,CAAtB;;AAEA,MAAI+T,OAAJ,EAAa;AACX,UAAMC,SAAS,GAAGD,OAAO,KAAK,IAAZ,IAAoBlS,OAAO,CAACkS,OAAD,CAA7C;AACA,UAAM3T,OAAO,GAAG,CAAC4T,SAAS,IAAI/U,KAAd,EAAqBmB,OAArC;AACA,UAAMH,KAAK,GAAG,CAAC+T,SAAD,IAAcA,SAAS,CAAC/T,KAAtC;AACA,WAAOgU,YAAY,CAACvW,QAAQ,CAAC,EAAD,EAAKuB,KAAL,EAAY;AACtCe,MAAAA,IADsC;AAEtCd,MAAAA,OAAO,EAAE,KAF6B;AAGtCgB,MAAAA,KAAK,EAAEf,SAH+B;AAItCW,MAAAA,EAAE,EAAE,CAACM,OAAD,IAAYmC,SAAS,CAACzC,EAAD,CAArB,GAA4BA,EAA5B,GAAiCX,SAJC;AAKtCU,MAAAA,IAAI,EAAEI,KAAK,GAAGhB,KAAK,CAACY,IAAT,GAAgBV,SALW;AAMtCc,MAAAA;AANsC,KAAZ,EAOzB+T,SAPyB,CAAT,CAAnB;AAQD;AACF;;AACD,SAASC,YAAT,CAAsBhV,KAAtB,EAA6B;AAC3B,QAAM;AACJa,IAAAA,EADI;AAEJD,IAAAA;AAFI,MAGFZ,KAAK,GAAG4C,OAAO,CAAC5C,KAAD,CAHnB;AAIA,QAAMM,IAAI,GAAG,IAAIsP,GAAJ,EAAb;AACA,MAAIzT,EAAE,CAAC2D,GAAH,CAAOe,EAAP,CAAJ,EAAgBoU,WAAW,CAACpU,EAAD,EAAKP,IAAL,CAAX;AAChB,MAAInE,EAAE,CAAC2D,GAAH,CAAOc,IAAP,CAAJ,EAAkBqU,WAAW,CAACrU,IAAD,EAAON,IAAP,CAAX;AAClBN,EAAAA,KAAK,CAACM,IAAN,GAAaA,IAAI,CAAC4U,IAAL,GAAYC,KAAK,CAACvU,IAAN,CAAWN,IAAX,CAAZ,GAA+B,IAA5C;AACA,SAAON,KAAP;AACD;;AACD,SAASoV,aAAT,CAAuBpV,KAAvB,EAA8B;AAC5B,QAAMmC,MAAM,GAAG6S,YAAY,CAAChV,KAAD,CAA3B;;AAEA,MAAI7D,EAAE,CAACsE,GAAH,CAAO0B,MAAM,CAAClC,OAAd,CAAJ,EAA4B;AAC1BkC,IAAAA,MAAM,CAAClC,OAAP,GAAiBG,eAAe,CAAC+B,MAAD,CAAhC;AACD;;AAED,SAAOA,MAAP;AACD;;AAED,SAAS8S,WAAT,CAAqBnL,MAArB,EAA6BxJ,IAA7B,EAAmC;AACjCpE,EAAAA,QAAQ,CAAC4N,MAAD,EAAS,CAACvK,KAAD,EAAQN,GAAR,KAAgBM,KAAK,IAAI,IAAT,IAAiBe,IAAI,CAACuD,GAAL,CAAS5E,GAAT,CAA1C,CAAR;AACD;;AAED,MAAMyV,aAAa,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,UAA7C,CAAtB;;AAEA,SAASrB,aAAT,CAAuBzU,MAAvB,EAA+BoB,KAA/B,EAAsC2O,IAAtC,EAA4C;AAC1C/P,EAAAA,MAAM,CAAC8Q,SAAP,CAAiBf,IAAjB,IAAyB3O,KAAK,CAAC2O,IAAD,CAAL,KAAgB5O,cAAc,CAACC,KAAD,EAAQ2O,IAAR,CAA9B,GAA8C/O,WAAW,CAACI,KAAK,CAAC2O,IAAD,CAAN,EAAc/P,MAAM,CAACK,GAArB,CAAzD,GAAqFiB,SAA9G;AACD;;AAED,SAASoT,SAAT,CAAmB1U,MAAnB,EAA2B+P,IAA3B,EAA0C;AACxC,MAAI0G,qBAAJ,EAA2BC,iBAA3B,EAA8CC,qBAA9C,EAAqEC,oBAArE;;AADwC,qCAANhW,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAGxC,GAAC6V,qBAAqB,GAAG,CAACC,iBAAiB,GAAG1W,MAAM,CAAC8Q,SAA5B,EAAuCf,IAAvC,CAAzB,KAA0E,IAA1E,GAAiF,KAAK,CAAtF,GAA0F0G,qBAAqB,CAACjW,IAAtB,CAA2BkW,iBAA3B,EAA8C,GAAG9V,IAAjD,CAA1F;AACA,GAAC+V,qBAAqB,GAAG,CAACC,oBAAoB,GAAG5W,MAAM,CAACsL,YAA/B,EAA6CyE,IAA7C,CAAzB,KAAgF,IAAhF,GAAuF,KAAK,CAA5F,GAAgG4G,qBAAqB,CAACnW,IAAtB,CAA2BoW,oBAA3B,EAAiD,GAAGhW,IAApD,CAAhG;AACD;;AAED,MAAMiW,cAAc,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAxB,CAAvB;AACA,IAAIC,MAAM,GAAG,CAAb;;AACA,MAAMC,UAAN,CAAiB;AACf/M,EAAAA,WAAW,CAAC5I,KAAD,EAAQrD,KAAR,EAAe;AACxB,SAAKkR,EAAL,GAAU6H,MAAM,EAAhB;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKtR,KAAL,GAAa,EAAb;AACA,SAAKxD,GAAL,GAAW,KAAK,CAAhB;AACA,SAAK+U,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKC,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,OAAL,GAAe,IAAIpG,GAAJ,EAAf;AACA,SAAKqG,QAAL,GAAgB,IAAIrG,GAAJ,EAAhB;AACA,SAAKsG,QAAL,GAAgB,KAAhB;AACA,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKxG,MAAL,GAAc;AACZnF,MAAAA,MAAM,EAAE,KADI;AAEZS,MAAAA,UAAU,EAAE,IAAI2E,GAAJ,EAFA;AAGZnF,MAAAA,WAAW,EAAE,IAAImF,GAAJ,EAHD;AAIZjF,MAAAA,QAAQ,EAAE,IAAIiF,GAAJ;AAJE,KAAd;AAMA,SAAKwG,OAAL,GAAe;AACb7U,MAAAA,OAAO,EAAE,IAAI8U,GAAJ,EADI;AAEb7U,MAAAA,QAAQ,EAAE,IAAI6U,GAAJ,EAFG;AAGb1U,MAAAA,MAAM,EAAE,IAAI0U,GAAJ;AAHK,KAAf;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAclJ,IAAd,CAAmB,IAAnB,CAAhB;;AAEA,QAAIzQ,KAAJ,EAAW;AACT,WAAKkZ,MAAL,GAAclZ,KAAd;AACD;;AAED,QAAIqD,KAAJ,EAAW;AACT,WAAKwE,KAAL,CAAW/F,QAAQ,CAAC;AAClBwB,QAAAA,OAAO,EAAE;AADS,OAAD,EAEhBD,KAFgB,CAAnB;AAGD;AACF;;AAEO,MAAJ0O,IAAI,GAAG;AACT,WAAO,CAAC,KAAKiB,MAAL,CAAY3D,OAAb,IAAwBtN,MAAM,CAACoL,MAAP,CAAc,KAAK8L,OAAnB,EAA4BjK,KAA5B,CAAkC4K,MAAM,IAAI;AACzE,aAAOA,MAAM,CAAC7H,IAAP,IAAe,CAAC6H,MAAM,CAACpG,SAAvB,IAAoC,CAACoG,MAAM,CAAClH,QAAnD;AACD,KAF8B,CAA/B;AAGD;;AAEO,MAAJ/B,IAAI,GAAG;AACT,WAAO,KAAK6I,KAAZ;AACD;;AAEO,MAAJ7I,IAAI,CAACA,IAAD,EAAO;AACb,SAAK6I,KAAL,GAAa7I,IAAb;AACD;;AAED5B,EAAAA,GAAG,GAAG;AACJ,UAAM5B,MAAM,GAAG,EAAf;AACA,SAAKrN,IAAL,CAAU,CAAC8Z,MAAD,EAAStX,GAAT,KAAiB6K,MAAM,CAAC7K,GAAD,CAAN,GAAcsX,MAAM,CAAC7K,GAAP,EAAzC;AACA,WAAO5B,MAAP;AACD;;AAEDyI,EAAAA,GAAG,CAACzI,MAAD,EAAS;AACV,SAAK,MAAM7K,GAAX,IAAkB6K,MAAlB,EAA0B;AACxB,YAAMvK,KAAK,GAAGuK,MAAM,CAAC7K,GAAD,CAApB;;AAEA,UAAI,CAAC9C,EAAE,CAACsE,GAAH,CAAOlB,KAAP,CAAL,EAAoB;AAClB,aAAKqW,OAAL,CAAa3W,GAAb,EAAkBsT,GAAlB,CAAsBhT,KAAtB;AACD;AACF;AACF;;AAED4C,EAAAA,MAAM,CAACnC,KAAD,EAAQ;AACZ,QAAIA,KAAJ,EAAW;AACT,WAAKsE,KAAL,CAAWS,IAAX,CAAgBiQ,YAAY,CAAChV,KAAD,CAA5B;AACD;;AAED,WAAO,IAAP;AACD;;AAEDwE,EAAAA,KAAK,CAACxE,KAAD,EAAQ;AACX,QAAI;AACFsE,MAAAA;AADE,QAEA,IAFJ;;AAIA,QAAItE,KAAJ,EAAW;AACTsE,MAAAA,KAAK,GAAGlI,OAAO,CAAC4D,KAAD,CAAP,CAAeiD,GAAf,CAAmB+R,YAAnB,CAAR;AACD,KAFD,MAEO;AACL,WAAK1Q,KAAL,GAAa,EAAb;AACD;;AAED,QAAI,KAAKuR,MAAT,EAAiB;AACf,aAAO,KAAKA,MAAL,CAAY,IAAZ,EAAkBvR,KAAlB,CAAP;AACD;;AAEDkS,IAAAA,WAAW,CAAC,IAAD,EAAOlS,KAAP,CAAX;AACA,WAAOmS,gBAAgB,CAAC,IAAD,EAAOnS,KAAP,CAAvB;AACD;;AAED6I,EAAAA,IAAI,CAACwH,GAAD,EAAMrU,IAAN,EAAY;AACd,QAAIqU,GAAG,KAAK,CAAC,CAACA,GAAd,EAAmB;AACjBrU,MAAAA,IAAI,GAAGqU,GAAP;AACD;;AAED,QAAIrU,IAAJ,EAAU;AACR,YAAMsV,OAAO,GAAG,KAAKA,OAArB;AACAnZ,MAAAA,IAAI,CAACL,OAAO,CAACkE,IAAD,CAAR,EAAgBrB,GAAG,IAAI2W,OAAO,CAAC3W,GAAD,CAAP,CAAakO,IAAb,CAAkB,CAAC,CAACwH,GAApB,CAAvB,CAAJ;AACD,KAHD,MAGO;AACL1H,MAAAA,SAAS,CAAC,KAAK0C,MAAN,EAAc,KAAKoG,YAAnB,CAAT;AACA,WAAKtZ,IAAL,CAAU8Z,MAAM,IAAIA,MAAM,CAACpJ,IAAP,CAAY,CAAC,CAACwH,GAAd,CAApB;AACD;;AAED,WAAO,IAAP;AACD;;AAED1T,EAAAA,KAAK,CAACX,IAAD,EAAO;AACV,QAAInE,EAAE,CAACsE,GAAH,CAAOH,IAAP,CAAJ,EAAkB;AAChB,WAAKkE,KAAL,CAAW;AACTvD,QAAAA,KAAK,EAAE;AADE,OAAX;AAGD,KAJD,MAIO;AACL,YAAM2U,OAAO,GAAG,KAAKA,OAArB;AACAnZ,MAAAA,IAAI,CAACL,OAAO,CAACkE,IAAD,CAAR,EAAgBrB,GAAG,IAAI2W,OAAO,CAAC3W,GAAD,CAAP,CAAagC,KAAb,EAAvB,CAAJ;AACD;;AAED,WAAO,IAAP;AACD;;AAEDyJ,EAAAA,MAAM,CAACpK,IAAD,EAAO;AACX,QAAInE,EAAE,CAACsE,GAAH,CAAOH,IAAP,CAAJ,EAAkB;AAChB,WAAKkE,KAAL,CAAW;AACTvD,QAAAA,KAAK,EAAE;AADE,OAAX;AAGD,KAJD,MAIO;AACL,YAAM2U,OAAO,GAAG,KAAKA,OAArB;AACAnZ,MAAAA,IAAI,CAACL,OAAO,CAACkE,IAAD,CAAR,EAAgBrB,GAAG,IAAI2W,OAAO,CAAC3W,GAAD,CAAP,CAAayL,MAAb,EAAvB,CAAJ;AACD;;AAED,WAAO,IAAP;AACD;;AAEDjO,EAAAA,IAAI,CAACia,QAAD,EAAW;AACbxa,IAAAA,QAAQ,CAAC,KAAK0Z,OAAN,EAAec,QAAf,CAAR;AACD;;AAEDJ,EAAAA,QAAQ,GAAG;AACT,UAAM;AACJ/U,MAAAA,OADI;AAEJC,MAAAA,QAFI;AAGJG,MAAAA;AAHI,QAIF,KAAKyU,OAJT;AAKA,UAAM7G,MAAM,GAAG,KAAKyG,OAAL,CAAad,IAAb,GAAoB,CAAnC;AACA,UAAMrL,OAAO,GAAG,KAAKoM,QAAL,CAAcf,IAAd,GAAqB,CAArC;;AAEA,QAAI3F,MAAM,IAAI,CAAC,KAAK2G,QAAhB,IAA4BrM,OAAO,IAAI,CAAC,KAAKqM,QAAjD,EAA2D;AACzD,WAAKA,QAAL,GAAgB,IAAhB;AACAvZ,MAAAA,KAAK,CAAC4E,OAAD,EAAU,SAAuB;AAAA,YAAtB,CAACA,OAAD,EAAUgK,MAAV,CAAsB;AACpCA,QAAAA,MAAM,CAAChM,KAAP,GAAe,KAAKmM,GAAL,EAAf;AACAnK,QAAAA,OAAO,CAACgK,MAAD,EAAS,IAAT,EAAe,KAAK4K,KAApB,CAAP;AACD,OAHI,CAAL;AAID;;AAED,UAAMzH,IAAI,GAAG,CAACa,MAAD,IAAW,KAAK2G,QAA7B;AACA,UAAMpM,MAAM,GAAGD,OAAO,IAAI6E,IAAI,IAAI/M,MAAM,CAACuT,IAA1B,GAAiC,KAAKxJ,GAAL,EAAjC,GAA8C,IAA7D;;AAEA,QAAI7B,OAAO,IAAIrI,QAAQ,CAAC0T,IAAxB,EAA8B;AAC5BvY,MAAAA,KAAK,CAAC6E,QAAD,EAAW,SAAwB;AAAA,YAAvB,CAACA,QAAD,EAAW+J,MAAX,CAAuB;AACtCA,QAAAA,MAAM,CAAChM,KAAP,GAAeuK,MAAf;AACAtI,QAAAA,QAAQ,CAAC+J,MAAD,EAAS,IAAT,EAAe,KAAK4K,KAApB,CAAR;AACD,OAHI,CAAL;AAID;;AAED,QAAIzH,IAAJ,EAAU;AACR,WAAKwH,QAAL,GAAgB,KAAhB;AACAvZ,MAAAA,KAAK,CAACgF,MAAD,EAAS,SAAsB;AAAA,YAArB,CAACA,MAAD,EAAS4J,MAAT,CAAqB;AAClCA,QAAAA,MAAM,CAAChM,KAAP,GAAeuK,MAAf;AACAnI,QAAAA,MAAM,CAAC4J,MAAD,EAAS,IAAT,EAAe,KAAK4K,KAApB,CAAN;AACD,OAHI,CAAL;AAID;AACF;;AAEDrD,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,QAAIA,KAAK,CAACpE,IAAN,IAAc,QAAlB,EAA4B;AAC1B,WAAKsH,QAAL,CAAcpS,GAAd,CAAkBkP,KAAK,CAACnE,MAAxB;;AAEA,UAAI,CAACmE,KAAK,CAACrE,IAAX,EAAiB;AACf,aAAKsH,OAAL,CAAanS,GAAb,CAAiBkP,KAAK,CAACnE,MAAvB;AACD;AACF,KAND,MAMO,IAAImE,KAAK,CAACpE,IAAN,IAAc,MAAlB,EAA0B;AAC/B,WAAKqH,OAAL,CAAatS,MAAb,CAAoBqP,KAAK,CAACnE,MAA1B;AACD,KAFM,MAEA;;AAEPlS,IAAAA,GAAG,CAACia,OAAJ,CAAY,KAAKL,QAAjB;AACD;;AA5Lc;;AA+LjB,SAASG,gBAAT,CAA0BjT,IAA1B,EAAgCc,KAAhC,EAAuC;AACrC,SAAOI,OAAO,CAACM,GAAR,CAAYV,KAAK,CAACrB,GAAN,CAAUjD,KAAK,IAAI4W,WAAW,CAACpT,IAAD,EAAOxD,KAAP,CAA9B,CAAZ,EAA0D8E,IAA1D,CAA+DuG,OAAO,IAAID,iBAAiB,CAAC5H,IAAD,EAAO6H,OAAP,CAA3F,CAAP;AACD;;AACD,eAAeuL,WAAf,CAA2BpT,IAA3B,EAAiCxD,KAAjC,EAAwCmT,MAAxC,EAAgD;AAC9C,QAAM;AACJ7S,IAAAA,IADI;AAEJO,IAAAA,EAFI;AAGJD,IAAAA,IAHI;AAIJG,IAAAA,IAJI;AAKJY,IAAAA,MALI;AAMJC,IAAAA;AANI,MAOF5B,KAPJ;AAQA,QAAMQ,QAAQ,GAAGrE,EAAE,CAAC2D,GAAH,CAAOE,KAAK,CAACC,OAAb,KAAyBD,KAAK,CAACC,OAAhD;;AAEA,MAAIc,IAAJ,EAAU;AACRf,IAAAA,KAAK,CAACe,IAAN,GAAa,KAAb;AACD;;AAED,MAAIF,EAAE,KAAK,KAAX,EAAkBb,KAAK,CAACa,EAAN,GAAW,IAAX;AAClB,MAAID,IAAI,KAAK,KAAb,EAAoBZ,KAAK,CAACY,IAAN,GAAa,IAAb;AACpB,QAAMoL,OAAO,GAAG7P,EAAE,CAAC6G,GAAH,CAAOnC,EAAP,KAAc1E,EAAE,CAACsD,GAAH,CAAOoB,EAAP,CAAd,GAA2BA,EAA3B,GAAgCX,SAAhD;;AAEA,MAAI8L,OAAJ,EAAa;AACXhM,IAAAA,KAAK,CAACa,EAAN,GAAWX,SAAX;AACAF,IAAAA,KAAK,CAAC2B,MAAN,GAAezB,SAAf;;AAEA,QAAIM,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACmB,MAAT,GAAkBzB,SAAlB;AACD;AACF,GAPD,MAOO;AACHzD,IAAAA,IAAI,CAACgZ,cAAD,EAAiBxW,GAAG,IAAI;AAC1B,YAAM4X,OAAO,GAAG7W,KAAK,CAACf,GAAD,CAArB;;AAEA,UAAI9C,EAAE,CAACsD,GAAH,CAAOoX,OAAP,CAAJ,EAAqB;AACnB,cAAMvS,KAAK,GAAGd,IAAI,CAAC,SAAD,CAAJ,CAAgBvE,GAAhB,CAAd;;AAEAe,QAAAA,KAAK,CAACf,GAAD,CAAL,GAAa,SAGP;AAAA,cAHQ;AACZ6M,YAAAA,QADY;AAEZN,YAAAA;AAFY,WAGR;AACJ,gBAAMD,MAAM,GAAGjH,KAAK,CAACoH,GAAN,CAAUmL,OAAV,CAAf;;AAEA,cAAItL,MAAJ,EAAY;AACV,gBAAI,CAACO,QAAL,EAAeP,MAAM,CAACO,QAAP,GAAkB,KAAlB;AACf,gBAAIN,SAAJ,EAAeD,MAAM,CAACC,SAAP,GAAmB,IAAnB;AAChB,WAHD,MAGO;AACLlH,YAAAA,KAAK,CAACiO,GAAN,CAAUsE,OAAV,EAAmB;AACjBtX,cAAAA,KAAK,EAAE,IADU;AAEjBuM,cAAAA,QAAQ,EAAEA,QAAQ,IAAI,KAFL;AAGjBN,cAAAA,SAAS,EAAEA,SAAS,IAAI;AAHP,aAAnB;AAKD;AACF,SAhBD;;AAkBA,YAAIhL,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACvB,GAAD,CAAR,GAAgBe,KAAK,CAACf,GAAD,CAArB;AACD;AACF;AACF,KA5BG,CAAJ;AA6BD;;AAEH,QAAMkL,KAAK,GAAG3G,IAAI,CAAC,QAAD,CAAlB;;AAEA,MAAIxD,KAAK,CAACiB,KAAN,KAAgB,CAACkJ,KAAK,CAACK,MAA3B,EAAmC;AACjCL,IAAAA,KAAK,CAACK,MAAN,GAAexK,KAAK,CAACiB,KAArB;AACAhE,IAAAA,UAAU,CAAC+C,KAAK,CAACiB,KAAN,GAAckJ,KAAK,CAACc,UAApB,GAAiCd,KAAK,CAACM,WAAxC,CAAV;AACD,GAHD,MAGO,IAAIN,KAAK,CAACK,MAAV,EAAkB;AACrBxK,IAAAA,KAAK,CAACiB,KAAN,GAAc,IAAd;AACD;;AAEH,QAAM6V,QAAQ,GAAG,CAACxW,IAAI,IAAI5B,MAAM,CAAC4B,IAAP,CAAYkD,IAAI,CAACoS,OAAjB,CAAT,EAAoC3S,GAApC,CAAwChE,GAAG,IAAIuE,IAAI,CAACoS,OAAL,CAAa3W,GAAb,EAAkBuF,KAAlB,CAAwBxE,KAAxB,CAA/C,CAAjB;AACA,QAAMkB,MAAM,GAAGlB,KAAK,CAACkB,MAAN,KAAiB,IAAjB,IAAyBnB,cAAc,CAACC,KAAD,EAAQ,QAAR,CAAd,KAAoC,IAA5E;;AAEA,MAAIgM,OAAO,IAAI9K,MAAM,IAAIiJ,KAAK,CAACiC,OAA/B,EAAwC;AACtC0K,IAAAA,QAAQ,CAAC/R,IAAT,CAAckF,aAAa,CAAC,EAAEzG,IAAI,CAAC,cAAD,CAAP,EAAyB;AAClDxD,MAAAA,KADkD;AAElDmK,MAAAA,KAFkD;AAGlDC,MAAAA,OAAO,EAAE;AACPnJ,QAAAA,KAAK,EAAE3D,IADA;AAEPoN,QAAAA,MAAM,EAAEpN,IAFD;;AAIPkH,QAAAA,KAAK,CAACxE,KAAD,EAAQ2E,OAAR,EAAiB;AACpB,cAAIzD,MAAJ,EAAY;AACV+L,YAAAA,SAAS,CAAC9C,KAAD,EAAQ3G,IAAI,CAAC,cAAD,CAAZ,CAAT;AACAmB,YAAAA,OAAO,CAAC8G,kBAAkB,CAACjI,IAAD,CAAnB,CAAP;AACD,WAHD,MAGO;AACLxD,YAAAA,KAAK,CAAC2B,MAAN,GAAeA,MAAf;AACAgD,YAAAA,OAAO,CAACoH,QAAQ,CAACC,OAAD,EAAUhM,KAAV,EAAiBmK,KAAjB,EAAwB3G,IAAxB,CAAT,CAAP;AACD;AACF;;AAZM;AAHyC,KAAzB,CAA3B;AAmBD;;AAED,MAAI2G,KAAK,CAACK,MAAV,EAAkB;AAChB,UAAM,IAAI9F,OAAJ,CAAYgG,MAAM,IAAI;AAC1BP,MAAAA,KAAK,CAACM,WAAN,CAAkB5G,GAAlB,CAAsB6G,MAAtB;AACD,KAFK,CAAN;AAGD;;AAED,QAAMa,MAAM,GAAGH,iBAAiB,CAAC5H,IAAD,EAAO,MAAMkB,OAAO,CAACM,GAAR,CAAY8R,QAAZ,CAAb,CAAhC;;AAEA,MAAI/V,IAAI,IAAIwK,MAAM,CAACO,QAAf,IAA2B,EAAEqH,MAAM,IAAI5H,MAAM,CAACjO,IAAnB,CAA/B,EAAyD;AACvD,UAAMqW,SAAS,GAAGC,gBAAgB,CAAC5T,KAAD,EAAQe,IAAR,EAAcF,EAAd,CAAlC;;AAEA,QAAI8S,SAAJ,EAAe;AACb6C,MAAAA,WAAW,CAAChT,IAAD,EAAO,CAACmQ,SAAD,CAAP,CAAX;AACA,aAAOiD,WAAW,CAACpT,IAAD,EAAOmQ,SAAP,EAAkB,IAAlB,CAAlB;AACD;AACF;;AAED,MAAI/R,SAAJ,EAAe;AACblF,IAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAMzL,SAAS,CAAC2J,MAAD,EAAS/H,IAAT,EAAeA,IAAI,CAAC8J,IAApB,CAAlC;AACD;;AAED,SAAO/B,MAAP;AACD;;AACD,SAASwL,UAAT,CAAoBvT,IAApB,EAA0BxD,KAA1B,EAAiC;AAC/B,QAAM4V,OAAO,GAAGnX,QAAQ,CAAC,EAAD,EAAK+E,IAAI,CAACoS,OAAV,CAAxB;;AAEA,MAAI5V,KAAJ,EAAW;AACTvD,IAAAA,IAAI,CAACL,OAAO,CAAC4D,KAAD,CAAR,EAAiBA,KAAK,IAAI;AAC5B,UAAI7D,EAAE,CAACsE,GAAH,CAAOT,KAAK,CAACM,IAAb,CAAJ,EAAwB;AACtBN,QAAAA,KAAK,GAAGgV,YAAY,CAAChV,KAAD,CAApB;AACD;;AAED,UAAI,CAAC7D,EAAE,CAAC2D,GAAH,CAAOE,KAAK,CAACa,EAAb,CAAL,EAAuB;AACrBb,QAAAA,KAAK,GAAGvB,QAAQ,CAAC,EAAD,EAAKuB,KAAL,EAAY;AAC1Ba,UAAAA,EAAE,EAAEX;AADsB,SAAZ,CAAhB;AAGD;;AAED8W,MAAAA,cAAc,CAACpB,OAAD,EAAU5V,KAAV,EAAiBf,GAAG,IAAI;AACpC,eAAOgY,YAAY,CAAChY,GAAD,CAAnB;AACD,OAFa,CAAd;AAGD,KAdG,CAAJ;AAeD;;AAEDiY,EAAAA,UAAU,CAAC1T,IAAD,EAAOoS,OAAP,CAAV;AACA,SAAOA,OAAP;AACD;;AACD,SAASsB,UAAT,CAAoB1T,IAApB,EAA0BoS,OAA1B,EAAmC;AACjC1Z,EAAAA,QAAQ,CAAC0Z,OAAD,EAAU,CAACW,MAAD,EAAStX,GAAT,KAAiB;AACjC,QAAI,CAACuE,IAAI,CAACoS,OAAL,CAAa3W,GAAb,CAAL,EAAwB;AACtBuE,MAAAA,IAAI,CAACoS,OAAL,CAAa3W,GAAb,IAAoBsX,MAApB;AACAnZ,MAAAA,gBAAgB,CAACmZ,MAAD,EAAS/S,IAAT,CAAhB;AACD;AACF,GALO,CAAR;AAMD;;AAED,SAASyT,YAAT,CAAsBhY,GAAtB,EAA2BkY,QAA3B,EAAqC;AACnC,QAAMZ,MAAM,GAAG,IAAI9G,WAAJ,EAAf;AACA8G,EAAAA,MAAM,CAACtX,GAAP,GAAaA,GAAb;;AAEA,MAAIkY,QAAJ,EAAc;AACZ/Z,IAAAA,gBAAgB,CAACmZ,MAAD,EAASY,QAAT,CAAhB;AACD;;AAED,SAAOZ,MAAP;AACD;;AAED,SAASS,cAAT,CAAwBpB,OAAxB,EAAiC5V,KAAjC,EAAwC6U,MAAxC,EAAgD;AAC9C,MAAI7U,KAAK,CAACM,IAAV,EAAgB;AACd7D,IAAAA,IAAI,CAACuD,KAAK,CAACM,IAAP,EAAarB,GAAG,IAAI;AACtB,YAAMsX,MAAM,GAAGX,OAAO,CAAC3W,GAAD,CAAP,KAAiB2W,OAAO,CAAC3W,GAAD,CAAP,GAAe4V,MAAM,CAAC5V,GAAD,CAAtC,CAAf;AACAsX,MAAAA,MAAM,CAAC,cAAD,CAAN,CAAuBvW,KAAvB;AACD,KAHG,CAAJ;AAID;AACF;;AAED,SAASwW,WAAT,CAAqBhT,IAArB,EAA2Bc,KAA3B,EAAkC;AAChC7H,EAAAA,IAAI,CAAC6H,KAAD,EAAQtE,KAAK,IAAI;AACnBgX,IAAAA,cAAc,CAACxT,IAAI,CAACoS,OAAN,EAAe5V,KAAf,EAAsBf,GAAG,IAAI;AACzC,aAAOgY,YAAY,CAAChY,GAAD,EAAMuE,IAAN,CAAnB;AACD,KAFa,CAAd;AAGD,GAJG,CAAJ;AAKD;;AAED,SAAS4T,6BAAT,CAAuCpY,MAAvC,EAA+CqY,QAA/C,EAAyD;AACvD,MAAIrY,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAIJ,MAAM,GAAG,EAAb;AACA,MAAI0Y,UAAU,GAAG5Y,MAAM,CAAC4B,IAAP,CAAYtB,MAAZ,CAAjB;AACA,MAAIC,GAAJ,EAASJ,CAAT;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyY,UAAU,CAACvY,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACtCI,IAAAA,GAAG,GAAGqY,UAAU,CAACzY,CAAD,CAAhB;AACA,QAAIwY,QAAQ,CAACE,OAAT,CAAiBtY,GAAjB,KAAyB,CAA7B,EAAgC;AAChCL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AACD;;AAED,SAAOL,MAAP;AACD;;AAED,MAAM4Y,WAAW,GAAG,CAAC,UAAD,CAApB;;AACA,MAAMC,aAAa,GAAGvE,IAAI,IAAI;AAC5B,MAAI;AACF7Q,IAAAA;AADE,MAEA6Q,IAFJ;AAAA,MAGIlT,KAAK,GAAGoX,6BAA6B,CAAClE,IAAD,EAAOsE,WAAP,CAHzC;;AAKA,QAAME,SAAS,GAAG3Z,UAAU,CAAC4Z,GAAD,CAA5B;AACA,QAAM1W,KAAK,GAAGjB,KAAK,CAACiB,KAAN,IAAe,CAAC,CAACyW,SAAS,CAACzW,KAAzC;AAAA,QACMG,SAAS,GAAGpB,KAAK,CAACoB,SAAN,IAAmB,CAAC,CAACsW,SAAS,CAACtW,SADjD;AAEApB,EAAAA,KAAK,GAAGzC,UAAU,CAAC,OAAO;AACxB0D,IAAAA,KADwB;AAExBG,IAAAA;AAFwB,GAAP,CAAD,EAGd,CAACH,KAAD,EAAQG,SAAR,CAHc,CAAlB;AAIA,QAAM;AACJwW,IAAAA;AADI,MAEFD,GAFJ;AAGA,SAAO7Z,KAAK,CAAC+Z,aAAN,CAAoBD,QAApB,EAA8B;AACnCrY,IAAAA,KAAK,EAAES;AAD4B,GAA9B,EAEJqC,QAFI,CAAP;AAGD,CAnBD;;AAoBA,MAAMsV,GAAG,GAAGG,WAAW,CAACL,aAAD,EAAgB,EAAhB,CAAvB;AACAA,aAAa,CAACG,QAAd,GAAyBD,GAAG,CAACC,QAA7B;AACAH,aAAa,CAACM,QAAd,GAAyBJ,GAAG,CAACI,QAA7B;;AAEA,SAASD,WAAT,CAAqBlZ,MAArB,EAA6BoZ,IAA7B,EAAmC;AACjCtZ,EAAAA,MAAM,CAACC,MAAP,CAAcC,MAAd,EAAsBd,KAAK,CAACma,aAAN,CAAoBD,IAApB,CAAtB;AACApZ,EAAAA,MAAM,CAACgZ,QAAP,CAAgBM,QAAhB,GAA2BtZ,MAA3B;AACAA,EAAAA,MAAM,CAACmZ,QAAP,CAAgBG,QAAhB,GAA2BtZ,MAA3B;AACA,SAAOA,MAAP;AACD;;AAED,MAAMuZ,SAAS,GAAG,MAAM;AACtB,QAAM/T,OAAO,GAAG,EAAhB;;AAEA,QAAM+T,SAAS,GAAG,SAASA,SAAT,CAAmBnY,KAAnB,EAA0B;AAC1CxC,IAAAA,mBAAmB;AACnB,UAAM6N,OAAO,GAAG,EAAhB;AACA5O,IAAAA,IAAI,CAAC2H,OAAD,EAAU,CAACZ,IAAD,EAAO3E,CAAP,KAAa;AACzB,UAAI1C,EAAE,CAACsE,GAAH,CAAOT,KAAP,CAAJ,EAAmB;AACjBqL,QAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,EAAb;AACD,OAFD,MAEO;AACL,cAAMrC,MAAM,GAAGiW,SAAS,CAACpY,KAAD,EAAQwD,IAAR,EAAc3E,CAAd,CAAxB;;AAEA,YAAIsD,MAAJ,EAAY;AACVkJ,UAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,CAAWrC,MAAX,CAAb;AACD;AACF;AACF,KAVG,CAAJ;AAWA,WAAOkJ,OAAP;AACD,GAfD;;AAiBA8M,EAAAA,SAAS,CAAC/T,OAAV,GAAoBA,OAApB;;AAEA+T,EAAAA,SAAS,CAACtU,GAAV,GAAgB,UAAUL,IAAV,EAAgB;AAC9B,QAAI,CAACY,OAAO,CAACzE,QAAR,CAAiB6D,IAAjB,CAAL,EAA6B;AAC3BY,MAAAA,OAAO,CAACW,IAAR,CAAavB,IAAb;AACD;AACF,GAJD;;AAMA2U,EAAAA,SAAS,CAACzU,MAAV,GAAmB,UAAUF,IAAV,EAAgB;AACjC,UAAM3E,CAAC,GAAGuF,OAAO,CAACmT,OAAR,CAAgB/T,IAAhB,CAAV;AACA,QAAI,CAAC3E,CAAL,EAAQuF,OAAO,CAACiU,MAAR,CAAexZ,CAAf,EAAkB,CAAlB;AACT,GAHD;;AAKAsZ,EAAAA,SAAS,CAAClX,KAAV,GAAkB,YAAY;AAC5BxE,IAAAA,IAAI,CAAC2H,OAAD,EAAUZ,IAAI,IAAIA,IAAI,CAACvC,KAAL,CAAW,GAAGnC,SAAd,CAAlB,CAAJ;AACA,WAAO,IAAP;AACD,GAHD;;AAKAqZ,EAAAA,SAAS,CAACzN,MAAV,GAAmB,YAAY;AAC7BjO,IAAAA,IAAI,CAAC2H,OAAD,EAAUZ,IAAI,IAAIA,IAAI,CAACkH,MAAL,CAAY,GAAG5L,SAAf,CAAlB,CAAJ;AACA,WAAO,IAAP;AACD,GAHD;;AAKAqZ,EAAAA,SAAS,CAAC5F,GAAV,GAAgB,UAAUzI,MAAV,EAAkB;AAChCrN,IAAAA,IAAI,CAAC2H,OAAD,EAAUZ,IAAI,IAAIA,IAAI,CAAC+O,GAAL,CAASzI,MAAT,CAAlB,CAAJ;AACD,GAFD;;AAIAqO,EAAAA,SAAS,CAAC3T,KAAV,GAAkB,UAAUxE,KAAV,EAAiB;AACjC,UAAMqL,OAAO,GAAG,EAAhB;AACA5O,IAAAA,IAAI,CAAC2H,OAAD,EAAU,CAACZ,IAAD,EAAO3E,CAAP,KAAa;AACzB,UAAI1C,EAAE,CAACsE,GAAH,CAAOT,KAAP,CAAJ,EAAmB;AACjBqL,QAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,EAAb;AACD,OAFD,MAEO;AACL,cAAMrC,MAAM,GAAG,KAAKiW,SAAL,CAAepY,KAAf,EAAsBwD,IAAtB,EAA4B3E,CAA5B,CAAf;;AAEA,YAAIsD,MAAJ,EAAY;AACVkJ,UAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,CAAWrC,MAAX,CAAb;AACD;AACF;AACF,KAVG,CAAJ;AAWA,WAAOkJ,OAAP;AACD,GAdD;;AAgBA8M,EAAAA,SAAS,CAAChL,IAAV,GAAiB,YAAY;AAC3B1Q,IAAAA,IAAI,CAAC2H,OAAD,EAAUZ,IAAI,IAAIA,IAAI,CAAC2J,IAAL,CAAU,GAAGrO,SAAb,CAAlB,CAAJ;AACA,WAAO,IAAP;AACD,GAHD;;AAKAqZ,EAAAA,SAAS,CAAChW,MAAV,GAAmB,UAAUnC,KAAV,EAAiB;AAClCvD,IAAAA,IAAI,CAAC2H,OAAD,EAAU,CAACZ,IAAD,EAAO3E,CAAP,KAAa2E,IAAI,CAACrB,MAAL,CAAY,KAAKiW,SAAL,CAAepY,KAAf,EAAsBwD,IAAtB,EAA4B3E,CAA5B,CAAZ,CAAvB,CAAJ;AACA,WAAO,IAAP;AACD,GAHD;;AAKA,QAAMuZ,SAAS,GAAG,SAASA,SAAT,CAAmBzD,GAAnB,EAAwBnR,IAAxB,EAA8B8U,KAA9B,EAAqC;AACrD,WAAOnc,EAAE,CAACsD,GAAH,CAAOkV,GAAP,IAAcA,GAAG,CAAC2D,KAAD,EAAQ9U,IAAR,CAAjB,GAAiCmR,GAAxC;AACD,GAFD;;AAIAwD,EAAAA,SAAS,CAACC,SAAV,GAAsBA,SAAtB;AACA,SAAOD,SAAP;AACD,CA/ED;;AAiFA,SAASI,UAAT,CAAoBxZ,MAApB,EAA4BiB,KAA5B,EAAmCwY,IAAnC,EAAyC;AACvC,QAAMC,OAAO,GAAGtc,EAAE,CAACsD,GAAH,CAAOO,KAAP,KAAiBA,KAAjC;AACA,MAAIyY,OAAO,IAAI,CAACD,IAAhB,EAAsBA,IAAI,GAAG,EAAP;AACtB,QAAM1X,GAAG,GAAG9C,OAAO,CAAC,MAAMya,OAAO,IAAI3Z,SAAS,CAACC,MAAV,IAAoB,CAA/B,GAAmCoZ,SAAS,EAA5C,GAAiD,KAAK,CAA7D,EAAgE,EAAhE,CAAnB;AACA,QAAMO,QAAQ,GAAGza,MAAM,CAAC,CAAD,CAAvB;AACA,QAAM0a,WAAW,GAAGlb,cAAc,EAAlC;AACA,QAAM0M,KAAK,GAAGnM,OAAO,CAAC,OAAO;AAC3B4a,IAAAA,KAAK,EAAE,EADoB;AAE3BtU,IAAAA,KAAK,EAAE,EAFoB;;AAI3B3H,IAAAA,KAAK,CAAC6G,IAAD,EAAOqV,OAAP,EAAgB;AACnB,YAAMjD,OAAO,GAAGmB,UAAU,CAACvT,IAAD,EAAOqV,OAAP,CAA1B;AACA,YAAMC,YAAY,GAAGJ,QAAQ,CAACtU,OAAT,GAAmB,CAAnB,IAAwB,CAAC+F,KAAK,CAAC7F,KAAN,CAAYvF,MAArC,IAA+C,CAACL,MAAM,CAAC4B,IAAP,CAAYsV,OAAZ,EAAqBtK,IAArB,CAA0BrM,GAAG,IAAI,CAACuE,IAAI,CAACoS,OAAL,CAAa3W,GAAb,CAAlC,CAArE;AACA,aAAO6Z,YAAY,GAAGrC,gBAAgB,CAACjT,IAAD,EAAOqV,OAAP,CAAnB,GAAqC,IAAInU,OAAJ,CAAYC,OAAO,IAAI;AAC7EuS,QAAAA,UAAU,CAAC1T,IAAD,EAAOoS,OAAP,CAAV;AACAzL,QAAAA,KAAK,CAAC7F,KAAN,CAAYS,IAAZ,CAAiB,MAAM;AACrBJ,UAAAA,OAAO,CAAC8R,gBAAgB,CAACjT,IAAD,EAAOqV,OAAP,CAAjB,CAAP;AACD,SAFD;AAGAF,QAAAA,WAAW;AACZ,OANuD,CAAxD;AAOD;;AAd0B,GAAP,CAAD,EAgBjB,EAhBiB,CAArB;AAiBA,QAAMC,KAAK,GAAG3a,MAAM,CAAC,CAAC,GAAGkM,KAAK,CAACyO,KAAV,CAAD,CAApB;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAME,UAAU,GAAGrb,OAAO,CAACqB,MAAD,CAAP,IAAmB,CAAtC;AACAf,EAAAA,OAAO,CAAC,MAAM;AACZvB,IAAAA,IAAI,CAACmc,KAAK,CAACxU,OAAN,CAAc4U,KAAd,CAAoBja,MAApB,EAA4Bga,UAA5B,CAAD,EAA0CvV,IAAI,IAAI;AACpDD,MAAAA,UAAU,CAACC,IAAD,EAAO1C,GAAP,CAAV;AACA0C,MAAAA,IAAI,CAAC2J,IAAL,CAAU,IAAV;AACD,KAHG,CAAJ;AAIAyL,IAAAA,KAAK,CAACxU,OAAN,CAAcrF,MAAd,GAAuBA,MAAvB;AACAka,IAAAA,cAAc,CAACF,UAAD,EAAaha,MAAb,CAAd;AACD,GAPM,EAOJ,CAACA,MAAD,CAPI,CAAP;AAQAf,EAAAA,OAAO,CAAC,MAAM;AACZib,IAAAA,cAAc,CAAC,CAAD,EAAIrT,IAAI,CAACuL,GAAL,CAAS4H,UAAT,EAAqBha,MAArB,CAAJ,CAAd;AACD,GAFM,EAEJyZ,IAFI,CAAP;;AAIA,WAASS,cAAT,CAAwBC,UAAxB,EAAoCC,QAApC,EAA8C;AAC5C,SAAK,IAAIta,CAAC,GAAGqa,UAAb,EAAyBra,CAAC,GAAGsa,QAA7B,EAAuCta,CAAC,EAAxC,EAA4C;AAC1C,YAAM2E,IAAI,GAAGoV,KAAK,CAACxU,OAAN,CAAcvF,CAAd,MAAqB+Z,KAAK,CAACxU,OAAN,CAAcvF,CAAd,IAAmB,IAAI8W,UAAJ,CAAe,IAAf,EAAqBxL,KAAK,CAACxN,KAA3B,CAAxC,CAAb;AACA,YAAMwF,MAAM,GAAGsW,OAAO,GAAGA,OAAO,CAAC5Z,CAAD,EAAI2E,IAAJ,CAAV,GAAsBxD,KAAK,CAACnB,CAAD,CAAjD;;AAEA,UAAIsD,MAAJ,EAAY;AACV0W,QAAAA,OAAO,CAACha,CAAD,CAAP,GAAauW,aAAa,CAACjT,MAAD,CAA1B;AACD;AACF;AACF;;AAED,QAAMyT,OAAO,GAAGgD,KAAK,CAACxU,OAAN,CAAcnB,GAAd,CAAkB,CAACO,IAAD,EAAO3E,CAAP,KAAakY,UAAU,CAACvT,IAAD,EAAOqV,OAAO,CAACha,CAAD,CAAd,CAAzC,CAAhB;AACA,QAAMua,OAAO,GAAGrb,UAAU,CAAC0Z,aAAD,CAA1B;AACA,QAAM4B,WAAW,GAAG3b,OAAO,CAAC0b,OAAD,CAA3B;AACA,QAAME,UAAU,GAAGF,OAAO,KAAKC,WAAZ,IAA2BjW,QAAQ,CAACgW,OAAD,CAAtD;AACA5c,EAAAA,eAAe,CAAC,MAAM;AACpBkc,IAAAA,QAAQ,CAACtU,OAAT;AACA+F,IAAAA,KAAK,CAACyO,KAAN,GAAcA,KAAK,CAACxU,OAApB;AACA,UAAM;AACJE,MAAAA;AADI,QAEF6F,KAFJ;;AAIA,QAAI7F,KAAK,CAACvF,MAAV,EAAkB;AAChBoL,MAAAA,KAAK,CAAC7F,KAAN,GAAc,EAAd;AACA7H,MAAAA,IAAI,CAAC6H,KAAD,EAAQiV,EAAE,IAAIA,EAAE,EAAhB,CAAJ;AACD;;AAED9c,IAAAA,IAAI,CAACmc,KAAK,CAACxU,OAAP,EAAgB,CAACZ,IAAD,EAAO3E,CAAP,KAAa;AAC/BiC,MAAAA,GAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAAC+C,GAAJ,CAAQL,IAAR,CAAvB;;AAEA,UAAI8V,UAAJ,EAAgB;AACd9V,QAAAA,IAAI,CAACgB,KAAL,CAAW;AACTvE,UAAAA,OAAO,EAAEmZ;AADA,SAAX;AAGD;;AAED,YAAMjX,MAAM,GAAG0W,OAAO,CAACha,CAAD,CAAtB;;AAEA,UAAIsD,MAAJ,EAAY;AACVwB,QAAAA,UAAU,CAACH,IAAD,EAAOrB,MAAM,CAACrB,GAAd,CAAV;;AAEA,YAAI0C,IAAI,CAAC1C,GAAT,EAAc;AACZ0C,UAAAA,IAAI,CAACc,KAAL,CAAWS,IAAX,CAAgB5C,MAAhB;AACD,SAFD,MAEO;AACLqB,UAAAA,IAAI,CAACgB,KAAL,CAAWrC,MAAX;AACD;AACF;AACF,KApBG,CAAJ;AAqBD,GAjCc,CAAf;AAkCAxE,EAAAA,OAAO,CAAC,MAAM,MAAM;AAClBlB,IAAAA,IAAI,CAAC0N,KAAK,CAACyO,KAAP,EAAcpV,IAAI,IAAIA,IAAI,CAAC2J,IAAL,CAAU,IAAV,CAAtB,CAAJ;AACD,GAFM,CAAP;AAGA,QAAMrD,MAAM,GAAG8L,OAAO,CAAC3S,GAAR,CAAY+C,CAAC,IAAIvH,QAAQ,CAAC,EAAD,EAAKuH,CAAL,CAAzB,CAAf;AACA,SAAOlF,GAAG,GAAG,CAACgJ,MAAD,EAAShJ,GAAT,CAAH,GAAmBgJ,MAA7B;AACD;;AAED,SAAS0P,SAAT,CAAmBxZ,KAAnB,EAA0BwY,IAA1B,EAAgC;AAC9B,QAAMiB,IAAI,GAAGtd,EAAE,CAACsD,GAAH,CAAOO,KAAP,CAAb;AACA,QAAM,CAAC,CAAC8J,MAAD,CAAD,EAAWhJ,GAAX,IAAkByX,UAAU,CAAC,CAAD,EAAIkB,IAAI,GAAGzZ,KAAH,GAAW,CAACA,KAAD,CAAnB,EAA4ByZ,IAAI,GAAGjB,IAAI,IAAI,EAAX,GAAgBA,IAAhD,CAAlC;AACA,SAAOiB,IAAI,IAAI3a,SAAS,CAACC,MAAV,IAAoB,CAA5B,GAAgC,CAAC+K,MAAD,EAAShJ,GAAT,CAAhC,GAAgDgJ,MAAvD;AACD;;AAED,MAAM4P,aAAa,GAAG,MAAMvB,SAAS,EAArC;;AAEA,MAAMwB,YAAY,GAAG,MAAMzb,QAAQ,CAACwb,aAAD,CAAR,CAAwB,CAAxB,CAA3B;;AAEA,SAASE,QAAT,CAAkB7a,MAAlB,EAA0B8a,QAA1B,EAAoCrB,IAApC,EAA0C;AACxC,MAAIsB,UAAJ;;AAEA,QAAMrB,OAAO,GAAGtc,EAAE,CAACsD,GAAH,CAAOoa,QAAP,KAAoBA,QAApC;AACA,MAAIpB,OAAO,IAAI,CAACD,IAAhB,EAAsBA,IAAI,GAAG,EAAP;AACtB,MAAIrX,OAAO,GAAG,IAAd;AACA,MAAI4Y,SAAS,GAAG7Z,SAAhB;AACA,QAAMqL,MAAM,GAAGgN,UAAU,CAACxZ,MAAD,EAAS,CAACF,CAAD,EAAI2E,IAAJ,KAAa;AAC7C,UAAMxD,KAAK,GAAGyY,OAAO,GAAGA,OAAO,CAAC5Z,CAAD,EAAI2E,IAAJ,CAAV,GAAsBqW,QAA3C;AACAE,IAAAA,SAAS,GAAG/Z,KAAK,CAACc,GAAlB;AACAK,IAAAA,OAAO,GAAGA,OAAO,IAAInB,KAAK,CAACmB,OAA3B;AACA,WAAOnB,KAAP;AACD,GALwB,EAKtBwY,IAAI,IAAI,CAAC,EAAD,CALc,CAAzB;AAMA,QAAM1X,GAAG,GAAG,CAACgZ,UAAU,GAAGC,SAAd,KAA4B,IAA5B,GAAmCD,UAAnC,GAAgDvO,MAAM,CAAC,CAAD,CAAlE;AACA/O,EAAAA,eAAe,CAAC,MAAM;AACpBC,IAAAA,IAAI,CAACqE,GAAG,CAACsD,OAAL,EAAc,CAACZ,IAAD,EAAO3E,CAAP,KAAa;AAC7B,YAAM+P,MAAM,GAAG9N,GAAG,CAACsD,OAAJ,CAAYvF,CAAC,IAAIsC,OAAO,GAAG,CAAH,GAAO,CAAC,CAAnB,CAAb,CAAf;;AAEA,UAAIyN,MAAJ,EAAY;AACVpL,QAAAA,IAAI,CAACgB,KAAL,CAAW;AACT3D,UAAAA,EAAE,EAAE+N,MAAM,CAACgH;AADF,SAAX;AAGD,OAJD,MAIO;AACLpS,QAAAA,IAAI,CAACgB,KAAL;AACD;AACF,KAVG,CAAJ;AAWD,GAZc,EAYZgU,IAZY,CAAf;;AAcA,MAAIC,OAAO,IAAI3Z,SAAS,CAACC,MAAV,IAAoB,CAAnC,EAAsC;AACpC+B,IAAAA,GAAG,CAAC,WAAD,CAAH,GAAmB,CAAC+Y,QAAD,EAAWrW,IAAX,EAAiB3E,CAAjB,KAAuB;AACxC,YAAMmB,KAAK,GAAG7D,EAAE,CAACsD,GAAH,CAAOoa,QAAP,IAAmBA,QAAQ,CAAChb,CAAD,EAAI2E,IAAJ,CAA3B,GAAuCqW,QAArD;;AAEA,UAAI7Z,KAAJ,EAAW;AACT,cAAM4O,MAAM,GAAG9N,GAAG,CAACsD,OAAJ,CAAYvF,CAAC,IAAImB,KAAK,CAACmB,OAAN,GAAgB,CAAhB,GAAoB,CAAC,CAAzB,CAAb,CAAf;AACA,YAAIyN,MAAJ,EAAY5O,KAAK,CAACa,EAAN,GAAW+N,MAAM,CAACgH,OAAlB;AACZ,eAAO5V,KAAP;AACD;AACF,KARD;;AAUA,WAAOuL,MAAP;AACD;;AAEDzK,EAAAA,GAAG,CAAC,OAAD,CAAH,GAAe+Y,QAAQ,IAAI;AACzB,UAAMxO,OAAO,GAAG,EAAhB;AACA5O,IAAAA,IAAI,CAACqE,GAAG,CAACsD,OAAL,EAAc,CAACZ,IAAD,EAAO3E,CAAP,KAAa;AAC7B,YAAMmB,KAAK,GAAG7D,EAAE,CAACsD,GAAH,CAAOoa,QAAP,IAAmBA,QAAQ,CAAChb,CAAD,EAAI2E,IAAJ,CAA3B,GAAuCqW,QAArD;AACA,YAAMjL,MAAM,GAAG9N,GAAG,CAACsD,OAAJ,CAAYvF,CAAC,IAAIsC,OAAO,GAAG,CAAH,GAAO,CAAC,CAAnB,CAAb,CAAf;;AAEA,UAAIyN,MAAJ,EAAY;AACVvD,QAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,CAAW/F,QAAQ,CAAC,EAAD,EAAKuB,KAAL,EAAY;AAC1Ca,UAAAA,EAAE,EAAE+N,MAAM,CAACgH;AAD+B,SAAZ,CAAnB,CAAb;AAGD,OAJD,MAIO;AACLvK,QAAAA,OAAO,CAACtG,IAAR,CAAavB,IAAI,CAACgB,KAAL,CAAW/F,QAAQ,CAAC,EAAD,EAAKuB,KAAL,CAAnB,CAAb;AACD;AACF,KAXG,CAAJ;AAYA,WAAOqL,OAAP;AACD,GAfD;;AAiBA,SAAOE,MAAM,CAAC,CAAD,CAAb;AACD;;AAED,IAAIyO,eAAJ;;AAEA,CAAC,UAAUA,eAAV,EAA2B;AAC1BA,EAAAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;AACAA,EAAAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;AACAA,EAAAA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B;AACAA,EAAAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;AACD,CALD,EAKGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CALlB;;AAOA,SAASC,aAAT,CAAuBC,IAAvB,EAA6Bla,KAA7B,EAAoCwY,IAApC,EAA0C;AACxC,QAAMC,OAAO,GAAGtc,EAAE,CAACsD,GAAH,CAAOO,KAAP,KAAiBA,KAAjC;AACA,QAAM;AACJgB,IAAAA,KADI;AAEJe,IAAAA,IAFI;AAGJD,IAAAA,KAAK,GAAG,CAHJ;AAIJE,IAAAA,OAAO,GAAG,IAJN;AAKJmY,IAAAA,eAAe,GAAG,KALd;AAMJ7X,IAAAA,WANI;AAOJxB,IAAAA,GAAG,EAAEsZ,QAPD;AAQJzZ,IAAAA,MAAM,EAAE0Z;AARJ,MASF5B,OAAO,GAAGA,OAAO,EAAV,GAAezY,KAT1B;AAUA,QAAMc,GAAG,GAAG9C,OAAO,CAAC,MAAMya,OAAO,IAAI3Z,SAAS,CAACC,MAAV,IAAoB,CAA/B,GAAmCoZ,SAAS,EAA5C,GAAiD,KAAK,CAA7D,EAAgE,EAAhE,CAAnB;AACA,QAAMtW,KAAK,GAAGzF,OAAO,CAAC8d,IAAD,CAArB;AACA,QAAMI,WAAW,GAAG,EAApB;AACA,QAAMC,eAAe,GAAGtc,MAAM,CAAC,IAAD,CAA9B;AACA,QAAMuc,eAAe,GAAGxZ,KAAK,GAAG,IAAH,GAAUuZ,eAAe,CAACnW,OAAvD;AACA5H,EAAAA,eAAe,CAAC,MAAM;AACpB+d,IAAAA,eAAe,CAACnW,OAAhB,GAA0BkW,WAA1B;AACD,GAFc,CAAf;AAGA3c,EAAAA,OAAO,CAAC,MAAM,MAAM;AAClBlB,IAAAA,IAAI,CAAC8d,eAAe,CAACnW,OAAjB,EAA0BmJ,CAAC,IAAI;AACjC,UAAIA,CAAC,CAACkN,OAAN,EAAe;AACbC,QAAAA,YAAY,CAACnN,CAAC,CAACoN,YAAH,CAAZ;AACD;;AAEDpX,MAAAA,UAAU,CAACgK,CAAC,CAAC/J,IAAH,EAAS1C,GAAT,CAAV;AACAyM,MAAAA,CAAC,CAAC/J,IAAF,CAAO2J,IAAP,CAAY,IAAZ;AACD,KAPG,CAAJ;AAQD,GATM,CAAP;AAUA,QAAM7M,IAAI,GAAGsa,OAAO,CAAC/Y,KAAD,EAAQ4W,OAAO,GAAGA,OAAO,EAAV,GAAezY,KAA9B,EAAqCwa,eAArC,CAApB;AACA,QAAMC,OAAO,GAAGzZ,KAAK,IAAIuZ,eAAe,CAACnW,OAAzB,IAAoC,EAApD;AACA5H,EAAAA,eAAe,CAAC,MAAMC,IAAI,CAACge,OAAD,EAAU,SAI9B;AAAA,QAJ+B;AACnCjX,MAAAA,IADmC;AAEnC8J,MAAAA,IAFmC;AAGnCrO,MAAAA;AAHmC,KAI/B;AACJsE,IAAAA,UAAU,CAACC,IAAD,EAAO1C,GAAP,CAAV;AACAxB,IAAAA,QAAQ,CAACgD,WAAD,EAAcgL,IAAd,EAAoBrO,GAApB,CAAR;AACD,GAPyB,CAAX,CAAf;AAQA,QAAM4b,MAAM,GAAG,EAAf;AACA,MAAIL,eAAJ,EAAqB/d,IAAI,CAAC+d,eAAD,EAAkB,CAACjN,CAAD,EAAI1O,CAAJ,KAAU;AACnD,QAAI0O,CAAC,CAACkN,OAAN,EAAe;AACbC,MAAAA,YAAY,CAACnN,CAAC,CAACoN,YAAH,CAAZ;AACAF,MAAAA,OAAO,CAAC1V,IAAR,CAAawI,CAAb;AACD,KAHD,MAGO;AACL1O,MAAAA,CAAC,GAAGgc,MAAM,CAAChc,CAAD,CAAN,GAAYyB,IAAI,CAACiX,OAAL,CAAahK,CAAC,CAACtO,GAAf,CAAhB;AACA,UAAI,CAACJ,CAAL,EAAQyb,WAAW,CAACzb,CAAD,CAAX,GAAiB0O,CAAjB;AACT;AACF,GARwB,CAAJ;AASrB9Q,EAAAA,IAAI,CAACoF,KAAD,EAAQ,CAACyL,IAAD,EAAOzO,CAAP,KAAa;AACvB,QAAI,CAACyb,WAAW,CAACzb,CAAD,CAAhB,EAAqB;AACnByb,MAAAA,WAAW,CAACzb,CAAD,CAAX,GAAiB;AACfI,QAAAA,GAAG,EAAEqB,IAAI,CAACzB,CAAD,CADM;AAEfyO,QAAAA,IAFe;AAGfwN,QAAAA,KAAK,EAAEd,eAAe,CAACe,KAHR;AAIfvX,QAAAA,IAAI,EAAE,IAAImS,UAAJ;AAJS,OAAjB;AAMA2E,MAAAA,WAAW,CAACzb,CAAD,CAAX,CAAe2E,IAAf,CAAoB8J,IAApB,GAA2BA,IAA3B;AACD;AACF,GAVG,CAAJ;;AAYA,MAAIuN,MAAM,CAAC9b,MAAX,EAAmB;AACjB,QAAIF,CAAC,GAAG,CAAC,CAAT;AACA,UAAM;AACJuD,MAAAA;AADI,QAEFqW,OAAO,GAAGA,OAAO,EAAV,GAAezY,KAF1B;AAGAvD,IAAAA,IAAI,CAACoe,MAAD,EAAS,CAACG,QAAD,EAAWC,SAAX,KAAyB;AACpC,YAAM1N,CAAC,GAAGiN,eAAe,CAACS,SAAD,CAAzB;;AAEA,UAAI,CAACD,QAAL,EAAe;AACbnc,QAAAA,CAAC,GAAGyb,WAAW,CAAC/C,OAAZ,CAAoBhK,CAApB,CAAJ;AACA+M,QAAAA,WAAW,CAACzb,CAAD,CAAX,GAAiBJ,QAAQ,CAAC,EAAD,EAAK8O,CAAL,EAAQ;AAC/BD,UAAAA,IAAI,EAAEzL,KAAK,CAACmZ,QAAD;AADoB,SAAR,CAAzB;AAGD,OALD,MAKO,IAAI5Y,KAAJ,EAAW;AAChBkY,QAAAA,WAAW,CAACjC,MAAZ,CAAmB,EAAExZ,CAArB,EAAwB,CAAxB,EAA2B0O,CAA3B;AACD;AACF,KAXG,CAAJ;AAYD;;AAED,MAAIpR,EAAE,CAACsD,GAAH,CAAOsC,IAAP,CAAJ,EAAkB;AAChBuY,IAAAA,WAAW,CAACvY,IAAZ,CAAiB,CAACmZ,CAAD,EAAIC,CAAJ,KAAUpZ,IAAI,CAACmZ,CAAC,CAAC5N,IAAH,EAAS6N,CAAC,CAAC7N,IAAX,CAA/B;AACD;;AAED,MAAIjM,KAAK,GAAG,CAACS,KAAb;AACA,QAAM6W,WAAW,GAAGlb,cAAc,EAAlC;AACA,QAAMyM,YAAY,GAAG9J,eAAe,CAACJ,KAAD,CAApC;AACA,QAAMob,OAAO,GAAG,IAAI/E,GAAJ,EAAhB;AACA,QAAMgF,kBAAkB,GAAGpd,MAAM,CAAC,IAAIoY,GAAJ,EAAD,CAAjC;AACA,QAAMiF,WAAW,GAAGrd,MAAM,CAAC,KAAD,CAA1B;AACAxB,EAAAA,IAAI,CAAC6d,WAAD,EAAc,CAAC/M,CAAD,EAAI1O,CAAJ,KAAU;AAC1B,UAAMI,GAAG,GAAGsO,CAAC,CAACtO,GAAd;AACA,UAAMsc,SAAS,GAAGhO,CAAC,CAACuN,KAApB;AACA,UAAMrW,CAAC,GAAGgU,OAAO,GAAGA,OAAO,EAAV,GAAezY,KAAhC;AACA,QAAIa,EAAJ;AACA,QAAIia,KAAJ;AACA,QAAIU,UAAU,GAAGlc,QAAQ,CAACmF,CAAC,CAACpD,KAAF,IAAW,CAAZ,EAAepC,GAAf,CAAzB;;AAEA,QAAIsc,SAAS,IAAIvB,eAAe,CAACe,KAAjC,EAAwC;AACtCla,MAAAA,EAAE,GAAG4D,CAAC,CAACvC,KAAP;AACA4Y,MAAAA,KAAK,GAAGd,eAAe,CAACyB,KAAxB;AACD,KAHD,MAGO;AACL,YAAMC,OAAO,GAAGpb,IAAI,CAACiX,OAAL,CAAatY,GAAb,IAAoB,CAApC;;AAEA,UAAIsc,SAAS,IAAIvB,eAAe,CAAC2B,KAAjC,EAAwC;AACtC,YAAID,OAAJ,EAAa;AACX7a,UAAAA,EAAE,GAAG4D,CAAC,CAACrC,KAAP;AACA0Y,UAAAA,KAAK,GAAGd,eAAe,CAAC2B,KAAxB;AACD,SAHD,MAGO,IAAI9a,EAAE,GAAG4D,CAAC,CAACtC,MAAX,EAAmB;AACxB2Y,UAAAA,KAAK,GAAGd,eAAe,CAAC4B,MAAxB;AACD,SAFM,MAEA;AACR,OAPD,MAOO,IAAI,CAACF,OAAL,EAAc;AACnB7a,QAAAA,EAAE,GAAG4D,CAAC,CAACvC,KAAP;AACA4Y,QAAAA,KAAK,GAAGd,eAAe,CAACyB,KAAxB;AACD,OAHM,MAGA;AACR;;AAED5a,IAAAA,EAAE,GAAGvB,QAAQ,CAACuB,EAAD,EAAK0M,CAAC,CAACD,IAAP,EAAazO,CAAb,CAAb;AACAgC,IAAAA,EAAE,GAAG1E,EAAE,CAAC2D,GAAH,CAAOe,EAAP,IAAa+B,OAAO,CAAC/B,EAAD,CAApB,GAA2B;AAC9BA,MAAAA;AAD8B,KAAhC;;AAIA,QAAI,CAACA,EAAE,CAACF,MAAR,EAAgB;AACd,YAAMA,MAAM,GAAG0Z,WAAW,IAAInQ,YAAY,CAACvJ,MAA3C;AACAE,MAAAA,EAAE,CAACF,MAAH,GAAYrB,QAAQ,CAACqB,MAAD,EAAS4M,CAAC,CAACD,IAAX,EAAiBzO,CAAjB,EAAoBic,KAApB,CAApB;AACD;;AAEDzZ,IAAAA,KAAK,IAAIS,KAAT;;AAEA,UAAMyO,OAAO,GAAG9R,QAAQ,CAAC,EAAD,EAAKyL,YAAL,EAAmB;AACzC7I,MAAAA,KAAK,EAAEma,UAAU,GAAGna,KADqB;AAEzCP,MAAAA,GAAG,EAAEsZ,QAFoC;AAGzChZ,MAAAA,SAAS,EAAEqD,CAAC,CAACrD,SAH4B;AAIzCJ,MAAAA,KAAK,EAAE;AAJkC,KAAnB,EAKrBH,EALqB,CAAxB;;AAOA,QAAIia,KAAK,IAAId,eAAe,CAACyB,KAAzB,IAAkCtf,EAAE,CAACsE,GAAH,CAAO8P,OAAO,CAAC3P,IAAf,CAAtC,EAA4D;AAC1D,YAAMib,EAAE,GAAGpD,OAAO,GAAGA,OAAO,EAAV,GAAezY,KAAjC;;AAEA,YAAMY,IAAI,GAAGzE,EAAE,CAACsE,GAAH,CAAOob,EAAE,CAAC5Z,OAAV,KAAsBuY,eAAtB,GAAwCqB,EAAE,CAACjb,IAA3C,GAAkDib,EAAE,CAAC5Z,OAAlE;AACAsO,MAAAA,OAAO,CAAC3P,IAAR,GAAetB,QAAQ,CAACsB,IAAD,EAAO2M,CAAC,CAACD,IAAT,EAAezO,CAAf,CAAvB;AACD;;AAED,UAAM;AACJ+C,MAAAA;AADI,QAEF2O,OAFJ;;AAIAA,IAAAA,OAAO,CAAC3O,SAAR,GAAoB2J,MAAM,IAAI;AAC5BjM,MAAAA,QAAQ,CAACsC,SAAD,EAAY2J,MAAZ,CAAR;AACA,YAAM+O,WAAW,GAAGC,eAAe,CAACnW,OAApC;AACA,YAAMmJ,CAAC,GAAG+M,WAAW,CAACwB,IAAZ,CAAiBvO,CAAC,IAAIA,CAAC,CAACtO,GAAF,KAAUA,GAAhC,CAAV;AACA,UAAI,CAACsO,CAAL,EAAQ;;AAER,UAAIhC,MAAM,CAACC,SAAP,IAAoB+B,CAAC,CAACuN,KAAF,IAAWd,eAAe,CAAC4B,MAAnD,EAA2D;AACzD;AACD;;AAED,UAAIrO,CAAC,CAAC/J,IAAF,CAAOkL,IAAX,EAAiB;AACf,cAAMA,IAAI,GAAG4L,WAAW,CAAC3O,KAAZ,CAAkB4B,CAAC,IAAIA,CAAC,CAAC/J,IAAF,CAAOkL,IAA9B,CAAb;;AAEA,YAAInB,CAAC,CAACuN,KAAF,IAAWd,eAAe,CAAC2B,KAA/B,EAAsC;AACpC,gBAAMI,MAAM,GAAGzc,QAAQ,CAAC0C,OAAD,EAAUuL,CAAC,CAACD,IAAZ,CAAvB;;AAEA,cAAIyO,MAAM,KAAK,KAAf,EAAsB;AACpB,kBAAMC,QAAQ,GAAGD,MAAM,KAAK,IAAX,GAAkB,CAAlB,GAAsBA,MAAvC;AACAxO,YAAAA,CAAC,CAACkN,OAAF,GAAY,IAAZ;;AAEA,gBAAI,CAAC/L,IAAD,IAASsN,QAAQ,GAAG,CAAxB,EAA2B;AACzB,kBAAIA,QAAQ,IAAI,UAAhB,EAA4BzO,CAAC,CAACoN,YAAF,GAAiB3P,UAAU,CAAC2N,WAAD,EAAcqD,QAAd,CAA3B;AAC5B;AACD;AACF;AACF;;AAED,YAAItN,IAAI,IAAI4L,WAAW,CAAChP,IAAZ,CAAiBiC,CAAC,IAAIA,CAAC,CAACkN,OAAxB,CAAZ,EAA8C;AAC5CY,UAAAA,kBAAkB,CAACjX,OAAnB,CAA2BV,MAA3B,CAAkC6J,CAAlC;;AAEA,cAAI4M,eAAJ,EAAqB;AACnBmB,YAAAA,WAAW,CAAClX,OAAZ,GAAsB,IAAtB;AACD;;AAEDuU,UAAAA,WAAW;AACZ;AACF;AACF,KArCD;;AAuCA,UAAM/C,OAAO,GAAGmB,UAAU,CAACxJ,CAAC,CAAC/J,IAAH,EAAS+M,OAAT,CAA1B;;AAEA,QAAIuK,KAAK,KAAKd,eAAe,CAAC2B,KAA1B,IAAmCxB,eAAvC,EAAwD;AACtDkB,MAAAA,kBAAkB,CAACjX,OAAnB,CAA2BmO,GAA3B,CAA+BhF,CAA/B,EAAkC;AAChCuN,QAAAA,KADgC;AAEhClF,QAAAA,OAFgC;AAGhCrF,QAAAA;AAHgC,OAAlC;AAKD,KAND,MAMO;AACL6K,MAAAA,OAAO,CAAC7I,GAAR,CAAYhF,CAAZ,EAAe;AACbuN,QAAAA,KADa;AAEblF,QAAAA,OAFa;AAGbrF,QAAAA;AAHa,OAAf;AAKD;AACF,GA/GG,CAAJ;AAgHA,QAAM6I,OAAO,GAAGrb,UAAU,CAAC0Z,aAAD,CAA1B;AACA,QAAM4B,WAAW,GAAG3b,OAAO,CAAC0b,OAAD,CAA3B;AACA,QAAME,UAAU,GAAGF,OAAO,KAAKC,WAAZ,IAA2BjW,QAAQ,CAACgW,OAAD,CAAtD;AACA5c,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAI8c,UAAJ,EAAgB;AACd7c,MAAAA,IAAI,CAAC6d,WAAD,EAAc/M,CAAC,IAAI;AACrBA,QAAAA,CAAC,CAAC/J,IAAF,CAAOgB,KAAP,CAAa;AACXvE,UAAAA,OAAO,EAAEmZ;AADE,SAAb;AAGD,OAJG,CAAJ;AAKD;AACF,GARc,EAQZ,CAACA,OAAD,CARY,CAAf;AASA3c,EAAAA,IAAI,CAAC2e,OAAD,EAAU,CAAC/X,CAAD,EAAIkK,CAAJ,KAAU;AACtB,QAAI8N,kBAAkB,CAACjX,OAAnB,CAA2B8Q,IAA/B,EAAqC;AACnC,YAAM+G,GAAG,GAAG3B,WAAW,CAAC4B,SAAZ,CAAsB/R,KAAK,IAAIA,KAAK,CAAClL,GAAN,KAAcsO,CAAC,CAACtO,GAA/C,CAAZ;AACAqb,MAAAA,WAAW,CAACjC,MAAZ,CAAmB4D,GAAnB,EAAwB,CAAxB;AACD;AACF,GALG,CAAJ;AAMAzf,EAAAA,eAAe,CAAC,MAAM;AACpBC,IAAAA,IAAI,CAAC4e,kBAAkB,CAACjX,OAAnB,CAA2B8Q,IAA3B,GAAkCmG,kBAAkB,CAACjX,OAArD,GAA+DgX,OAAhE,EAAyE,QAG1E7N,CAH0E,KAGpE;AAAA,UAHqE;AAC5EuN,QAAAA,KAD4E;AAE5EvK,QAAAA;AAF4E,OAGrE;AACP,YAAM;AACJ/M,QAAAA;AADI,UAEF+J,CAFJ;AAGAA,MAAAA,CAAC,CAACuN,KAAF,GAAUA,KAAV;AACAha,MAAAA,GAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAAC+C,GAAJ,CAAQL,IAAR,CAAvB;;AAEA,UAAI8V,UAAU,IAAIwB,KAAK,IAAId,eAAe,CAACyB,KAA3C,EAAkD;AAChDjY,QAAAA,IAAI,CAACgB,KAAL,CAAW;AACTvE,UAAAA,OAAO,EAAEmZ;AADA,SAAX;AAGD;;AAED,UAAI7I,OAAJ,EAAa;AACX5M,QAAAA,UAAU,CAACH,IAAD,EAAO+M,OAAO,CAACzP,GAAf,CAAV;;AAEA,YAAI0C,IAAI,CAAC1C,GAAL,IAAY,CAACwa,WAAW,CAAClX,OAA7B,EAAsC;AACpCZ,UAAAA,IAAI,CAACrB,MAAL,CAAYoO,OAAZ;AACD,SAFD,MAEO;AACL/M,UAAAA,IAAI,CAACgB,KAAL,CAAW+L,OAAX;;AAEA,cAAI+K,WAAW,CAAClX,OAAhB,EAAyB;AACvBkX,YAAAA,WAAW,CAAClX,OAAZ,GAAsB,KAAtB;AACD;AACF;AACF;AACF,KA7BG,CAAJ;AA8BD,GA/Bc,EA+BZpD,KAAK,GAAG,KAAK,CAAR,GAAYwX,IA/BL,CAAf;;AAiCA,QAAM2D,iBAAiB,GAAGC,MAAM,IAAIte,KAAK,CAAC+Z,aAAN,CAAoB/Z,KAAK,CAACue,QAA1B,EAAoC,IAApC,EAA0C/B,WAAW,CAACrX,GAAZ,CAAgB,CAACsK,CAAD,EAAI1O,CAAJ,KAAU;AACtG,UAAM;AACJ+W,MAAAA;AADI,QAEFwF,OAAO,CAAC1P,GAAR,CAAY6B,CAAZ,KAAkBA,CAAC,CAAC/J,IAFxB;AAGA,UAAM8Y,IAAI,GAAGF,MAAM,CAAC3d,QAAQ,CAAC,EAAD,EAAKmX,OAAL,CAAT,EAAwBrI,CAAC,CAACD,IAA1B,EAAgCC,CAAhC,EAAmC1O,CAAnC,CAAnB;AACA,WAAOyd,IAAI,IAAIA,IAAI,CAAC3N,IAAb,GAAoB7Q,KAAK,CAAC+Z,aAAN,CAAoByE,IAAI,CAAC3N,IAAzB,EAA+BlQ,QAAQ,CAAC,EAAD,EAAK6d,IAAI,CAACtc,KAAV,EAAiB;AACjFf,MAAAA,GAAG,EAAE9C,EAAE,CAACogB,GAAH,CAAOhP,CAAC,CAACtO,GAAT,KAAiB9C,EAAE,CAACiY,GAAH,CAAO7G,CAAC,CAACtO,GAAT,CAAjB,GAAiCsO,CAAC,CAACtO,GAAnC,GAAyCsO,CAAC,CAAC/J,IAAF,CAAOqK,EAD4B;AAEjF/M,MAAAA,GAAG,EAAEwb,IAAI,CAACxb;AAFuE,KAAjB,CAAvC,CAApB,GAGDwb,IAHN;AAID,GAT6E,CAA1C,CAApC;;AAWA,SAAOxb,GAAG,GAAG,CAACqb,iBAAD,EAAoBrb,GAApB,CAAH,GAA8Bqb,iBAAxC;AACD;;AACD,IAAIK,OAAO,GAAG,CAAd;;AAEA,SAAS5B,OAAT,CAAiB/Y,KAAjB,SAGG2Y,eAHH,EAGoB;AAAA,MAHI;AACtBvb,IAAAA,GADsB;AAEtBqB,IAAAA,IAAI,GAAGrB;AAFe,GAGJ;;AAClB,MAAIqB,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAMua,MAAM,GAAG,IAAIjL,GAAJ,EAAf;AACA,WAAO/N,KAAK,CAACoB,GAAN,CAAUqK,IAAI,IAAI;AACvB,YAAMC,CAAC,GAAGiN,eAAe,IAAIA,eAAe,CAACsB,IAAhB,CAAqBvO,CAAC,IAAIA,CAAC,CAACD,IAAF,KAAWA,IAAX,IAAmBC,CAAC,CAACuN,KAAF,KAAYd,eAAe,CAAC2B,KAA/C,IAAwD,CAACd,MAAM,CAAC4B,GAAP,CAAWlP,CAAX,CAAnF,CAA7B;;AAEA,UAAIA,CAAJ,EAAO;AACLsN,QAAAA,MAAM,CAAChX,GAAP,CAAW0J,CAAX;AACA,eAAOA,CAAC,CAACtO,GAAT;AACD;;AAED,aAAOud,OAAO,EAAd;AACD,KATM,CAAP;AAUD;;AAED,SAAOrgB,EAAE,CAACsE,GAAH,CAAOH,IAAP,IAAeuB,KAAf,GAAuB1F,EAAE,CAACsD,GAAH,CAAOa,IAAP,IAAeuB,KAAK,CAACoB,GAAN,CAAU3C,IAAV,CAAf,GAAiClE,OAAO,CAACkE,IAAD,CAAtE;AACD;;AAED,MAAMoc,WAAW,GAAG,CAAC,UAAD,CAApB;;AACA,SAASC,MAAT,CAAgBzJ,IAAhB,EAAsB;AACpB,MAAI;AACF7Q,IAAAA;AADE,MAEA6Q,IAFJ;AAAA,MAGIlT,KAAK,GAAGoX,6BAA6B,CAAClE,IAAD,EAAOwJ,WAAP,CAHzC;;AAKA,SAAOra,QAAQ,CAACmX,SAAS,CAACxZ,KAAD,CAAV,CAAf;AACD;;AAED,MAAM4c,WAAW,GAAG,CAAC,OAAD,EAAU,UAAV,CAApB;;AACA,SAASC,KAAT,CAAe3J,IAAf,EAAqB;AACnB,MAAI;AACFrR,IAAAA,KADE;AAEFQ,IAAAA;AAFE,MAGA6Q,IAHJ;AAAA,MAIIlT,KAAK,GAAGoX,6BAA6B,CAAClE,IAAD,EAAO0J,WAAP,CAJzC;;AAMA,QAAME,MAAM,GAAGlD,QAAQ,CAAC/X,KAAK,CAAC9C,MAAP,EAAeiB,KAAf,CAAvB;AACA,SAAO6B,KAAK,CAACoB,GAAN,CAAU,CAACqK,IAAD,EAAOgL,KAAP,KAAiB;AAChC,UAAM/M,MAAM,GAAGlJ,QAAQ,CAACiL,IAAD,EAAOgL,KAAP,CAAvB;AACA,WAAOnc,EAAE,CAACsD,GAAH,CAAO8L,MAAP,IAAiBA,MAAM,CAACuR,MAAM,CAACxE,KAAD,CAAP,CAAvB,GAAyC/M,MAAhD;AACD,GAHM,CAAP;AAID;;AAED,MAAMwR,SAAS,GAAG,CAAC,OAAD,EAAU,UAAV,CAAlB;;AACA,SAASC,UAAT,CAAoB9J,IAApB,EAA0B;AACxB,MAAI;AACFrR,IAAAA,KADE;AAEFQ,IAAAA;AAFE,MAGA6Q,IAHJ;AAAA,MAIIlT,KAAK,GAAGoX,6BAA6B,CAAClE,IAAD,EAAO6J,SAAP,CAJzC;;AAMA,SAAO9C,aAAa,CAACpY,KAAD,EAAQ7B,KAAR,CAAb,CAA4BqC,QAA5B,CAAP;AACD;;AAED,MAAM4a,aAAN,SAA4BtP,UAA5B,CAAuC;AACrC/E,EAAAA,WAAW,CAAC5J,MAAD,EAASQ,IAAT,EAAe;AACxB;AACA,SAAKP,GAAL,GAAW,KAAK,CAAhB;AACA,SAAKyP,IAAL,GAAY,IAAZ;AACA,SAAKwO,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKlH,OAAL,GAAe,IAAIpG,GAAJ,EAAf;AACA,SAAK5Q,MAAL,GAAcA,MAAd;AACA,SAAKke,IAAL,GAAYtf,kBAAkB,CAAC,GAAG4B,IAAJ,CAA9B;;AAEA,UAAMD,KAAK,GAAG,KAAK4d,IAAL,EAAd;;AAEA,UAAM9I,QAAQ,GAAG9V,eAAe,CAACgB,KAAD,CAAhC;AACAf,IAAAA,WAAW,CAAC,IAAD,EAAO6V,QAAQ,CAACQ,MAAT,CAAgBtV,KAAhB,CAAP,CAAX;AACD;;AAED6Q,EAAAA,OAAO,CAACgN,GAAD,EAAM;AACX,UAAM7d,KAAK,GAAG,KAAK4d,IAAL,EAAd;;AAEA,UAAME,QAAQ,GAAG,KAAK3R,GAAL,EAAjB;;AAEA,QAAI,CAACxO,OAAO,CAACqC,KAAD,EAAQ8d,QAAR,CAAZ,EAA+B;AAC7Blf,MAAAA,WAAW,CAAC,IAAD,CAAX,CAAkBgU,QAAlB,CAA2B5S,KAA3B;;AAEA,WAAKkP,SAAL,CAAelP,KAAf,EAAsB,KAAKmP,IAA3B;AACD;;AAED,QAAI,CAAC,KAAKA,IAAN,IAAc4O,SAAS,CAAC,KAAKtH,OAAN,CAA3B,EAA2C;AACzCuH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AAEDJ,EAAAA,IAAI,GAAG;AACL,UAAMK,MAAM,GAAGrhB,EAAE,CAAC6G,GAAH,CAAO,KAAKhE,MAAZ,IAAsB,KAAKA,MAAL,CAAYiE,GAAZ,CAAgB1G,aAAhB,CAAtB,GAAuDH,OAAO,CAACG,aAAa,CAAC,KAAKyC,MAAN,CAAd,CAA7E;AACA,WAAO,KAAKke,IAAL,CAAU,GAAGM,MAAb,CAAP;AACD;;AAEDxK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKtE,IAAL,IAAa,CAAC4O,SAAS,CAAC,KAAKtH,OAAN,CAA3B,EAA2C;AACzC,WAAKtH,IAAL,GAAY,KAAZ;AACAjS,MAAAA,IAAI,CAAC4B,UAAU,CAAC,IAAD,CAAX,EAAmB4P,IAAI,IAAI;AAC7BA,QAAAA,IAAI,CAACwC,IAAL,GAAY,KAAZ;AACD,OAFG,CAAJ;;AAIA,UAAInU,OAAO,CAACwO,aAAZ,EAA2B;AACzBpO,QAAAA,GAAG,CAAC2Q,cAAJ,CAAmB,MAAM,KAAK+C,OAAL,EAAzB;AACAmN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAHD,MAGO;AACLxgB,QAAAA,SAAS,CAACyH,KAAV,CAAgB,IAAhB;AACD;AACF;AACF;;AAED8J,EAAAA,OAAO,GAAG;AACR,QAAIP,QAAQ,GAAG,CAAf;AACAtR,IAAAA,IAAI,CAACL,OAAO,CAAC,KAAK4C,MAAN,CAAR,EAAuBA,MAAM,IAAI;AACnC,UAAIhC,aAAa,CAACgC,MAAD,CAAjB,EAA2B;AACzB5B,QAAAA,gBAAgB,CAAC4B,MAAD,EAAS,IAAT,CAAhB;AACD;;AAED,UAAI0O,YAAY,CAAC1O,MAAD,CAAhB,EAA0B;AACxB,YAAI,CAACA,MAAM,CAAC0P,IAAZ,EAAkB;AAChB,eAAKsH,OAAL,CAAanS,GAAb,CAAiB7E,MAAjB;AACD;;AAED+O,QAAAA,QAAQ,GAAGnI,IAAI,CAAC6X,GAAL,CAAS1P,QAAT,EAAmB/O,MAAM,CAAC+O,QAAP,GAAkB,CAArC,CAAX;AACD;AACF,KAZG,CAAJ;AAaA,SAAKA,QAAL,GAAgBA,QAAhB;;AAEA,SAAKiF,MAAL;AACD;;AAEDxE,EAAAA,OAAO,GAAG;AACR/R,IAAAA,IAAI,CAACL,OAAO,CAAC,KAAK4C,MAAN,CAAR,EAAuBA,MAAM,IAAI;AACnC,UAAIhC,aAAa,CAACgC,MAAD,CAAjB,EAA2B;AACzB3B,QAAAA,mBAAmB,CAAC2B,MAAD,EAAS,IAAT,CAAnB;AACD;AACF,KAJG,CAAJ;;AAMA,SAAKgX,OAAL,CAAaxI,KAAb;;AAEA+P,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAEDzK,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,QAAIA,KAAK,CAACpE,IAAN,IAAc,QAAlB,EAA4B;AAC1B,UAAIoE,KAAK,CAACrE,IAAV,EAAgB;AACd,aAAK0B,OAAL;AACD,OAFD,MAEO;AACL,aAAK4F,OAAL,CAAanS,GAAb,CAAiBkP,KAAK,CAACnE,MAAvB;;AAEA,aAAKoE,MAAL;AACD;AACF,KARD,MAQO,IAAID,KAAK,CAACpE,IAAN,IAAc,MAAlB,EAA0B;AAC7B,WAAKqH,OAAL,CAAatS,MAAb,CAAoBqP,KAAK,CAACnE,MAA1B;AACD,KAFI,MAEE,IAAImE,KAAK,CAACpE,IAAN,IAAc,UAAlB,EAA8B;AACjC,WAAKZ,QAAL,GAAgB3R,OAAO,CAAC,KAAK4C,MAAN,CAAP,CAAqB0e,MAArB,CAA4B,CAACC,OAAD,EAAU/O,MAAV,KAAqBhJ,IAAI,CAAC6X,GAAL,CAASE,OAAT,EAAkB,CAACjQ,YAAY,CAACkB,MAAD,CAAZ,GAAuBA,MAAM,CAACb,QAA9B,GAAyC,CAA1C,IAA+C,CAAjE,CAAjD,EAAsH,CAAtH,CAAhB;AACD;AACN;;AAnGoC;;AAuGvC,SAAS6P,MAAT,CAAgB5e,MAAhB,EAAwB;AACtB,SAAOA,MAAM,CAAC0P,IAAP,KAAgB,KAAvB;AACD;;AAED,SAAS4O,SAAT,CAAmB/N,MAAnB,EAA2B;AACzB,SAAO,CAACA,MAAM,CAAC2F,IAAR,IAAgBC,KAAK,CAACvU,IAAN,CAAW2O,MAAX,EAAmB5D,KAAnB,CAAyBiS,MAAzB,CAAvB;AACD;;AAED,SAASL,UAAT,CAAoBM,IAApB,EAA0B;AACxB,MAAI,CAACA,IAAI,CAACnP,IAAV,EAAgB;AACdmP,IAAAA,IAAI,CAACnP,IAAL,GAAY,IAAZ;AACAjS,IAAAA,IAAI,CAAC4B,UAAU,CAACwf,IAAD,CAAX,EAAmB5P,IAAI,IAAI;AAC7BA,MAAAA,IAAI,CAACwC,IAAL,GAAY,IAAZ;AACD,KAFG,CAAJ;AAGA3T,IAAAA,kBAAkB,CAAC+gB,IAAD,EAAO;AACvBlP,MAAAA,IAAI,EAAE,MADiB;AAEvBC,MAAAA,MAAM,EAAEiP;AAFe,KAAP,CAAlB;AAID;AACF;;AAED,MAAMhd,EAAE,GAAG,UAAC7B,MAAD;AAAA,qCAAYQ,IAAZ;AAAYA,IAAAA,IAAZ;AAAA;;AAAA,SAAqB,IAAIyd,aAAJ,CAAkBje,MAAlB,EAA0BQ,IAA1B,CAArB;AAAA,CAAX;;AACA,MAAM2O,WAAW,GAAG,UAACnP,MAAD;AAAA,qCAAYQ,IAAZ;AAAYA,IAAAA,IAAZ;AAAA;;AAAA,SAAsB3C,oBAAoB,IAAI,IAAIogB,aAAJ,CAAkBje,MAAlB,EAA0BQ,IAA1B,CAA9C;AAAA,CAApB;;AAEAlD,OAAO,CAACqC,MAAR,CAAe;AACbd,EAAAA,wBADa;AAEbgD,EAAAA,EAAE,EAAE,CAAC7B,MAAD,EAASQ,IAAT,KAAkB,IAAIyd,aAAJ,CAAkBje,MAAlB,EAA0BQ,IAA1B;AAFT,CAAf;AAIA,MAAM2C,MAAM,GAAGpF,SAAS,CAACqT,OAAzB;AAEA,SAAStD,UAAT,EAAqB6I,UAArB,EAAiChI,UAAjC,EAA6CsP,aAA7C,EAA4DN,MAA5D,EAAoElF,aAApE,EAAmFU,SAAnF,EAA8F1I,WAA9F,EAA2GoN,KAA3G,EAAkHG,UAAlH,EAA8Hrc,MAA9H,EAAsIwF,OAAtI,EAA+IvD,OAA/I,EAAwJuL,WAAxJ,EAAqKtN,EAArK,EAAyKsB,MAAzK,EAAiL2B,QAAjL,EAA2L0V,SAA3L,EAAsMG,YAAtM,EAAoNpB,UAApN,EAAgOqB,QAAhO,EAA0OK,aAA1O","sourcesContent":["import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = 2 * Math.PI / 3;\nconst c5 = 2 * Math.PI / 4.5;\n\nconst bounceOut = x => {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n    return n1 * x * x;\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n};\n\nconst easings = {\n  linear: x => x,\n  easeInQuad: x => x * x,\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\n  easeInOutQuad: x => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n  easeInCubic: x => x * x * x,\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\n  easeInOutCubic: x => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n  easeInQuart: x => x * x * x * x,\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\n  easeInOutQuart: x => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n  easeInQuint: x => x * x * x * x * x,\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\n  easeInOutQuint: x => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n  easeInSine: x => 1 - Math.cos(x * Math.PI / 2),\n  easeOutSine: x => Math.sin(x * Math.PI / 2),\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\n  easeInExpo: x => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n  easeOutExpo: x => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n  easeInOutExpo: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2,\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\n  easeInOutCirc: x => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n  easeInOutBack: x => x < 0.5 ? Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\n  easeInElastic: x => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\n  easeOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\n  easeInOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2 : Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5) / 2 + 1,\n  easeInBounce: x => 1 - bounceOut(1 - x),\n  easeOutBounce: bounceOut,\n  easeInOutBounce: x => x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAniamtionSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n          animating = Promise.resolve(to(animate, target.stop.bind(target)));\n        }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAniamtionSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAniamtionSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n            const decay = config.decay === true ? 0.998 : config.decay;\n            const e = Math.exp(-(1 - decay) * elapsed);\n            position = from + v0 / (1 - decay) * (1 - e);\n            finished = Math.abs(node.lastPosition - position) < 0.1;\n            velocity = v0 * e;\n          } else {\n              velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n              const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n              const restVelocity = config.restVelocity || precision / 10;\n              const bounceFactor = config.clamp ? 0 : config.bounce;\n              const canBounce = !is.und(bounceFactor);\n              const isGrowing = from == to ? node.v0 > 0 : from < to;\n              let isMoving;\n              let isBouncing = false;\n              const step = 1;\n              const numSteps = Math.ceil(dt / step);\n\n              for (let n = 0; n < numSteps; ++n) {\n                isMoving = Math.abs(velocity) > restVelocity;\n\n                if (!isMoving) {\n                  finished = Math.abs(to - position) <= precision;\n\n                  if (finished) {\n                    break;\n                  }\n                }\n\n                if (canBounce) {\n                  isBouncing = position == to || position > to == isGrowing;\n\n                  if (isBouncing) {\n                    velocity = -velocity * bounceFactor;\n                    position = to;\n                  }\n                }\n\n                const springForce = -config.tension * 0.000001 * (position - to);\n                const dampingForce = -config.friction * 0.001 * velocity;\n                const acceleration = (springForce + dampingForce) / config.mass;\n                velocity = velocity + acceleration * step;\n                position = position + velocity * step;\n              }\n            }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n          this._set(to);\n        }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n          this._stop(prevTo);\n        }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n              anim.onStart == null ? void 0 : anim.onStart(result, this);\n            }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n        this._start();\n      } else if (isAnimating(this) && !hasToChanged) {\n          this._pendingCalls.add(resolve);\n        } else {\n            resolve(getNoopResult(value));\n          }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n      each(BATCHED_EVENTS, key => {\n        const handler = props[key];\n\n        if (is.fun(handler)) {\n          const queue = ctrl['_events'][key];\n\n          props[key] = ({\n            finished,\n            cancelled\n          }) => {\n            const result = queue.get(handler);\n\n            if (result) {\n              if (!finished) result.finished = false;\n              if (cancelled) result.cancelled = true;\n            } else {\n              queue.set(handler, {\n                value: null,\n                finished: finished || false,\n                cancelled: cancelled || false\n              });\n            }\n          };\n\n          if (defaults) {\n            defaults[key] = props[key];\n          }\n        }\n      });\n    }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n      props.pause = true;\n    }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$3 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nfunction useTrail(length, propsArg, deps) {\n  var _passedRef;\n\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n  useLayoutEffect(() => {\n    each(ref.current, (ctrl, i) => {\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  ref['start'] = propsArg => {\n    const results = [];\n    each(ref.current, (ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n\n      if (parent) {\n        results.push(ctrl.start(_extends({}, props, {\n          to: parent.springs\n        })));\n      } else {\n        results.push(ctrl.start(_extends({}, props)));\n      }\n    });\n    return results;\n  };\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => () => {\n    each(usedTransitions.current, t => {\n      if (t.expired) {\n        clearTimeout(t.expirationId);\n      }\n\n      detachRefs(t.ctrl, ref);\n      t.ctrl.stop(true);\n    });\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if (ctrl.ref && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n        this._active.delete(event.parent);\n      } else if (event.type == 'priority') {\n          this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n        }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, easings, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };\n"]},"metadata":{},"sourceType":"module"}